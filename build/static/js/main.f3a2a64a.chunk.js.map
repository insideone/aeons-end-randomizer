{"version":3,"sources":["Redux/Store/Settings/Expansions/Expansions/selected/types.ts","mainTheme.ts","Redux/Store/Settings/Expansions/Expansions/selected/actions.ts","Redux/Store/Settings/Expansions/Languages/types.ts","Redux/Store/Settings/Expansions/Expansions/constants.ts","Redux/Store/Settings/Expansions/Expansions/selected/reducerHelpers/toggleExpansion.ts","Redux/Store/Settings/Expansions/Expansions/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/Expansions/selected/reducer.ts","Redux/Store/Settings/Expansions/Expansions/selected/selectors.ts","Redux/Store/MainContentLoading/index.ts","Redux/Store/Settings/Expansions/Languages/actions.ts","Redux/Store/Settings/Expansions/Expansions/content/types.ts","aer-data/src/ENG/aeonsEnd/index.ts","aer-data/src/ENG/aeonsEnd/nemeses.ts","aer-data/src/ENG/aeonsEnd/mages.ts","aer-data/src/ENG/aeonsEnd/cards.ts","aer-data/src/ENG/aeonsEnd/basicNemesisCards.ts","aer-data/src/ENG/buriedSecrets/index.ts","aer-data/src/ENG/buriedSecrets/nemeses.ts","aer-data/src/ENG/buriedSecrets/mages.ts","aer-data/src/ENG/buriedSecrets/cards.ts","aer-data/src/ENG/buriedSecrets/basicNemesisCards.ts","aer-data/src/ENG/intoTheWild/index.ts","aer-data/src/ENG/intoTheWild/nemeses.ts","aer-data/src/ENG/intoTheWild/mages.ts","aer-data/src/ENG/intoTheWild/cards.ts","aer-data/src/ENG/intoTheWild/treasures.ts","aer-data/src/ENG/legacy/index.ts","aer-data/src/ENG/legacy/nemeses.ts","aer-data/src/ENG/legacy/mages.ts","aer-data/src/ENG/legacy/cards.ts","aer-data/src/ENG/legacy/basicNemesisCards.ts","aer-data/src/ENG/theNewAge/index.ts","aer-data/src/ENG/theNewAge/nemeses.ts","aer-data/src/ENG/theNewAge/mages.ts","aer-data/src/ENG/theNewAge/cards.ts","aer-data/src/ENG/theNewAge/treasures.ts","aer-data/src/ENG/theNewAge/basicNemesisCards.ts","aer-data/src/ENG/theNewAge/upgradedBasicNemesisCards.ts","aer-data/src/ENG/outerDark/index.ts","aer-data/src/ENG/outerDark/nemeses.ts","aer-data/src/ENG/outerDark/mages.ts","aer-data/src/ENG/outerDark/cards.ts","aer-data/src/ENG/outerDark/basicNemesisCards.ts","aer-data/src/ENG/promos/index.ts","aer-data/src/ENG/promos/mages.ts","aer-data/src/ENG/promos/nemeses.ts","aer-data/src/ENG/promos/cards.ts","aer-data/src/ENG/promos/treasures.ts","aer-data/src/ENG/promos/basicNemesisCards.ts","aer-data/src/ENG/promos/upgradedBasicNemesisCards.ts","aer-data/src/ENG/shatteredDreams/index.ts","aer-data/src/ENG/shatteredDreams/nemeses.ts","aer-data/src/ENG/shatteredDreams/mages.ts","aer-data/src/ENG/shatteredDreams/cards.ts","aer-data/src/ENG/shatteredDreams/treasures.ts","aer-data/src/ENG/theAncients/index.ts","aer-data/src/ENG/theAncients/nemeses.ts","aer-data/src/ENG/theAncients/mages.ts","aer-data/src/ENG/theAncients/cards.ts","aer-data/src/ENG/theAncients/treasures.ts","aer-data/src/ENG/theAncients/upgradedBasicNemesisCards.ts","aer-data/src/ENG/theDepths/index.ts","aer-data/src/ENG/theDepths/nemeses.ts","aer-data/src/ENG/theDepths/mages.ts","aer-data/src/ENG/theDepths/cards.ts","aer-data/src/ENG/theNameless/index.ts","aer-data/src/ENG/theNameless/nemeses.ts","aer-data/src/ENG/theNameless/mages.ts","aer-data/src/ENG/theNameless/cards.ts","aer-data/src/ENG/theVoid/index.ts","aer-data/src/ENG/theVoid/nemeses.ts","aer-data/src/ENG/theVoid/mages.ts","aer-data/src/ENG/theVoid/cards.ts","aer-data/src/ENG/warEternal/index.ts","aer-data/src/ENG/warEternal/nemeses.ts","aer-data/src/ENG/warEternal/mages.ts","aer-data/src/ENG/warEternal/cards.ts","aer-data/src/ENG/warEternal/basicNemesisCards.ts","aer-data/src/ENG/outcasts/index.ts","aer-data/src/ENG/outcasts/nemeses.ts","aer-data/src/ENG/outcasts/mages.ts","aer-data/src/ENG/outcasts/cards.ts","aer-data/src/ENG/outcasts/treasures.ts","aer-data/src/ENG/outcasts/basicNemesisCards.ts","aer-data/src/ENG/outcasts/upgradedBasicNemesisCards.ts","aer-data/src/ENG/returnToGravehold/index.ts","aer-data/src/ENG/returnToGravehold/nemeses.ts","aer-data/src/ENG/returnToGravehold/mages.ts","aer-data/src/ENG/returnToGravehold/cards.ts","aer-data/src/ENG/returnToGravehold/treasures.ts","aer-data/src/ENG/southernVillage/index.ts","aer-data/src/ENG/southernVillage/nemeses.ts","aer-data/src/ENG/southernVillage/mages.ts","aer-data/src/ENG/southernVillage/cards.ts","aer-data/src/ENG/southernVillage/treasures.ts","aer-data/src/ENG/theRuins/index.ts","aer-data/src/ENG/theRuins/nemeses.ts","aer-data/src/ENG/theRuins/mages.ts","aer-data/src/ENG/theRuins/cards.ts","aer-data/src/ENG/legacyOfGravehold/cards.ts","aer-data/src/FR/index.ts","aer-data/src/FR/aeonsEnd/index.ts","aer-data/src/FR/aeonsEnd/nemeses.ts","aer-data/src/FR/aeonsEnd/mages.ts","aer-data/src/FR/aeonsEnd/cards.ts","aer-data/src/FR/aeonsEnd/basicNemesisCards.ts","aer-data/src/FR/theDepths/index.ts","aer-data/src/FR/theDepths/nemeses.ts","aer-data/src/FR/theDepths/mages.ts","aer-data/src/FR/theDepths/cards.ts","aer-data/src/FR/theDepths/basicNemesisCards.ts","aer-data/src/FR/theNameless/index.ts","aer-data/src/FR/theNameless/nemeses.ts","aer-data/src/FR/theNameless/mages.ts","aer-data/src/FR/theNameless/cards.ts","aer-data/src/FR/theNameless/basicNemesisCards.ts","aer-data/src/FR/warEternal/index.ts","aer-data/src/FR/warEternal/nemeses.ts","aer-data/src/FR/warEternal/mages.ts","aer-data/src/FR/warEternal/cards.ts","aer-data/src/FR/warEternal/basicNemesisCards.ts","aer-data/src/PL/index.ts","aer-data/src/PL/aeonsEnd/index.ts","aer-data/src/PL/aeonsEnd/nemeses.ts","aer-data/src/PL/aeonsEnd/mages.ts","aer-data/src/PL/aeonsEnd/cards.ts","aer-data/src/PL/aeonsEnd/basicNemesisCards.ts","aer-data/src/PL/theDepths/index.ts","aer-data/src/PL/theDepths/nemeses.ts","aer-data/src/PL/theDepths/mages.ts","aer-data/src/PL/theDepths/cards.ts","aer-data/src/PL/legacy/index.ts","aer-data/src/PL/legacy/nemeses.ts","aer-data/src/PL/legacy/mages.ts","aer-data/src/PL/legacy/cards.ts","aer-data/src/PL/legacy/basicNemesisCards.ts","aer-data/src/PL/theNameless/index.ts","aer-data/src/PL/theNameless/nemeses.ts","aer-data/src/PL/theNameless/mages.ts","aer-data/src/PL/theNameless/cards.ts","aer-data/src/PL/outerDark/index.ts","aer-data/src/PL/outerDark/nemeses.ts","aer-data/src/PL/outerDark/mages.ts","aer-data/src/PL/outerDark/cards.ts","aer-data/src/PL/outerDark/basicNemesisCards.ts","aer-data/src/PL/theVoid/index.ts","aer-data/src/PL/theVoid/nemeses.ts","aer-data/src/PL/theVoid/mages.ts","aer-data/src/PL/theVoid/cards.ts","aer-data/src/PL/warEternal/index.ts","aer-data/src/PL/warEternal/nemeses.ts","aer-data/src/PL/warEternal/mages.ts","aer-data/src/PL/warEternal/cards.ts","aer-data/src/PL/warEternal/basicNemesisCards.ts","aer-data/src/PL/promos/index.ts","aer-data/src/PL/promos/mages.ts","aer-data/src/PL/promos/nemeses.ts","aer-data/src/PL/promos/cards.ts","aer-data/src/PL/promos/treasures.ts","aer-data/src/PL/promos/basicNemesisCards.ts","aer-data/src/DE/index.ts","aer-data/src/DE/aeonsEnd/index.ts","aer-data/src/DE/aeonsEnd/nemeses.ts","aer-data/src/DE/aeonsEnd/mages.ts","aer-data/src/DE/aeonsEnd/cards.ts","aer-data/src/DE/aeonsEnd/basicNemesisCards.ts","aer-data/src/DE/theDepths/index.ts","aer-data/src/DE/theDepths/nemeses.ts","aer-data/src/DE/theDepths/mages.ts","aer-data/src/DE/theDepths/cards.ts","aer-data/src/DE/theNameless/index.ts","aer-data/src/DE/theNameless/nemeses.ts","aer-data/src/DE/theNameless/mages.ts","aer-data/src/DE/theNameless/cards.ts","aer-data/src/DE/outerDark/index.ts","aer-data/src/DE/outerDark/nemeses.ts","aer-data/src/DE/outerDark/mages.ts","aer-data/src/DE/outerDark/cards.ts","aer-data/src/DE/outerDark/basicNemesisCards.ts","aer-data/src/DE/theVoid/index.ts","aer-data/src/DE/theVoid/nemeses.ts","aer-data/src/DE/theVoid/mages.ts","aer-data/src/DE/theVoid/cards.ts","aer-data/src/DE/warEternal/index.ts","aer-data/src/DE/warEternal/nemeses.ts","aer-data/src/DE/warEternal/mages.ts","aer-data/src/DE/warEternal/cards.ts","aer-data/src/DE/warEternal/basicNemesisCards.ts","aer-data/src/DE/promos/index.ts","aer-data/src/DE/promos/mages.ts","aer-data/src/DE/promos/nemeses.ts","aer-data/src/DE/promos/cards.ts","aer-data/src/DE/promos/treasures.ts","aer-data/src/DE/promos/basicNemesisCards.ts","aer-data/src/DE/promos/upgradedBasicNemesisCards.ts","aer-data/src/RU/index.ts","aer-data/src/RU/aeonsEnd/index.ts","aer-data/src/RU/aeonsEnd/nemeses.ts","aer-data/src/RU/aeonsEnd/mages.ts","aer-data/src/RU/aeonsEnd/cards.ts","aer-data/src/RU/aeonsEnd/basicNemesisCards.ts","aer-data/src/RU/promos/index.ts","aer-data/src/RU/promos/mages.ts","aer-data/src/RU/promos/nemeses.ts","aer-data/src/RU/promos/cards.ts","aer-data/src/RU/promos/treasures.ts","aer-data/src/RU/promos/basicNemesisCards.ts","aer-data/src/RU/promos/upgradedBasicNemesisCards.ts","aer-data/src/turnOrderSetups.ts","aer-data/src/createNormalizedData.ts","aer-data/src/index.ts","aer-data/src/ENG/index.ts","aer-data/src/ENG/legacyOfGravehold/index.ts","aer-data/src/ENG/legacyOfGravehold/nemeses.ts","aer-data/src/ENG/legacyOfGravehold/mages.ts","aer-data/src/ENG/legacyOfGravehold/basicNemesisCards.ts","aer-data/src/ENG/legacyOfGravehold/upgradedBasicNemesisCards.ts","aer-data/src/ENG/community/index.ts","aer-data/src/ENG/community/mages.ts","aer-data/src/ENG/community/nemeses.ts","aer-data/src/ENG/community/cards.ts","aer-data/src/marketSetups.ts","Redux/Store/Settings/Expansions/Languages/constants.ts","Redux/Store/Settings/Expansions/Languages/reducerHelpers/select.ts","Redux/Store/Settings/Expansions/Languages/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/Languages/reducer.ts","Redux/Store/Settings/Expansions/Languages/selectors.ts","Redux/Store/Settings/Expansions/Expansions/content/actions.ts","Redux/Store/Settings/Expansions/Expansions/content/reducer.ts","Redux/Store/Settings/Expansions/Expansions/content/selectors.ts","Redux/Store/Settings/Expansions/Expansions/ids/actions.ts","Redux/Store/Settings/Expansions/Expansions/ids/types.ts","Redux/Store/Settings/Expansions/Expansions/ids/reducer.ts","Redux/Store/Settings/Expansions/Expansions/ids/selectors.ts","Redux/Store/Settings/Expansions/Expansions/index.ts","Redux/Store/Settings/Expansions/Cards/content/types.ts","Redux/Store/Settings/Expansions/Cards/selected/types.ts","Redux/Store/Settings/Expansions/helpers.ts","Redux/Store/Settings/Expansions/Cards/content/actions.ts","Redux/Store/Settings/Expansions/Cards/content/reducer.ts","Redux/Store/Settings/Expansions/Cards/content/selectors.ts","Redux/Store/Settings/Expansions/Cards/selected/actions.ts","Redux/Store/Settings/Expansions/Cards/ids/types.ts","Redux/Store/Settings/Expansions/Cards/constants.ts","Redux/Store/Settings/Expansions/Cards/selected/sideEffects.ts","Redux/Store/Settings/Expansions/Cards/selected/reducerHelpers/toggleCard.ts","Redux/Store/Settings/Expansions/Cards/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/Cards/selected/reducer.ts","Redux/Store/Settings/Expansions/Cards/selected/selectors.ts","Redux/Store/Settings/Expansions/Cards/ids/actions.ts","Redux/Store/Settings/Expansions/Cards/ids/reducer.ts","Redux/Store/Settings/Expansions/Cards/ids/selectors.ts","Redux/Store/Settings/Expansions/Cards/index.ts","Redux/Store/Settings/Expansions/Nemeses/content/types.ts","Redux/Store/Settings/Expansions/Nemeses/selected/types.ts","Redux/Store/Settings/Expansions/Nemeses/content/actions.ts","Redux/Store/Settings/Expansions/Nemeses/content/reducer.ts","Redux/Store/Settings/Expansions/Nemeses/content/selectors.ts","Redux/Store/Settings/Expansions/Nemeses/selected/actions.ts","Redux/Store/Settings/Expansions/Nemeses/ids/types.ts","Redux/Store/Settings/Expansions/Nemeses/constants.ts","Redux/Store/Settings/Expansions/Nemeses/selected/sideEffects.ts","Redux/Store/Settings/Expansions/Nemeses/selected/reducerHelpers/toggle.ts","Redux/Store/Settings/Expansions/Nemeses/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/Nemeses/selected/reducer.ts","Redux/Store/Settings/Expansions/Nemeses/selected/selectors.ts","Redux/Store/Settings/Expansions/Nemeses/ids/actions.ts","Redux/Store/Settings/Expansions/Nemeses/ids/reducer.ts","Redux/Store/Settings/Expansions/Nemeses/ids/selectors.ts","Redux/Store/Settings/Expansions/Nemeses/index.ts","Redux/Store/Settings/Expansions/Mages/content/types.ts","Redux/Store/Settings/Expansions/Mages/selected/types.ts","Redux/Store/Settings/Expansions/Mages/content/actions.ts","Redux/Store/Settings/Expansions/Mages/content/reducer.ts","Redux/Store/Settings/Expansions/Mages/content/selectors.ts","Redux/Store/Settings/Expansions/Mages/selected/actions.ts","Redux/Store/Settings/Expansions/Mages/ids/types.ts","Redux/Store/Settings/Expansions/Mages/constants.ts","Redux/Store/Settings/Expansions/Mages/selected/sideEffects.ts","Redux/Store/Settings/Expansions/Mages/selected/reducerHelpers/toggle.ts","Redux/Store/Settings/Expansions/Mages/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/Mages/selected/reducer.ts","Redux/Store/Settings/Expansions/Mages/selected/selectors.ts","Redux/Store/Settings/Expansions/Mages/ids/actions.ts","Redux/Store/Settings/Expansions/Mages/ids/reducer.ts","Redux/Store/Settings/Expansions/Mages/ids/selectors.ts","Redux/Store/Settings/Expansions/Mages/index.ts","Redux/Store/Settings/Expansions/Treasures/content/types.ts","Redux/Store/Settings/Expansions/Treasures/selected/types.ts","Redux/Store/Settings/Expansions/Treasures/content/actions.ts","Redux/Store/Settings/Expansions/Treasures/content/reducer.ts","Redux/Store/Settings/Expansions/Treasures/content/selectors.ts","Redux/Store/Settings/Expansions/Treasures/selected/actions.ts","Redux/Store/Settings/Expansions/Treasures/ids/types.ts","Redux/Store/Settings/Expansions/Treasures/constants.ts","Redux/Store/Settings/Expansions/Treasures/selected/sideEffects.ts","Redux/Store/Settings/Expansions/Treasures/selected/reducerHelpers/toggle.ts","Redux/Store/Settings/Expansions/Treasures/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/Treasures/selected/reducer.ts","Redux/Store/Settings/Expansions/Treasures/selected/selectors.ts","Redux/Store/Settings/Expansions/Treasures/ids/actions.ts","Redux/Store/Settings/Expansions/Treasures/ids/reducer.ts","Redux/Store/Settings/Expansions/Treasures/ids/selectors.ts","Redux/Store/Settings/Expansions/Treasures/index.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/content/types.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/types.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/content/actions.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/content/reducer.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/content/selectors.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/actions.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/ids/types.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/constants.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/sideEffects.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/reducerHelpers/toggleCard.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/reducer.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/selected/selectors.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/ids/actions.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/ids/reducer.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/ids/selectors.ts","Redux/Store/Settings/Expansions/BasicNemesisCards/index.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content/types.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/types.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content/actions.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content/reducer.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content/selectors.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/actions.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/ids/types.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/constants.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/sideEffects.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/reducerHelpers/toggle.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/reducer.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/selected/selectors.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/ids/actions.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/ids/reducer.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/ids/selectors.ts","Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/index.ts","Redux/Store/Settings/Expansions/index.ts","Redux/Store/Settings/Expansions/selectors.ts","Redux/Store/Settings/SupplySetups/types.ts","Redux/Store/Settings/SupplySetups/actions.ts","Redux/Store/Settings/Accordions.ts","Redux/Store/Settings/SupplySetups/constants.ts","Redux/Store/Settings/SupplySetups/helpers.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/toggleAll.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/toggleSetup.ts","helpers/index.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/saveCustomSetup.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/editCustomSetup.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/cancelEditSetup.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/deleteCustomSetup.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/fetchFromDb.ts","Redux/Store/Settings/SupplySetups/migrations/index.ts","Redux/Store/Settings/SupplySetups/migrations/migrateToPredefinedWithIds.ts","Redux/Store/Settings/SupplySetups/reducerHelpers/migrateAfterFetch.ts","Redux/Store/Settings/SupplySetups/reducer.ts","Redux/Store/Settings/SupplySetups/selectors.ts","Redux/Store/Randomizer/Nemesis/index.ts","Redux/Store/Settings/index.ts","Redux/helpers.ts","Redux/Store/Randomizer/BasicNemesisCards/PlayerCount/types.ts","Redux/Store/Randomizer/BasicNemesisCards/PlayerCount/actions.ts","Redux/Store/Randomizer/BasicNemesisCards/RandomCards/types.ts","Redux/Store/Randomizer/BasicNemesisCards/PlayerCount/selectors.ts","Redux/Store/Randomizer/BasicNemesisCards/RandomCards/actions.ts","Redux/Store/Randomizer/Mages/Count/index.ts","Redux/Store/Randomizer/BasicNemesisCards/RandomCards/reducerHelpers/helpers.ts","Redux/Store/Randomizer/BasicNemesisCards/RandomCards/reducerHelpers/createDeck.ts","Redux/Store/Randomizer/BasicNemesisCards/RandomCards/reducer.ts","Redux/Store/Randomizer/BasicNemesisCards/index.ts","Redux/Store/Randomizer/BasicNemesisCards/RandomCards/selectors.ts","Redux/Store/Randomizer/BasicNemesisCards/PlayerCount/reducer.ts","Redux/Store/Randomizer/Mages/Recruited/index.ts","Redux/Store/Randomizer/Supply/RandomSetup/index.ts","Redux/Store/Randomizer/Mages/index.ts","Redux/Store/Randomizer/Supply/LockedCards/index.ts","Redux/Store/TurnOrder/Configuration/types.ts","Redux/Store/Randomizer/Supply/index.ts","Redux/Store/Randomizer/index.ts","Redux/Store/TurnOrder/Configuration/actions.ts","Redux/Store/TurnOrder/ActiveGame/types.ts","Redux/Store/TurnOrder/Configuration/constants.ts","Redux/Store/TurnOrder/Configuration/helpers.ts","Redux/Store/TurnOrder/Configuration/reducerHelpers/setMode.ts","Redux/Store/TurnOrder/Configuration/reducerHelpers/selectPlayerCount.ts","Redux/Store/TurnOrder/Configuration/reducerHelpers/selectSetup.ts","Redux/Store/TurnOrder/ActiveGame/actions.ts","Redux/Store/Expeditions/Expeditions/types.ts","Redux/Store/TurnOrder/ActiveGame/constants.ts","Redux/Store/TurnOrder/ActiveGame/helpers.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/draw.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/newRound.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/addToTop.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/addToBottom.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/shuffleIntoDeck.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/startGame.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/resetGame.ts","Redux/Store/TurnOrder/ActiveGame/reducerHelpers/fetchFromDb.ts","Redux/Store/TurnOrder/ActiveGame/reducer.ts","Redux/Store/TurnOrder/ActiveGame/selectors.ts","Redux/Store/TurnOrder/Configuration/reducerHelpers/fetchFromDb.ts","Redux/Store/TurnOrder/Configuration/reducer.ts","Redux/Store/TurnOrder/Configuration/selectors.ts","Redux/Store/TurnOrder/index.ts","Redux/Store/Expeditions/Expeditions/actions.ts","Redux/Store/Expeditions/Variants.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createSettingsSnapshot/determineUsedExpansions.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createSettingsSnapshot/handleExistingSettingsSnapshot.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createSettingsSnapshot/handleNewSettingsSnapshot.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createSettingsSnapshot/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createExpeditionConfig/createSupplyIds.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createExpeditionConfig/createTreasureIds.ts","Redux/Store/Expeditions/Expeditions/migrations/index.ts","Redux/Store/Expeditions/Expeditions/migrations/migrateToExpeditionDSL.ts","Redux/Store/Expeditions/Expeditions/migrations/migrateToSettingsSnapshot.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createExpeditionConfig/handleWithoutConfig.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createExpeditionConfig/generateBattles.ts","Redux/Store/Expeditions/Expeditions/helpers/convertExpeditionToConfig.ts","Redux/Store/Expeditions/Expeditions/helpers/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createExpeditionConfig/handleExistingConfig.ts","Redux/Store/Expeditions/Expeditions/helpers/convertExpeditionFromConfig.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createExpeditionConfig/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createBattle/rollNemesisId.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createBattle/getStillAvailableNemesisIds.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createBattle/rollNewUpgradedNemesisCards.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createBattle/getUpgradedBasicNemesisIdsByBattleTier.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createBattle/getUpgradedBasicNemesisCardsResult.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createBattle/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/helpers.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollWinRewards/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollWinRewards/rollTreasureIdsByLevel.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollWinRewards/rollSupplyRewards.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/handleTreasure.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/handleSupply.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/handleMage.ts","Redux/Store/Expeditions/Expeditions/sideEffects/shareExpedition/index.ts","Redux/Store/Expeditions/Expeditions/sideEffects/createRewards/index.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/helpers.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/createExpedition.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/deleteExpedition.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/rollBattle.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/winBattle.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/startBattle.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/loseBattle.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/rollLoss.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/acceptLoss.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/finishBattle.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/finishExpedition.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/fetchFromDb.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/migrateAfterFetch.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/shareExpedition.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/resolveNarrative.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/generateRewards.ts","Redux/Store/Expeditions/Expeditions/reducerHelpers/acceptRewards.ts","Redux/Store/Expeditions/Expeditions/reducer.ts","Redux/Store/Expeditions/Expeditions/selectors.ts","aer-types/types/data.ts","aer-types/types/expeditions.ts","aer-types/types/market.ts","aer-types/types/turnOrder.ts","Redux/Store/index.ts","Redux/Store/Expeditions/index.ts","Redux/Store/selectors.ts","components/organisms/Content/HeaderPlaceholder.tsx","components/organisms/Content/Wrapper.tsx","components/atoms/Card.tsx","components/atoms/H1.tsx","components/atoms/H2.tsx","components/atoms/P.tsx","components/atoms/A.tsx","components/atoms/Li.tsx","components/pages/About/index.tsx","components/molecules/ExpansionPanel/ExpansionPanelDetails.tsx","components/molecules/ExpansionPanel/StyledExpansionPanel.tsx","components/molecules/ExpansionPanel/StyledExpansionPanelSummary.tsx","components/atoms/Heading.tsx","components/molecules/ExpansionPanel/index.tsx","components/molecules/ListWrapper/index.tsx","components/atoms/IconButton.tsx","components/molecules/CheckboxWithControls.tsx","components/pages/Settings/Expansions/ActiveSets/ExpansionList/Checkbox.tsx","components/pages/Settings/Expansions/ActiveSets/ExpansionList/index.tsx","components/pages/Settings/Expansions/ActiveSets/Standalones.tsx","components/pages/Settings/Expansions/ActiveSets/Mini.tsx","components/pages/Settings/Expansions/ActiveSets/Promos.tsx","components/pages/Settings/Expansions/ActiveSets/index.tsx","components/pages/Settings/Expansions/index.tsx","hooks/useExpansionHandling.tsx","components/molecules/Modal/Wrapper.tsx","components/molecules/Modal/Backdrop.tsx","components/molecules/Modal/Content.tsx","components/molecules/Modal/Header.tsx","components/molecules/Modal/Body.tsx","components/molecules/Modal/Title.tsx","components/molecules/Modal/CloseButton.tsx","components/molecules/Modal/index.tsx","components/atoms/ModalBodyWrapper.tsx","components/atoms/ModalFooterWrapper.tsx","components/molecules/Prompt.tsx","hooks/useModal.tsx","components/molecules/EditButton.tsx","components/molecules/DeleteButton.tsx","components/molecules/SupplyPreview/Wrapper.tsx","components/molecules/SupplyPreview/TileList.tsx","components/molecules/SupplyPreview/TileListItem.tsx","components/molecules/SupplyPreview/SupplyName.tsx","components/molecules/SupplyPreview/index.tsx","components/pages/Settings/Supply/CheckboxWithPreview/PreviewWrapper.tsx","components/pages/Settings/Supply/CheckboxWithPreview/Wrapper.tsx","components/pages/Settings/Supply/CheckboxWithPreview/index.tsx","components/pages/Settings/Supply/CustomSetupEdit/InputField.tsx","components/pages/Settings/Supply/CustomSetupEdit/SelectField.tsx","components/pages/Settings/Supply/CustomSetupEdit/SelectFieldsWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrintWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/CancelButton.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrint.tsx","components/pages/Settings/Supply/CustomSetupEdit/ListWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrintList.tsx","components/pages/Settings/Supply/CustomSetupEdit/MainControlsWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/MainControls.tsx","components/pages/Settings/Supply/CustomSetupEdit/Wrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/index.tsx","components/pages/Settings/Supply/CustomSetups/CheckboxWithPreviewControls.tsx","components/pages/Settings/Supply/CustomSetups/Checkbox.tsx","components/pages/Settings/Supply/CustomSetups/SetupCreation.tsx","components/pages/Settings/Supply/CustomSetups/index.tsx","components/pages/Settings/Supply/PredefinedSetups/index.tsx","components/pages/Settings/Supply/SetupSelection/Wrapper.tsx","components/pages/Settings/Supply/SetupSelection/index.tsx","components/pages/Settings/Supply/index.tsx","components/pages/Settings/index.tsx","Redux/Store/Settings/Expansions/types.ts","components/molecules/BackLink/Link.tsx","components/molecules/BackLink/index.tsx","components/atoms/SelectField.tsx","components/molecules/AdditionalInfo.tsx","components/atoms/Keywords.tsx","components/atoms/Keyword.tsx","components/molecules/Label.tsx","components/molecules/CheckboxWithDetails.tsx","components/pages/Settings/Expansions/ContentCustomization/Wrapper.tsx","components/pages/Settings/Expansions/ContentCustomization/SelectWithTooltipWrapper.tsx","components/molecules/InfoItem/Wrapper.tsx","components/molecules/InfoItem/Info.tsx","components/molecules/InfoItem/InfoLabel.tsx","components/molecules/InfoItem/index.tsx","components/atoms/SectionHeadline.tsx","components/molecules/NemesisInformation/AdditionalInfo.tsx","components/molecules/NemesisInformation/index.tsx","components/molecules/NemesisModal/index.tsx","components/pages/Settings/Expansions/ContentCustomization/Nemeses/Checkbox.tsx","components/pages/Settings/Expansions/ContentCustomization/Nemeses/index.tsx","components/atoms/AbilityText.tsx","components/molecules/ShowDetailsButton/Button.tsx","components/molecules/ShowDetailsButton/index.tsx","components/molecules/Tile/Wrapper.tsx","components/molecules/Tile/Content.tsx","components/molecules/Tile/Icon.tsx","components/molecules/Tile/TypeIcon.tsx","components/molecules/LockButton/Button.tsx","components/molecules/LockButton/index.tsx","components/molecules/Tile/index.tsx","components/molecules/UniqueStarter/Name.tsx","components/molecules/UniqueStarter/Body.tsx","components/molecules/UniqueStarter/UniqueStartersWrapper.tsx","components/molecules/UniqueStarter/index.tsx","components/molecules/MageInformation/index.tsx","components/molecules/MageModal/index.tsx","components/pages/Settings/Expansions/ContentCustomization/Mages/Checkbox.tsx","components/pages/Settings/Expansions/ContentCustomization/Mages/index.tsx","components/molecules/SupplyCardInformation/index.tsx","components/molecules/SupplyModal/index.tsx","components/pages/Settings/Expansions/ContentCustomization/CardListItem/Checkbox.tsx","components/pages/Settings/Expansions/ContentCustomization/CardListItem/index.tsx","components/pages/Settings/Expansions/ContentCustomization/Gems.tsx","components/pages/Settings/Expansions/ContentCustomization/Relics.tsx","components/pages/Settings/Expansions/ContentCustomization/Spells.tsx","components/molecules/BasicNemesisCardInformation/index.tsx","components/molecules/BasicNemesisCardModal/index.tsx","components/pages/Settings/Expansions/ContentCustomization/NemesisCardListItem/Checkbox.tsx","components/pages/Settings/Expansions/ContentCustomization/NemesisCardListItem/index.tsx","components/pages/Settings/Expansions/ContentCustomization/BasicNemesisCards.tsx","components/pages/Settings/Expansions/ContentCustomization/UpgradedNemesisCardListItem/Checkbox.tsx","components/pages/Settings/Expansions/ContentCustomization/UpgradedNemesisCardListItem/index.tsx","components/pages/Settings/Expansions/ContentCustomization/UpgradedBasicNemesisCards.tsx","components/molecules/TreasureInformation/index.tsx","components/molecules/TreasureModal/index.tsx","components/pages/Settings/Expansions/ContentCustomization/TreasureListItem/Checkbox.tsx","components/pages/Settings/Expansions/ContentCustomization/TreasureListItem/index.tsx","components/pages/Settings/Expansions/ContentCustomization/Treasures.tsx","components/molecules/Tooltip.tsx","components/pages/Settings/Expansions/ContentCustomization/index.tsx","components/atoms/ShuffleButton.tsx","components/pages/TurnOrder/DiscardTable/Cell.tsx","components/pages/TurnOrder/DiscardTable/RowWrapper.tsx","components/pages/TurnOrder/DiscardTable/Row.tsx","components/pages/TurnOrder/DiscardTable/Table.tsx","components/pages/TurnOrder/DiscardTable/index.tsx","components/pages/TurnOrder/RoundCount/Wrapper.tsx","components/pages/TurnOrder/RoundCount/index.tsx","components/pages/TurnOrder/ActiveGame.tsx","components/pages/TurnOrder/ConfigurationCardDisplay.tsx","components/pages/TurnOrder/CardNameDisplay.tsx","components/pages/TurnOrder/ModeSelection.tsx","components/pages/TurnOrder/PlayerCountSelection.tsx","components/pages/TurnOrder/SetupSelection.tsx","components/pages/TurnOrder/TurnOrderConfiguration.tsx","components/pages/TurnOrder/index.tsx","components/pages/Expeditions/List.tsx","components/pages/Expeditions/Delete.tsx","components/molecules/CopyButton.tsx","components/pages/Expeditions/Copy.tsx","components/molecules/ShareButton.tsx","components/pages/Expeditions/Share.tsx","components/pages/Expeditions/ListItem.tsx","components/pages/Expeditions/Controls.tsx","components/pages/Expeditions/ExpeditionTile/Name.tsx","components/pages/Expeditions/ExpeditionTile/List.tsx","components/pages/Expeditions/ExpeditionTile/Body.tsx","components/pages/Expeditions/ExpeditionTile/index.tsx","components/pages/Expeditions/FormControl.tsx","components/pages/Expeditions/CreationDialog/FormLabel.tsx","components/pages/Expeditions/CreationDialog/BigPocketSelect.tsx","components/pages/Expeditions/CreationDialog/ConfigImport/ContentWrapper.tsx","components/pages/Expeditions/CreationDialog/ConfigImport/ConfigTextField.tsx","components/pages/Expeditions/CreationDialog/ConfigImport/FileUpload.tsx","components/atoms/Button.tsx","components/pages/Expeditions/CreationDialog/ConfigImport/ImportButton.tsx","components/pages/Expeditions/CreationDialog/ConfigImport/expeditionJsonSchema.ts","components/pages/Expeditions/CreationDialog/ConfigImport/index.tsx","components/pages/Expeditions/CreationDialog/CreateButton.tsx","components/molecules/MarketSelect/MarketOptionsWrapper.tsx","components/molecules/MarketSelect/index.tsx","components/pages/Expeditions/CreationDialog/MarketSelect.tsx","components/pages/Expeditions/Input.tsx","components/pages/Expeditions/CreationDialog/NameInput.tsx","components/pages/Expeditions/CreationDialog/SeedInput.tsx","components/pages/Expeditions/CreationDialog/VariantSelect.tsx","components/pages/Expeditions/CreationDialog/index.tsx","components/pages/Expeditions/OverviewEntry.tsx","components/pages/Expeditions/ExpeditionList.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/Text.tsx","components/pages/Expeditions/index.tsx","components/molecules/MageList/MageGridWrapper.tsx","components/molecules/MageList/MageTile/Wrapper.tsx","components/molecules/MageList/MageTile/ExpansionName.tsx","components/molecules/MageList/MageTile/Name.tsx","components/molecules/MageList/MageTile/Body.tsx","components/molecules/MageList/MageTile/index.tsx","components/molecules/MageList/index.tsx","components/pages/Expeditions/Expedition/Barracks/Mages.tsx","components/molecules/SupplyList/ListWrapper.tsx","components/molecules/SupplySelection/Wrapper.tsx","components/molecules/SupplySelection/index.tsx","components/molecules/MarketTile/Wrapper.tsx","components/molecules/MarketTile/Name.tsx","components/molecules/MarketTile/CostOperation.tsx","components/molecules/MarketTile/Body.tsx","components/molecules/MarketTile/index.tsx","components/molecules/SupplyList/index.tsx","components/pages/Expeditions/Expedition/Barracks/Supply.tsx","components/molecules/TreasureList/TreasureTile/Wrapper.tsx","components/molecules/TreasureList/TreasureTile/Name.tsx","components/molecules/TreasureList/TreasureTile/Body.tsx","components/molecules/TreasureList/TreasureTile/index.tsx","components/molecules/TreasureList/TreasureGridWrapper.tsx","components/molecules/TreasureList/index.tsx","components/pages/Expeditions/Expedition/Barracks/Treasure.tsx","components/molecules/UpgradedBasicNemesisCardList/UpgradedBasicNemesisCardTile/Wrapper.tsx","components/molecules/UpgradedBasicNemesisCardList/UpgradedBasicNemesisCardTile/Name.tsx","components/molecules/UpgradedBasicNemesisCardList/UpgradedBasicNemesisCardTile/Body.tsx","components/molecules/UpgradedBasicNemesisCardList/UpgradedBasicNemesisCardTile/index.tsx","components/molecules/UpgradedBasicNemesisCardList/UpgradedBasicNemesisCardGridWrapper.tsx","components/molecules/UpgradedBasicNemesisCardList/index.tsx","components/pages/Expeditions/Expedition/Barracks/UpgradedBasicNemeses.tsx","components/pages/Expeditions/Expedition/Barracks/Banished.tsx","components/pages/Expeditions/Expedition/Barracks/BarracksContent.tsx","components/pages/Expeditions/Expedition/Barracks/index.tsx","components/pages/Expeditions/Expedition/Branch/BranchWrapper.tsx","components/pages/Expeditions/Expedition/Branch/Locked.tsx","components/pages/Expeditions/Expedition/Branch/Unlocked.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleTile/Unlocked.tsx","components/pages/Expeditions/Expedition/Branch/BodyWrapper.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleTile/Name.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleTile/Body.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleTile/index.tsx","components/pages/Expeditions/Expedition/Branch/Battle/SpecialRules.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BeforeBattle/BattleOverview.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BeforeBattle/StartBattleButton.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BeforeBattle/index.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleStarted/BattleLostButton.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleStarted/BattleWonButton.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleStarted/index.tsx","components/pages/Expeditions/Expedition/Branch/helpers.ts","components/pages/Expeditions/Expedition/Branch/SupplyReward.tsx","components/pages/Expeditions/Expedition/Branch/TreasureReward.tsx","components/pages/Expeditions/Expedition/Branch/MageReward.tsx","components/pages/Expeditions/Expedition/Branch/RewardScreen/ContinueButton.tsx","components/pages/Expeditions/Expedition/Branch/RewardScreen/index.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleWon/index.tsx","components/pages/Expeditions/Select.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleLost/LossRewardTypeSelection/RewardSelect.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleLost/LossRewardTypeSelection/ConfirmButton.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleLost/LossRewardTypeSelection/index.tsx","components/pages/Expeditions/Expedition/Branch/Battle/BattleLost/index.tsx","components/pages/Expeditions/Expedition/Branch/ExpeditionFinished/WinOverview.tsx","components/pages/Expeditions/Expedition/Branch/ExpeditionFinished/FinishExpeditionButton.tsx","components/pages/Expeditions/Expedition/Branch/ExpeditionFinished/index.tsx","components/pages/Expeditions/Expedition/Branch/Battle/index.tsx","components/pages/Expeditions/Expedition/Branch/Battle/useStateModals.ts","components/pages/Expeditions/Expedition/Branch/Battle/handleBattleClick.ts","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeTile/Unlocked.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeTile/UnlockedIcon.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeTile/index.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/DecisionButton.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/Decisions.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/index.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/index.tsx","components/pages/Expeditions/Expedition/Branch/Narrative/handleNarrativeClick.ts","components/pages/Expeditions/Expedition/Branch/Reward/RewardTile/Unlocked.tsx","components/pages/Expeditions/Expedition/Branch/Reward/RewardTile/UnlockedIcon.tsx","components/pages/Expeditions/Expedition/Branch/Reward/RewardTile/index.tsx","components/pages/Expeditions/Expedition/Branch/Reward/RewardUnlocked/index.tsx","components/pages/Expeditions/Expedition/Branch/Reward/index.tsx","components/pages/Expeditions/Expedition/Branch/Reward/handleRewardClick.ts","components/pages/Expeditions/Expedition/Branch/index.tsx","components/pages/Expeditions/Expedition/Header/Wrapper.tsx","components/pages/Expeditions/Expedition/Header/index.tsx","components/pages/Expeditions/Expedition/index.tsx","components/molecules/BottomNavigation/StyledLink.tsx","components/molecules/BottomNavigation/Link.tsx","components/molecules/BottomNavigation/Wrapper.tsx","components/molecules/BottomNavigation/index.tsx","components/pages/Randomizer/Nemeses/NemesisTile/ExpansionName.tsx","components/pages/Randomizer/Nemeses/NemesisTile/Name.tsx","components/pages/Randomizer/Nemeses/NemesisTile/Body.tsx","components/pages/Randomizer/Nemeses/NemesisTile/index.tsx","components/pages/Randomizer/Nemeses/EmptyNemesisHint.tsx","components/molecules/NoSelectedExpansions.tsx","components/pages/Randomizer/Nemeses/index.tsx","components/molecules/AmountPicker.tsx","components/pages/Randomizer/Mages/MageCountPicker.tsx","components/pages/Randomizer/Mages/EmptyMageListHint.tsx","components/pages/Randomizer/Mages/index.tsx","components/pages/Randomizer/Supply/index.tsx","components/pages/Randomizer/BasicNemesisCards/EmptyHint.tsx","components/pages/Randomizer/BasicNemesisCards/PlayerAmountPicker/index.tsx","components/pages/Randomizer/BasicNemesisCards/BasicNemesisCardList/BasicNemesisCardTile/Wrapper.tsx","components/pages/Randomizer/BasicNemesisCards/BasicNemesisCardList/BasicNemesisCardTile/Name.tsx","components/pages/Randomizer/BasicNemesisCards/BasicNemesisCardList/BasicNemesisCardTile/Body.tsx","components/pages/Randomizer/BasicNemesisCards/BasicNemesisCardList/BasicNemesisCardTile/index.tsx","components/pages/Randomizer/BasicNemesisCards/BasicNemesisCardList/BasicNemesisCardGridWrapper.tsx","components/pages/Randomizer/BasicNemesisCards/BasicNemesisCardList/index.tsx","components/pages/Randomizer/BasicNemesisCards/Tier.tsx","components/pages/Randomizer/BasicNemesisCards/index.tsx","components/pages/Randomizer/index.tsx","components/organisms/Content/Routing.tsx","components/organisms/Content/index.tsx","components/organisms/TopBar/Title.tsx","components/organisms/TopBar/AppBar.tsx","components/organisms/TopBar/MenuButton/index.tsx","components/organisms/TopBar/index.tsx","components/molecules/Link.tsx","components/molecules/Navigation.tsx","components/organisms/DrawerMenu/Header.tsx","components/organisms/DrawerMenu/AppInfo.tsx","components/organisms/DrawerMenu/GitHubLink.tsx","components/organisms/DrawerMenu/GitHubLogo.tsx","components/organisms/DrawerMenu/Drawer.tsx","components/organisms/DrawerMenu/github-logo.svg","components/organisms/DrawerMenu/index.tsx","components/App/MainApp.tsx","components/App/Wrapper.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","Redux/configureStore.ts"],"names":["ActionTypes","muiTheme","createMuiTheme","palette","primary","blue","secondary","pink","typography","useNextVariants","props","MuiButtonBase","disableRipple","transitions","create","zIndex","modal","playerColors","player1","normal","light","player2","player3","player4","default","ligth","mainTheme","heading","fontSize","pxToRem","spacing","drawerWidth","muiTransitions","appBarShift","easing","easeOut","duration","enteringScreen","content","sharp","leavingScreen","contentShift","colors","text","white","turnOrderCards","player12","player34","wild","nemesis","maelstrom","blitz","myth","bone","cards","treasure1","treasure2","treasure3","any","color","background","gem","relic","spell","mage","keywordBg","icons","treasure","actions","noOp","createAction","toggleExpansion","id","TOGGLE_EXPANSION","setToDB","state","SET_TO_DB","setToDBSuccessful","SET_TO_DB_SUCCESS","setToDBFailed","error","SET_TO_DB_FAILURE","fetchFromDB","FETCH_FROM_DB","fetchFromDBSuccessful","expansionIds","FETCH_FROM_DB_SUCCESS","fetchFromDBFailed","FETCH_FROM_DB_FAILURE","EXPANSIONS_DB_KEY","action","newState","includes","payload","filter","loop","Cmd","run","setToDb","args","successActionCreator","failActionCreator","fetchFromDb","getFromDb","fetchFromDbSuccess","_","Array","isArray","initialState","getSelected","Settings","Expansions","selected","selectors","getIsSelected","createSelector","expansionId","selectedIds","getIsLoading","MainContentLoading","select","lang","SELECT","languages","aeonsEndData","name","type","nemeses","expansion","health","difficulty","expeditionRating","additionalInfo","mages","mageTitle","ability","numberOfCharges","uniqueStarters","cost","effect","keywords","basicNemesisCards","tier","power","hp","shields","buriedSecretsData","intoTheWildData","complexityRating","treasures","level","subtype","legacyData","newAgeData","upgradedBasicNemesisCards","upgraded","outerDarkData","promosData","shatteredDreamsData","theAncientsData","theDepthsData","theNamelessData","theVoidData","warEternalData","outcastsData","returnToGraveholdData","southernVillageData","theRuinsData","FR","AE","Depths","Nameless","WE","PL","Legacy","OD","TV","promos","DE","RU","TURNORDERCARDS","alternate","wildToken","thiefOfDreams","TURNORDERSETUPS","onePlayer","variations","twoPlayers","threePlayers","fourPlayers","splitPlayers","createNormalizedData","data","expansions","Object","keys","normalize","array","reduce","acc","entity","entities","ids","nemesisIds","mageIds","cardIds","treasureIds","basicNemesisCardIds","upgradedBasicNemesisCardIds","aerData","normalizedData","ENG","BS","IW","NA","SD","TA","O","RTG","SV","LOG","community","defaultSupplyCount","marketsetups","setups","market1Inc","active","tiles","operation","threshold","market1","market2","market3","values","market4","market5","market6","random","turnordersetups","turnordercards","LANGUAGE_DB_KEY","AERData","getLanguagesByExpansion","Languages","getSelectedLanguageByExpansionId","languagesByExpansion","getContent","getContentWithLanguageFallback","getExpansionById","LanguageSelectors","getIds","Selected","Ids","Content","main","toggleAll","TOGGLE_ALL","Reducer","reduceReducers","combineReducers","reducerHelpers","newSelected","every","getExpansionsByIdList","map","getExpansionNamesByIdList","e","getAllExpansionsSelected","getHasStandaloneExpansion","some","getStandaloneExpansionIds","getMiniExpansionIds","getPromoIds","sort","a","b","promoA","promoB","getStandaloneExpansions","getMiniExpansions","getPromos","getContentByIdWithLanguageFallback","getEntitiesByIdListWithLanguageFallback","language","Cards","getById","toggleCard","TOGGLE_CARD","selectedCards","CARDS_DB_KEY","getSelectedCardsFromDB","setSelectedCardsToDB","cardId","toggleType","ExpansionActionTypes","TOGGLE_ALL_EXPANSION_CONTENT","allCardsOfExpansion","newSelectedCards","length","Set","getIdsByExpansionId","getContentByExpansionId","getGemsByExpansionId","card","getRelicsByExpansionId","getSpellsByExpansionId","getSelectedCards","getCardsByIdList","idList","getSelectedCardsByExpansionId","selectedCardIds","expansionCardIds","getAllCardsOfExpansionSelected","allCardIds","Nemeses","toggle","TOGGLE","selectedNemeses","NEMESES_DB_KEY","getSelectedNemesesFromDB","setSelectedNemesesToDB","allNemesesOfExpansion","newSelectedNemeses","getNemesisIdsByExpansionId","getNemesesByExpansionId","getSelectedNemeses","getSelectedNemesesByExpansionId","selectedNemesisIds","expansionNemesisIds","getAllNemesesOfExpansionSelected","allNemesisIds","Mages","selectedMages","MAGES_DB_KEY","getSelectedMagesFromDB","setSelectedMagesToDB","allMagesOfExpansion","newSelectedMages","getMageIdsByExpansionId","getMagesByExpansionId","getSelectedMages","getSelectedMagesByExpansionId","selectedMagesIds","expansionMagesIds","getAllMagesOfExpansionSelected","selectedMageIds","allMageIds","Treasures","selectedTreasures","TREASURES_DB_KEY","getSelectedTreasuresFromDB","setSelectedTreasuresToDB","allTreasuresOfExpansion","newSelectedTreasures","getTreasureLevel","treasureLevel","getTreasureIdsByTreasureLevel","getTreasureIdsByExpansionId","getTreasuresByExpansionId","getTreasureList","getTreasureListByLevel","getTreasureListFromIdList","getSelectedTreasures","getSelectedTreasureIdsByTreasureLevel","getSelectedTreasureListByLevel","getSelectedTreasuresByExpansionId","selectedTreasureIds","expansionTreasureIds","getAllTreasuresOfExpansionSelected","allTreasureIds","BasicNemesisCards","BASIC_NEMESIS_CARDS_DB_KEY","getSelectedBasicNemesisCardsFromDB","setSelectedBasicNemesisCardsToDB","selectedBasicNemesisCards","basicNemesisCardId","allBasicNemesisCardsOfExpansion","newSelectedBasicNemesisCards","getSelectedContent","getSelectedBasicNemesisCardsByExpansionId","selectedBasicNemesisCardIds","expansionBasicNemesisCardIds","getAllBasicNemesisCardsOfExpansionSelected","allBasicNemesisCardIds","UpgradedBasicNemesisCards","selectedUBNCards","UPGRADED_BASIC_NEMESIS_CARDS_DB_KEY","getSelectedUpgradedBasicNemesisCardsFromDB","setSelectedUpgradedBasicNemesisCardsToDB","selectedUpgradedBasicNemesisCards","allUpgradedBasicNemesisCardsOfExpansion","newSelectedUpgradedBasicNemesisCards","getUpgradedBasicNemesisCardIdsByExpansionId","getUpgradedBasicNemesisCardsByExpansionId","getUpgradedBasicNemesisCardList","getSelectedUpgradedBasicNemesisCards","getSelectedUpgradedBasicNemesisCardsByExpansionId","selectedUpgradedBasicNemesisCardIds","expansionUpgradedBasicNemesisCardIds","getAllUpgradedBasicNemesisCardsOfExpansionSelected","allUpgradedBasicNemesisCardIds","getSelectedEntitiesForSelectedExpansions","entitySelector","getSelectedCardsForSelectedExpansions","getSelectedCardIdsForSelectedExpansions","createIdsByCardTypeSelector","getGemIdsForSelectedExpansions","getRelicIdsForSelectedExpansions","getSpellIdsForSelectedExpansions","getSelectedNemesesForSelectedExpansions","getSelectedNemesisIdsForSelectedExpansions","getSelectedMagesForSelectedExpansions","getSelectedMageIdsForSelectedExpansions","getSelectedTreasuresForSelectedExpansions","getSelectedTreasureIdsForSelectedExpansions","getTreasuresByLevelForSelectedExpansions","getTreasureIds","getTreasuresByLevelMappedFromIds","t","getTreasureIdsByLevelMappedFromIds","getSelectedUpgradedBasicNemesisCardsForSelectedExpansions","getSelectedUpgradedBasicNemesisCardIdsForSelectedExpansions","getSelectedBasicNemesisCardsForSelectedExpansions","getSelectedBasicNemesisCardIdsForSelectedExpansions","toggleAllExpansionContent","getAllContentOfExpansionSelected","allNemesesSelected","allMagesSelected","allSupplyCardsSelected","allTreasuresSelected","allBasicNemesisCardsSelected","allUpgradedBasicNemesisCardsSelected","topLevelSelectors","toggleSetup","setup","setupType","TOGGLE_SETUP","saveCustomSetup","SAVE_CUSTOM_SETUP","cancelEdit","CANCEL_EDIT_SETUP","editCustomSetup","EDIT_CUSTOM_SETUP","deleteCustomSetup","DELETE_CUSTOM_SETUP","migrationSuccess","MIGRATION_SUCCESS","SUPPLY_DB_KEY","newStateWithDBWrite","allSetsAreSelected","Predefined","Custom","val","allSetsSelected","updatedPredefined","updatedCustom","migrationVersion","distinctById","value","index","self","findIndex","el","sortByCardType","byCost","byAscendingVersion","version","isNew","isDirty","cancelEditSetup","rest","customId","migrations","transformer","tile","migrate","getState","rootState","migration","force","SupplySetups","migrateAfterFetch","migrateAfterFetchSuccess","getPredefinedSetups","getCustomSetups","getPredefinedList","getCustomList","getCustomAndPredefined","predefined","custom","getAllAsArray","customAndPredefined","getAllExceptDefaultSets","allSets","set","getActiveSetups","getAllSetsSelected","makeGetCustomAndPredefined","Accordions","getAccordionStateById","filterByCost","setupBlueprint","indexOf","createCardList","availableCards","blueprints","getEntity","getRandomEntity","seed","blueprint","filteredByCost","cardResult","blueprintId","result","shortid","generate","getRandomCardsByType","tileSetups","cardType","cardSlots","availableCardsOfType","createSupply","gemsResult","relicsResult","spellsResult","anyResult","gems","c","relics","spells","createArrayWithDefaultValues","size","defaultValue","from","createSlotList","amount","generateListFrom","availableEntities","slots","rngResult","available","shuffleDeck","deck","createIdList","availableIds","rng","seedrandom","Math","floor","getOperationString","join","thresholdValue","createBasicNemesisCardList","availableBasicNemesisCards","undefined","setRandomNemesis","availableNemeses","SET_RANDOM","getNemesis","Randomizer","Nemesis","setCount","count","SET","getCount","PlayerCount","cardMatrix","tier1","tier2","tier3","getRandomMinionAmount","minCount","ceil","getRandomBasicNemesisCardsByTier","playerCount","cardsByTier","getBasicNemesisCardsByTier","randomMinions","minions","minion","drawMinions","randomPowersAndAttacks","powersAndAttacks","powerAndAttack","drawPowersAndAttacks","createDeck","Tier1","Tier2","Tier3","getRandomBasicNemesisCardList","RandomCards","getBasicNemesisCards","createBasicNemesisCardDeck","CREATE","Count","Recruited","getMages","setRandomMages","availableMages","min","createMageList","Tiles","sortEntitiesByCost","resetMarket","RESET","createMarket","lockedCards","tilesFilteredByLocked","lockedGems","lockedCard","lockedRelics","lockedSpells","newGems","newRelics","newSpells","gemsByCost","relicsByCost","spellsByCost","supply","getTiles","Supply","RandomSetup","LockedCards","toggleLock","LOCK_TOGGLE","getLockedCards","setMode","mode","SET_MODE","selectPlayerCount","playerCountId","SELECT_PLAYER_COUNT","selectSetup","setupId","SELECT_SETUP","INITIAL_PLAYER_SETUP","INITIAL_VARIATION","TURNORDER_CONFIG_DB_KEY","Mode","SelectedPlayerCount","SelectedSetup","init","INIT","draw","DRAW","newRound","NEW_ROUND","addToTop","ADD_TO_TOP","addToBottom","ADD_TO_BOTTOM","shuffleIntoDeck","SHUFFLE_INTO_DECK","setTurnOrderToDbSuccess","SET_TURNORDER_TO_DB_SUCCESS","setTurnOrderToDbFailure","SET_TURNORDER_TO_DB_FAILURE","startGame","START_GAME","resetGame","RESET_GAME","TURNORDER_GAME_DB_KEY","cardDrawn","additionalCard","display","discard","adjustedDeck","newRoundCount","round","cardToAdd","find","cardToShuffle","newDeck","shuffledDeck","started","getDeck","TurnOrder","ActiveGame","getDiscard","getHasStarted","getRoundCount","activeGameActions","getMode","Configuration","getSelectedSetup","getConfiguration","selectedSetup","adjustSetup","getAvailableCards","config","getSelectedPlayerCount","createExpedition","baseConfig","CREATE_EXPEDITION","createExpeditionSuccess","newExpedition","CREATE_EXPEDITION_SUCCESS","rollBattle","battle","ROLL_BATTLE","rollBattleSuccess","ROLL_BATTLE_SUCCESS","startBattle","START_BATTLE","winBattle","WIN_BATTLE","winBattleSuccess","WIN_BATTLE_SUCCESS","loseBattle","LOSE_BATTLE","acceptLoss","banished","newSupplyIds","ACCEPT_LOSS","rollLoss","rewardType","ROLL_LOSS","rollLossSuccess","ROLL_LOSS_SUCCESS","finishBattle","FINISH_BATTLE","finishExpedition","branch","FINISH_EXPEDITION","deleteExpedition","DELETE_EXPEDITION","migrateToSettingsSnapshotSuccessful","SETTINGS_SNAPSHOT_MIGRATION_SUCCESS","shareExpedition","expedition","EXPEDITION_SHARE","shareExpeditionSuccess","EXPEDITION_SHARE_SUCCESS","shareExpeditionFailure","EXPEDITION_SHARE_FAILURE","resolveNarrative","NARRATIVE_RESOLVE","generateRewards","REWARDS_GENERATE","generateRewardsSuccess","REWARDS_GENERATE_SUCCESS","acceptRewards","reward","REWARDS_ACCEPT","getFixIdsFromRewardsConfig","determineUsedExpansions","settingsSnapshot","branches","initialBarracks","availableCardIds","availableMageIds","availableNemesisIds","availableTreasureIds","availableUpgradedBasicNemesisCardIds","allCards","allMages","allNemeses","allTreasures","allUBNCards","fromBranches","defaultResult","nemesisId","lossRewards","winRewards","newUBNCards","fromLossRewards","rewards","fromConfig","fromWinRewards","fromNewUBNCards","upgradedBasicNemesisIds","getFixIdsFromSequenceBranches","fromInitialBarracks","supplyIds","m","n","handleExistingSettingsSnapshot","existingConfig","baseSupplySetups","marketId","usedExpansions","settingsSnapshotConfig","sequenceConfig","initialBarracksConfig","existingSupply","supplySetup","handleNewSettingsSnapshot","baseSnapshot","createSettingsSnapshot","customAndPredefinedSetups","createSupplyIds","resultSeed","createTreasureIds","firstBattleConfig","availableLevel1TreasureIds","hasTreasure","battles","expeditionProps","actualProps","variantId","sequence","firstBranchId","nemesisTier","battleProps","nextBranchId","addRandom","isNewTier","getLatestMigrationVersion","isExpeditionState","Expeditions","migratedExpeditionsObject","expeditionIds","expeditions","handleWithoutConfig","bigPocketVariant","seedValue","expeditionId","mageIdsResult","supplyIdsResult","variant","Variants","getVariantById","treasureIdsResult","configList","battleIds","isFirst","status","tries","generateBattles","score","supplyState","nemesisState","barracks","finished","convertExpeditionToConfig","seedConfig","bigPocketVariantConfig","initialUBNCardsConfig","calcBattleScore","handleExistingConfig","expeditionConfig","baseExpeditionFromConfig","key","convertExpeditionFromConfig","amountOfAdditionalMages","additionalMagesResult","firstBranch","newSeed","rollNemesisId","getStillAvailableNemesisIds","previousNemeses","rollNewUpgradedNemesisCards","availableUpgradedBasicNemesisCards","previousUpgradedBasicNemesisCards","upgradedCardsWithoutPreviousCards","upgradedCard","upgradedBasicNemesisCardIdsResult","availableTier1Ids","availableTier2Ids","availableTier3Ids","battleTier","tier1IdsResult","tier2IdsResult","tier3IdsResult","getUpgradedBasicNemesisIdsByBattleTier","getUpgradedBasicNemesisCardsResult","generateResult","nemesisSeedState","createBattle","getExpeditionById","getAvailableNemesisForExpeditionId","previousNemesisIds","getPreviousNemesesByExpeditiionId","stillAvailableNemesisIds","nemesisIdResult","getAvailableUpgradedBasicNemesisCardsForExpeditionId","rollNewEntity","list","handleCustomRewards","rewardConfig","stillAvailableCardsByType","Gem","getStillAvailableGems","Relic","getStillAvailableRelics","Spell","getStillAvailableSpells","EMPTY","ANY","stillAvailableTreasureIdsByLevel","getStillAvailableTreasureIdsByLevel","stillAvailableMageIds","getStillAvailableMageIds","baseResult","idOrBlueprint","stillAvailableCards","cardCreationResult","getSupplyIds","idOrRandom","filteredMageIds","mageId","getMageIds","treasureId","rollWinRewards","newTreasuresResult","stillAvailableTreasureIds","amountOfTreasures","rollTreasureIdsByLevel","getTreasureAmount","newTreasures","supplyRewardsResult","gemIds","relicIds","spellIds","rollNewEntityFn","newGemResult","newGem","newRelicResult","newRelic","newSpellResult","newSpell","rollSupplyRewards","getStillAvailableGemIds","getStillAvailableRelicIds","getStillAvailableSpellIds","supplyRewards","createWinRewards","rewardsConfig","handleRewardsFromConfig","handleTreasure","newTreasureResult","newTreasure","handleSupply","newSupplyItemResult","newSupplyItemId","handleRewardType","treasure1Ids","treasure2Ids","treasure3Ids","newMageResult","newMage","handleMage","rollLossRewards","createLossRewards","tryIndex","rewardTypeMissing","json","JSON","stringify","replace","window","navigator","share","clipboard","writeText","title","shareApi","blob","Blob","saveAs","saveToFile","createRewards","branchId","EXPEDITIONS_DB_KEY","updateBattle","additionalBattleProps","oldExpedition","updatedBranches","sideEffects","battleScore","helpers","onLoss","hasNext","newTreasureIds","newMageIds","handleSkip","handleRegular","narrativeId","decision","narrative","getExpeditions","getExpeditionIds","getBranchId","getExpeditionList","getExpeditionIsFinished","getSettingsSnapshotByExpeditionId","getHasNextBranch","getNextBranch","choiceIndex","getSupplyByExpeditionId","getBanishedByExpeditionId","getMagesByExpeditionId","getBranchIdListByExpeditionId","getBranchListByExpeditionId","branchIds","getNextBattle","getBarracksTreasureIdsByExpeditionId","CARD_TYPES","variants","DEFAULT","SHORT","EXTENDED","variantIds","THRESHOLD_OPERATIONS","SUPPLY_OPERATIONS","MODES","updateSelected","UPDATE_SELECTED","getVariants","getVariantIds","getVariantList","getUpgradedBasicNemesisCardsByExpeditionId","getExpeditionSupply","getExpeditionMages","getExpeditionTreasure","getExpeditionUpgradedBasicNemesis","getExpeditionBanishedCards","getAvailableCardsForExpeditionId","getAvailableMagesForExpeditionId","getAvailableTreasureForExpeditionId","expeditionSupplyIds","banishedIds","stillAvailableGemIds","stillAvailableRelicIds","stillAvailableSpellIds","expeditionMageIds","getCallbackForAllTreasuresByLevelFromIdList","tByLevel","allAvailable","$getTreasuresByLevelFrom","Main","getUserConfiguration","USER_CONFIGURATION_GET","ContentLoading","RootReducer","SelectedExpansions","HeaderPlaceholder","styled","Wrapper","theme","unit","isLoading","Card","MuiCard","H1","Typography","H2","P","A","Link","Li","About","href","alt","src","to","React","memo","ExpansionPanelDetails","children","ExpansionPanel","MuiExpansionPanel","displayName","StyledExpansionPanel","StyledExpansionPanelSummary","ExpansionPanelSummary","Heading","expanded","expansionHandler","expansionKey","summary","isExpanded","onChange","expandIcon","ListWrapper","label","Fragment","style","marginTop","IconButton","MuiIconButton","CheckboxWithControls","checked","changeHandler","history","useHistory","control","onClick","push","Checkbox","handleChange","useCallback","connect","ownProps","ExpansionList","items","item","Standalones","standalones","miniExpansions","mapDispatchToProps","handleSelectAll","ActiveSets","component","marginBottom","Mini","Promos","KEY","toggleAccordion","accordionState","useExpandedHandling","useState","setExpanded","createExpansionHandler","panel","event","Backdrop","Header","Body","Title","themeColor","CloseButton","Modal","titleColor","titleLabel","closeModal","domEl","document","getElementById","ReactDOM","createPortal","ModalBodyWrapper","hasFooter","ModalFooterWrapper","Prompt","yesHandler","noHandler","useModal","isVisible","setIsVisible","hide","show","RenderModal","closeCallback","usePrompt","RenderPrompt","EditButton","DeleteButton","className","TileList","TileListItem","SupplyName","SupplyPreview","clickHandler","showName","toLowerCase","PreviewWrapper","CheckboxWithPreview","handleSelection","InputField","TextField","MuiFormControl","Select","MuiSelect","SelectField","SelectFieldsWrapper","BluePrintWrapper","CancelButton","StyledCancelButton","renderInputFieldsByOperation","bluePrint","dispatch","types","parseInt","target","margin","valueA","toString","valueB","BluePrint","inputProps","TYPE","OPERATION","BluePrintList","bluePrintList","MainControlsWrapper","MainControls","setupName","setSetupName","placeholder","currentTarget","div","initialStateFromTiles","bluePrintReducer","CustomSetupEdit","saveCallback","useReducer","bluePrints","reverse","handleSave","CheckboxWithPreviewControls","CustomSetupCheckbox","editSetup","deleteSetup","showEditModal","hideEditModal","RenderEditModal","showDeletionDialog","hideDeletionDialog","RenderDeletionPrompt","handleEdit","handleEditCancel","openDeletionDialog","handleDelete","SetupCreation","newSetup","setNewSetup","handleCreation","renderCheckboxes","customSetups","CustomSetups","PredefinedSetups","predefinedSetups","SetupSelectionWrapper","FormControl","SetupSelection","useExpansionHandling","LANGUAGE_KEYS","BackLink","AdditionalInfo","Keywords","inCheckboxList","Keyword","withTheme","Label","CheckboxWithDetails","showDetails","handleDetails","keyword","CheckboxWithDetailsWrapper","SelectWithTooltipWrapper","ListItem","Info","InfoLabel","InfoItem","info","SectionHeadline","NemesisInformation","dangerouslySetInnerHTML","__html","NemesisModal","handleNemesisChange","AbilityText","isMage","hint","Button","ShowDetailsButton","selectedMixin","css","MuiCardContent","Icon","iconColor","TypeIcon","icon","LockButton","lock","isLocked","Tile","body","bgColor","fontColor","Name","UniqueStartersWrapper","Grid","UniqueStarter","xs","sm","MageInformation","player","expansionName","container","MageModal","handleMageChange","SupplyModal","CardListItem","handleCheckboxChange","handleGemChange","Gems","selectedGems","handleRelicChange","Relics","selectedRelics","handleSpellChange","Spells","selectedSpells","BasicNemesisCardModal","NemesisCardListItem","handleBasicNemesisCardChange","UpgradedNemesisCardListItem","handleUpgradedBasicNemesisCardChange","TreasureModal","TreasureListItem","handleTreasureChange","Tooltip","tooltipOpen","setTooltipOpen","handleTooltipClose","onClickAway","PopperProps","disablePortal","modifiers","arrow","enabled","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","selectLanguage","handleSelectAllExpansionContent","ContentCustomization","allExpansionContentSelected","minWidth","shrink","ShuffleButton","withBottomNav","Cell","MuiTableCell","RowWrapper","MuiTableRow","turnOrderCardColors","Row","align","Table","MuiTable","renderRows","i","DiscardTable","RoundCount","drawCard","ActiveTurnOrder","roundCount","ConfigurationCardDisplay","renderCardNames","turnOrderSetup","CardNameDisplay","gutterBottom","ModeSelection","PlayerCountSelection","selectedPlayerCount","row","renderSetupOptions","TurnOrderConfiguration","currentConfiguration","hasMoreThanOneVariant","gameHasStarted","List","Delete","CopyButton","Copy","ShareButton","Share","Controls","MuiList","ExpeditionTile","url","FormLabel","MuiFormLabel","BigPocketSelect","changeBigPocketVariant","ContentWrapper","ConfigTextField","FileUpload","Input","MuiButton","ImportButton","schema","$schema","allOf","properties","$ref","required","definitions","anyOf","enum","Array_1","Array_2","Array_3","Array_4","BattleConfig","BattleTreasure","BranchesConfig","CardType","IBluePrint","IEmptyBluePrint","MageRewardConfig","MarketType","NarrativeConfig","NemesisTier","OnLoss","Operation","Partial","description","RewardsConfig","SequenceConfig","SettingsSnapshotConfig","SupplyRewardConfig","bigPocket","TreasureLevel","TreasureRewardConfig","__type","__type_1","additionalProperties","__type_2","specialRules","__type_3","__type_4","decisions","ConfigImport","configImportHandler","expeditionJsonConfig","changeExpeditionJsonConfig","validationError","changeValidiationError","expeditionJsonConfigHandler","handleConfigImport","parse","schemaValidator","Ajv","validate","expeditionJsonSchema","firstError","errors","dataPath","message","handleFileUpload","reader","FileReader","onload","files","readAsText","disabled","accept","CreateButton","handleExpeditionCreation","MarketOptionsWrapper","MarketSelect","activeMarketSetups","allMarketSetups","selectedMarketId","selectedMarketSetup","handleClick","additionalSetups","additionalSetupsLookup","s","NameInput","expeditionName","handleInputChange","SeedInput","VariantSelect","selectedVariantId","handleVariantChange","CreationDialog","finisher","existingExpeditionConfig","changeExpeditionConfig","changeExpeditionName","selectMarketId","selectedVariant","selectVariant","changeSeedValue","deleteHandler","shareHandler","OverviewEntry","deletionPrompt","handleShare","creationModal","deletionDialogTitle","renderExpeditions","ExpeditionList","Text","hasStandaloneExpansionSelected","MageGridWrapper","ExpansionName","MageTile","playerNumber","handleMageDetails","md","MageList","TileWrapper","SelectionHandlerContext","createContext","listId","selectionHandler","renderLists","lists","selectionContextValue","Provider","SupplySelection","amountOfCardsToSelect","selectedCardsCount","CostOperation","supplyCard","MarketTile","marketTile","useContext","supplyCardId","stopPropagation","getCard","handleLock","visualSelection","toLocaleLowerCase","renderTiles","SupplyList","TreasureTile","TreasureGridWrapper","renderTreasures","TreasureList","Treasure","nemesisCard","UpgradedBasicNemesisCardTile","UpgradedBasicNemesisCardGridWrapper","renderUpgradedBasicNemesisCards","upgradedBasicNemsisCards","upgradedBasicNemsisCard","UpgradedBasicNemesisCardList","UpgradedBasicNemeses","Banished","banishedCards","mageKey","supplyKey","treasureKey","banishedKey","upgradedBasicNemsisCardsKey","BarracksContent","mageHandler","useMemo","supplyHandler","treasureHandler","upgradedBasicNemsisCardsHandler","banishedHandler","Barracks","BranchWrapper","Locked","Unlocked","UnlockedBase","BodyWrapper","RenderBody","SpecialRules","rules","rule","BattleOverview","StartBattleButton","BeforeBattle","showNext","BattleLostButton","handleLoss","BattleWonButton","handleWin","BattleStarted","expeditionHasNextBattle","showNextOnLoss","showNextOnWin","tilesToCardId","SupplyReward","newSupplyCards","listsWithSelectionState","TreasureReward","MageReward","ContinueButton","handleContinue","finishingIsPossible","RewardScreen","callback","newMages","updateLists","updateSelectedCardsCount","enoughCardsSelected","selectedValue","affectedListIndex","affectedList","updatedLists","elementIndex","affectedElement","updatedListTiles","assign","numberOfSelectedCards","newSupplyList","expeditionSupply","BattleWon","useEffect","RewardSelect","rewardSelectValue","handleRewardSelectChange","treasureOptions","hasMagesLeft","hasGemsLeft","hasRelicsLeft","hasSpellsLeft","hasLvl1TreasureLeft","hasLvl2TreasureLeft","hasLvl3TreasureLeft","option","ConfirmButton","handleRewardConfirmation","LossRewardTypeSelection","updateRewardSelectValue","BattleLost","acceptLossCallback","showNextCallback","WinOverview","FinishExpeditionButton","handleFinish","ExpeditionFinished","Battle","expeditionIsFinished","beforeBattle","battleStarted","battleLost","battleWon","expeditionComplete","handleBattleClick","battleWonCallback","BattleTile","UnlockedIcon","NarrativeTile","DecisionButton","renderDecisions","Decisions","clickCallback","finishHandler","NarrativeUnlocked","Narrative","narrativeUnlocked","handleNarrativeClick","RewardTile","RewardUnlocked","Reward","rewardUnlocked","handleRewardClick","Branch","Expedition","StyledLink","NavLink","isActive","match","BottomNavigation","NemesisTile","showNemesisDetails","EmptyNemesisHint","NoSelectedExpansions","paragraph","randomNemesis","modalContentId","setModalContentId","handleRandomization","renderOptions","optionsCount","optionLabel","AmountPicker","handleAmountChange","MageCountPicker","EmptyMageListHint","setMageCount","setMages","mageCount","noMagesGeneratedYet","randomCards","selectedCardsForSelectedExpansions","locked","supplyId","EmptyHint","PlayerAmountPicker","BasicNemesisCardGridWrapper","renderBasicNemesisCards","basicNemesisCard","BasicNemesisCardList","Tier","setPlayerCount","randomBasicNemesisCards","noCardsRolled","exact","path","Routing","render","params","AppBar","MuiAppBar","drawerIsOpen","MenuButton","TopBar","toggleDrawer","disableGutters","button","Navigation","width","AppInfo","GithHubLink","GitHubLogo","Drawer","MuiDrawer","withStyles","paper","DrawerMenu","anchor","process","GitHubLink","GitHubSvg","MainApp","setDrawerIsOpen","App","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","store","enhancers","applyMiddleware","install","composeEnhancers","compose","enhancedCreateStore","createStore","configureStore","generateClassName","createGenerateClassName","jss","jssPreset","insertionPoint","URL","origin","addEventListener","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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KAAM,WACNc,OAAO,0OAQT,CACEnE,GAAI,gBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,aACNoB,QAAS,EACTD,GAAI,EACJL,OAAO,oRAQT,CACEnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNc,OAAO,iPAQT,CACEnE,GAAI,eACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNmB,GAAI,GACJL,OAAO,kHAMT,CACEnE,GAAI,cACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNc,OAAO,+GAOT,CACEnE,GAAI,oBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,QACND,KAAM,wBACNkB,MAAO,EACPJ,OAAO,2PAST,CACEnE,GAAI,cACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNmB,GAAI,EACJL,OAAO,kTAQT,CACEnE,GAAI,eACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,QACND,KAAM,wBACNkB,MAAO,EACPJ,OAAO,+PAQT,CACEnE,GAAI,oBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,yBACNc,OAAO,sNAOT,CACEnE,GAAI,eACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,gBACNmB,GAAI,GACJL,OAAO,qEAMT,CACEnE,GAAI,gBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,gBACNc,OAAO,wNAST,CACEnE,GAAI,oBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,QACND,KAAM,oBACNkB,MAAO,EACPJ,OAAO,+OAST,CACEnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNc,OAAO,0SAQT,CACEnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,SACNc,OAAO,8HLtST+B,OMNuC,CACvClG,GAAI,SACJqD,KAAM,iBACNC,KAAM,OACNC,QCRgC,CAChC,CACEC,UAAW,SACXH,KAAM,eACNrD,GAAI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EnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,qEACNc,OAAO,+vBAST,CACEnE,GAAI,gBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,qEACNoB,QAAS,EACTD,GAAI,EACJL,OAAO,00BAST,CACEnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,wFACNc,OAAO,sjBAOT,CACEnE,GAAI,eACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,6CACNmB,GAAI,GACJL,OAAO,mPAMT,CACEnE,GAAI,cACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,qEACNc,OAAO,4PAMT,CACEnE,GAAI,oBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,QACND,KAAM,wFACNkB,MAAO,EACPJ,OAAO,gtBAYT,CACEnE,GAAI,cACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,uCACNmB,GAAI,EACJL,OAAO,00BAQT,CACEnE,GAAI,eACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,QACND,KAAM,4EACNkB,MAAO,EACPJ,OAAO,moBAST,CACEnE,GAAI,oBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,oGACNc,OAAO,4uBAQT,CACEnE,GAAI,eACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,+DACNmB,GAAI,GACJL,OAAO,0KAMT,CACEnE,GAAI,gBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,qEACNc,OAAO,wkBAOT,CACEnE,GAAI,oBACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,QACND,KAAM,oGACNkB,MAAO,EACPJ,OAAO,ynBAQT,CACEnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,uCACNc,OAAO,6yBAQT,CACEnE,GAAI,YACJwD,UAAW,KACXc,KAAM,EACNhB,KAAM,SACND,KAAM,uCACNc,OAAO,uPLzSTsC,OMHoC,CACpCzG,GAAI,SACJqD,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,SACAuF,kBGbmD,CACnD,CACErE,GAAI,wBACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,QACND,KAAM,qBACNkB,MAAO,EACPJ,OAAO,mOAQT,CACEnE,GAAI,eACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,QACND,KAAM,YACNkB,MAAO,EACPJ,OAAO,6LAQT,CACEnE,GAAI,eACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNoB,QAAS,EACTD,GAAI,EACJL,OAAO,oHAMT,CACEnE,GAAI,cACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,UACNc,OAAO,iQAST,CACEnE,GAAI,qBACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,kBACNmB,GAAI,EACJL,OAAO,+QAST,CACEnE,GAAI,gBACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNc,OAAO,2LAQT,CACEnE,GAAI,0BACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,QACND,KAAM,uBACNkB,MAAO,EACPJ,OAAO,oOAQT,CACEnE,GAAI,WACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,OACNc,OAAO,wIAQT,CACEnE,GAAI,kBACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,QACND,KAAM,kBACNkB,MAAO,EACPJ,OAAO,6LAQT,CACEnE,GAAI,aACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAK,eACLc,OAAO,+VAYT,CACEnE,GAAI,cACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,eACNc,OAAO,mIAOT,CACEnE,GAAI,YACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,YACNmB,GAAI,GACJL,OAAO,sJAOT,CACEnE,GAAI,eACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,SACND,KAAM,gBACNoB,QAAS,EACTD,GAAI,EACJL,OAAO,wOAOT,CACEnE,GAAI,mBACJwD,UAAW,MACXc,KAAM,EACNhB,KAAM,QACND,KAAM,oBACNkB,MAAO,EACP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","file":"static/js/main.f3a2a64a.chunk.js","sourcesContent":["import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE_EXPANSION = 'Settings/Expansions/Expansions/TOGGLE_EXPANSION',\n  SET_TO_DB = 'Settings/Expansions/Expansions/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/Expansions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/Expansions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/Expansions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/Expansions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/Expansions/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedExpansionsStateSlice = {\n  Settings: {\n    Expansions: {\n      Expansions: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\nimport pink from '@material-ui/core/colors/pink'\n\nexport const muiTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  props: {\n    // Name of the component ⚛️\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application 💣!\n    },\n  },\n  transitions: {\n    // So we have `transition: none;` everywhere\n    create: () => 'none',\n  },\n  zIndex: {\n    modal: 20000,\n  },\n})\n\nconst playerColors = {\n  player1: {\n    normal: '#8BC34A',\n    light: '#F1F8E9',\n  },\n  player2: {\n    normal: '#FF9800',\n    light: '#FFF3E0',\n  },\n  player3: {\n    normal: '#2196F3',\n    light: '#E3F2FD',\n  },\n  player4: {\n    normal: '#9C27B0',\n    light: '#F3E5F5',\n  },\n  default: {\n    normal: '#333',\n    ligth: '#999',\n  },\n}\n\nconst treasureColors = {\n  treasure1: {\n    normal: '#a97142',\n    light: '#ffddb2',\n  },\n  treasure2: {\n    normal: '#aaa9ad',\n    light: '#ece8f5',\n  },\n  treasure3: {\n    normal: '#d4af37',\n    light: '#fbecbb',\n  },\n}\n\nexport const mainTheme = {\n  heading: {\n    fontSize: muiTheme.typography.pxToRem(15),\n  },\n  spacing: muiTheme.spacing,\n  drawerWidth: 240,\n  muiTransitions: {\n    appBarShift: muiTheme.transitions.create(['margin', 'width'], {\n      easing: muiTheme.transitions.easing.easeOut,\n      duration: muiTheme.transitions.duration.enteringScreen,\n    }),\n    content: muiTheme.transitions.create('margin', {\n      easing: muiTheme.transitions.easing.sharp,\n      duration: muiTheme.transitions.duration.leavingScreen,\n    }),\n    contentShift: muiTheme.transitions.create('margin', {\n      easing: muiTheme.transitions.easing.easeOut,\n      duration: muiTheme.transitions.duration.enteringScreen,\n    }),\n  },\n  colors: {\n    primary: muiTheme.palette.primary,\n    secondary: muiTheme.palette.secondary,\n    text: muiTheme.palette.text,\n    white: '#fff',\n    playerColors,\n    turnOrderCards: {\n      ...playerColors,\n      player12: {\n        normal: `linear-gradient(135deg, ${playerColors.player1.normal} 0%, ${playerColors.player1.normal} 50%, ${playerColors.player2.normal} 50%, ${playerColors.player2.normal} 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player1.light} 0%, ${playerColors.player1.light} 50%, ${playerColors.player2.light} 50%, ${playerColors.player2.light} 100%)`,\n      },\n      player34: {\n        normal: `linear-gradient(135deg, ${playerColors.player3.normal} 0%, ${playerColors.player3.normal} 50%, ${playerColors.player4.normal} 50%, ${playerColors.player4.normal} 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player3.light} 0%, ${playerColors.player3.light} 50%, ${playerColors.player4.light} 50%, ${playerColors.player4.light} 100%)`,\n      },\n      wild: {\n        normal: '#9E9E9E',\n        light: '#FAFAFA',\n      },\n      'wild-token': {\n        normal: `linear-gradient(135deg, ${playerColors.player1.normal} 0%, ${playerColors.player1.normal} 33%, ${playerColors.player2.normal} 33%, ${playerColors.player2.normal} 66%, ${playerColors.player3.normal} 66%, ${playerColors.player3.normal} 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player1.light} 0%, ${playerColors.player1.light} 33%, ${playerColors.player2.light} 33%, ${playerColors.player2.light} 66%, ${playerColors.player3.light} 66%, ${playerColors.player3.light} 100%)`,\n      },\n      nemesis: {\n        normal: '#f44336',\n        light: '#ffebee',\n      },\n      maelstrom: {\n        normal: '#795548',\n        light: '#EFEBE9',\n      },\n      blitz: {\n        normal: '#607D8B',\n        light: '#ECEFF1',\n      },\n      'thief-of-dreams': {\n        normal: '#192A56',\n        light: '#D6DFEB',\n      },\n      myth: {\n        normal: '#473570',\n        light: '#A39AB7',\n      },\n      bone: {\n        normal: '#5B5B5B',\n        light: '#AEAEAE',\n      },\n    },\n    cards: {\n      ...treasureColors,\n      any: {\n        color: '#ecf0f1',\n        background: '#ecf0f1',\n      },\n      gem: {\n        color: '#B39DDB',\n        background: '#EDE7F6',\n      },\n      relic: {\n        color: '#90CAF9',\n        background: '#E3F2FD',\n      },\n      spell: {\n        color: '#FFCC80',\n        background: '#FFF3E0',\n      },\n      nemesis: {\n        color: '#E0E0E0',\n      },\n      mage: {\n        color: '#E0E0E0',\n      },\n    },\n    keywordBg: 'rgba(0,0,0,0.1)',\n  },\n  icons: {\n    nemesis: 'ra-broken-skull',\n    mage: 'ra-fluffy-swirl',\n    gem: 'ra-crystals',\n    relic: 'ra-crystal-wand',\n    spell: 'ra-scroll-unfurled',\n    treasure: 'ra-diamond',\n  },\n}\n\nexport type TurnOrderColors = typeof mainTheme.colors.turnOrderCards\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggleExpansion: (id: string) =>\n    createAction(ActionTypes.TOGGLE_EXPANSION, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (expansionIds: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, expansionIds),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../types'\n\nexport type State = {\n  [expansionId: string]: LanguageKey\n}\n\nexport enum ActionTypes {\n  SELECT = 'Settings/Expansions/Languages/SELECT',\n  SET_TO_DB = 'Settings/Expansions/Languages/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/Languages/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/Languages/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/Languages/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/Languages/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/Languages/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedLanguagesStateSlice = {\n  Settings: {\n    Expansions: {\n      Languages: State\n    }\n  }\n}\n","export const EXPANSIONS_DB_KEY = 'expansions-1.8'\n","import { Cmd, loop } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport { EXPANSIONS_DB_KEY } from '../../constants'\nimport { actions } from '../actions'\n\nexport const toggleExpansion = (\n  state: State,\n  action: ReturnType<typeof actions.toggleExpansion>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter(id => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPANSIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { get as getFromDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport { EXPANSIONS_DB_KEY } from '../../constants'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getFromDb, {\n      args: [EXPANSIONS_DB_KEY],\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = []\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_EXPANSION: {\n      return reducerHelpers.toggleExpansion(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedExpansionsStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedExpansionsStateSlice) =>\n  state.Settings.Expansions.Expansions.selected\n\nconst getId = (_: unknown, props: { expansionId: string }) => props.expansionId\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { RootState } from '../'\nimport * as SelectedExpansions from '../Settings/Expansions/Expansions/selected'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<boolean>\nexport const initialState = false\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = SelectedExpansions.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB: {\n      return true\n    }\n\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_SUCCESS:\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return false\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getIsLoading = (state: RootState) => state.MainContentLoading\n\nexport const selectors = {\n  getIsLoading,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\nimport { LanguageKey } from '../types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  select: (expansionId: string, lang: LanguageKey) =>\n    createAction(ActionTypes.SELECT, { expansionId, lang }),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (languages: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, languages),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.Expansion }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/SelectedExpansions/TOGGLE_ALL',\n  TOGGLE_EXPANSION = 'Settings/Expansions/SelectedExpansions/TOGGLE_EXPANSION',\n  SET_TO_DB = 'Settings/Expansions/SelectedExpansions/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/SelectedExpansions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/SelectedExpansions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type ExpansionContentStateSlice = {\n  Settings: {\n    Expansions: {\n      Expansions: {\n        content: State\n      }\n    }\n  }\n}\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const aeonsEndData: IExpansion = {\n  id: 'AE',\n  name: 'Aeons End',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'AE',\n    name: 'Carapace Queen',\n    id: 'CarapaceQueen',\n    health: 60,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Crooked Mask',\n    id: 'CrookedMask',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Prince Of Gluttons',\n    id: 'PrinceOfGluttons',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Rageborne',\n    id: 'Rageborne',\n    health: 70,\n    difficulty: 2,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'AE',\n    name: 'Adelheim',\n    id: 'Adelheim',\n    mageTitle: 'Breach Mage Weaponsmith',\n    ability: `\n        <h2>Aethereal Ward</h2>\n        <p class=\"ability-activation\">Activate during the nemesis draw phase:</p>\n        <p>When a nemesis attack or power card is drawn but before it is resolved, \n        you may discard it. It has no effect.\n        <span class=\"hint\">(The nemesis does not draw a replacement card)</span></p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Amethyst Shard',\n        expansion: 'AE',\n        id: 'AmethystShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Any ally may draw a card and then discard a card in hand.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Brama',\n    id: 'Brama',\n    mageTitle: 'Breach Mage Elder',\n    ability: `\n        <h2>Brink Siphon</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Any player gains 4 life.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Buried Light',\n        expansion: 'AE',\n        id: 'BuriedLight',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Deal 1 damage.<br/>\n              Gain 1 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Jian',\n    id: 'Jian',\n    mageTitle: 'Breach Mage Orphan',\n    ability: `\n        <h2>Black Mirror</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Cast any player's prepped spell without discarding it.</p>\n        <p>Then cast that prepped spell again.\n        <span class=\"hint\">(Discard it afterward.)</span></p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Moonstone Shard',\n        expansion: 'AE',\n        id: 'MoonstoneShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Gain an additional 1 <span class=\"aether\">&AElig;</span> that can \n              only be used to gain a gem.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Kadir',\n    id: 'Kadir',\n    mageTitle: 'Breach Mage Delver',\n    ability: `\n        <h2>Otherworldly Gate</h2>\n        <p class=\"ability-activation\">Activate during any player's main phase:</p>\n        <p>That player may return up to three spells in their discard pile \n        to their hand. That player may prep up to two spells to each \n        of their opened breaches this turn.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Emerald Shard',\n        expansion: 'AE',\n        id: 'EmeraldShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">OR</span>\n              Any player gains 1 life.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Lash',\n    id: 'Lash',\n    mageTitle: 'Breach Mage Scout',\n    ability: `\n        <h2>Quicken Thought</h2>\n        <p class=\"ability-activation\">Activate during any player's main phase:</p>\n        <p>Shuffle any player's turn order card into the turn order deck. \n        That player suffers 1 damage. <span class=\"hint\">(You may not choose the \n        wildcard turn order card.)</span></p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Quartz Shard',\n        expansion: 'AE',\n        id: 'QuartzShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Reveal the top card of the turn order deck. You may place that card \n              on the bottom or the top of the turn order deck. If you revealed \n              a player turn order card, gain an additional 1 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Mist',\n    id: 'Mist',\n    mageTitle: 'Dagger Captain',\n    ability: `\n        <h2>Divine Augury</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Any ally draws 4 cards.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Garnet Shard',\n        expansion: 'AE',\n        id: 'Garnet Shard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">OR</span>\n              Cast any player's prepped spell.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Phaedraxa',\n    id: 'Phaedraxa',\n    mageTitle: 'Breach Mage Seer',\n    ability: `\n        <h2>Auspex Rune</h2>\n        <p class=\"ability-activation\">Activate immediately after a turn order card is drawn:</p>\n        <p>Prevent any damage that the players or Gravehold would suffer during that turn.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Tourmaline Shard',\n        expansion: 'AE',\n        id: 'TourmalineShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Any ally may suffer 1 damage. If they do, they destroy a card in hand.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Xaxos',\n    id: 'Xaxos',\n    mageTitle: 'Breach Mage Adept',\n    ability: `\n        <h2>Metaphysical Link</h2>\n        <p class=\"ability-activation\">Activate during any player's main phase:</p>\n        <p>Allies collectively gain 4 charges. Reveal the turn order deck and return \n        the revealed cards in any order.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Flare',\n        expansion: 'AE',\n        id: 'Flare',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Reveal the top card of the turn order deck, \n              and then place it back on top of the turn order deck. If you \n              revealed a player turn order card, deal 3 damage. Otherwise, \n              deal 1 damage.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Diamond Cluster',\n    id: 'DiamondCluster',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n          If this is the second time you have played Diamond Cluster this turn \n          gain an additional 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Chaos Arc',\n    id: 'ChaosArc',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      Deal 2 additional damage for each prepped spell in an adjacent breach.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Ignite',\n    id: 'Ignite',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage.<br/>\n          Any ally gains 1 charge.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Essence Theft',\n    id: 'EssenceTheft',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 3 damage.<br/>\n          You may discard a card in hand. If your do, any player gains 1 life.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Searing Ruby',\n    id: 'SearingRuby',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Gain an additional 1 <span class=\"aether\">&AElig;</span> that can only \n      be used to gain a spell.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Feral Lightning',\n    id: 'FeralLightning',\n    cost: 5,\n    effect: `\n        <p>\n          This spell may be prepped to a closed breach without focusing it.<br/>\n          <b>Cast:</b> Deal 3 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Planar Insight',\n    id: 'PlanarInsight',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 2 damage.<br/>\n        Deal 1 addtional damage for each of your opened breaches.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Spectral Echo',\n    id: 'SpectralEcho',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage.<br/>\n          You may destroy a card in hand.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Burning Opal',\n    id: 'BurningOpal',\n    cost: 5,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span>.<br/>\n      You may discard a card in hand. If you do, any ally draws a card.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Consuming Void',\n    id: 'ConsumingVoid',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Cast:</b> Destory up to two cards in hand.<br/>\n      Deal 3 damage for each card destroyed in this way.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Unstable Prism',\n    id: 'UnstablePrism',\n    cost: 3,\n    effect: `\n      <p>\n        Play a gem in hand twice and destroy it.\n        <span class=\"or\">OR</span>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Clouded Sapphire',\n    id: 'CloudedSapphire',\n    cost: 6,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span>.<br/>\n      If this is the first time you have played Clouded Sapphire this turn, \n      any ally gains 1 charge.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Mages Talisman',\n    id: 'MagesTalisman',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 1 charge.<br/>\n        Any ally gains 1 charge.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Flexing Dagger',\n    id: 'FlexingDagger',\n    cost: 2,\n    effect: `\n      <p>\n        The next time you focus or open a breach this turn, it costs 3 \n        <span class=\"aether\">&AElig;</span> less.\n        <span class=\"or\">OR</span>\n        Destory this. Deal 1 damage.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Lava Tendril',\n    id: 'LavaTendril',\n    cost: 4,\n    effect: `\n      <p>\n        While prepped, at the end of your casting phase deal 1 damage.<br/>\n        <b>Cast:</b> Deal 3 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Bottled Vortex',\n    id: 'BottledVortex',\n    cost: 3,\n    effect: `\n      <p>\n        Destroy this.<br/>\n        Destory up to two cards in your hand or discard pile.<br/>\n        Draw a card.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Arcane Nexus',\n    id: 'ArcaneNexus',\n    cost: 7,\n    effect: `\n      <p>\n      While prepped, once per turn during your main phase you may return a gem \n      you played this turn to your hand.<br/>\n        <b>Cast:</b> Deal 4 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Dark Fire',\n    id: 'DarkFire',\n    cost: 5,\n    effect: `\n        <p>\n        <b>Cast:</b> Discard up to two cards in hand.<br/>\n        Deal 3 damage for each card discarded this way.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Phoenix Flame',\n    id: 'PhoenixFlame',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage.<br/>\n          You may lose 1 charge to deal 2 additional damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Jade',\n    id: 'Jade',\n    cost: 2,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Amplify Vision',\n    id: 'AmplifyVision',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Focus your closed breach with the lowest focus cost.<br/>\n      Deal 2 damage.<br/>\n      If all of your breaches are opened, deal 1 additional damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Vriswood Amber',\n    id: 'VriswoodAmber',\n    cost: 3,\n    effect: `\n      <p>\n        When gain this, you may place it on top of your deck.<br/>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Blasting Staff',\n    id: 'BlastingStaff',\n    cost: 4,\n    effect: `\n      <p>\n        You may cast a prepped spell that you prepped this turn. If you do, \n        that spell deals 2 additional damage.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Sifters Pearl',\n    id: 'SiftersPearl',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Each player reveals the top card of their deck and either discards it or \n      returns it to the top of their deck.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Wildfire Whip',\n    id: 'WildfireWhip',\n    cost: 6,\n    effect: `\n      <p>\n      While prepped, during your main phase you may spend 2 <span class=\"aether\">&AElig;</span> \n      to cast any player's prepped spell.<br/>\n        <b>Cast:</b> Deal 4 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Focusing Orb',\n    id: 'FocusingOrb',\n    cost: 4,\n    effect: `\n      <p>\n        Focus any player's breach.\n        <span class=\"or\">OR</span>\n        Destory this. Gravehold gains 3 life.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Oblivion Swell',\n    id: 'OblivionSwell',\n    cost: 5,\n    effect: `\n      <p>\n      While prepped, once per turn during your main phase you may gain 1 \n      <span class=\"aether\">&AElig;</span>.<br/>\n      <b>Cast:</b> Deal 2 damage.<br/>\n      You may discard a gem. If you do, deal additional damage equal to its cost.\n        </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'AgonyField-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Agony Field',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Destroy a card in hand that costs 2 <span class=\"aether\">&AElig;</span> or more.<br />\n        <br />\n        <b>Power 2:</b> Unleash. Any player discards three cards and then draws one card.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Bane Sire',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'BleedStatic-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Bleed Static',\n    power: 3,\n    effect: `\n      <p>\n        <b>Power 3:</b> The player with the most prepped spells suffers 2 damage for each of their prepped spells.\n      </p>\n    `,\n  },\n  {\n    id: 'EyeofNothing-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Eye of Nothing',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'HazeSpewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Haze Spewer',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers damage equal to this minion's current life. Then, this minion suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Skewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Skewer',\n    effect: `\n      <p>\n        Unleash. Any player suffers 3 damage and draws a card.\n      </p>\n    `,\n  },\n  {\n    id: 'Slaughter-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Slaughter',\n    effect: `\n      <p>\n        Unleash. Gravehold suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'WovenSky-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Woven Sky',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard three cards.<br />\n        <br />\n        <b>Power 2:</b> Unleash. Any player suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Awaken-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Awaken',\n    effect: `\n      <p>\n        Unleash twice and Gravehold suffers 3 damage. \n        <span class=\"or\">OR</span>\n        Place the most recently discarded minion in the nemesis discard pile back into play.\n      </p>\n    `,\n  },\n  {\n    id: 'Cauterizer-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Cauterizer',\n    shields: 3,\n    hp: 0,\n    effect: `\n      <p>\n        When damage is dealt to this minion, reduce that damage to 1.<br />\n        <br />\n        <b>Persistent:</b> Any player suffers damage equal to this minion's current life.\n      </p>\n    `,\n  },\n  {\n    id: 'Dispel-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Dispel',\n    effect: `\n      <p>\n        Unleash twice. The player with the most prepped spells discards their most expensive prepped spell.\n      </p>\n    `,\n  },\n  {\n    id: 'Needlemaw-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Needlemaw',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'LayWaste-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Lay Waste',\n    effect: `\n      <p>\n        Unleash twice. Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'PulverizingRay-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Power',\n    name: 'Pulverizing Ray',\n    power: 1,\n    effect: `\n      <p>\n        <b>Power 1:</b> Gravehold suffers 18 damage. The players may collectively discard up to 6 gems. For each gem discarded this way, prevent 3 of that damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Venomite-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Venomite',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Persistent:</b> The player with the lowest life suffers 2 damage. \n        <span class=\"or\">OR</span>\n        Any player discards a prepped spell that costs 3 <span class=\"aether\">&AElig;</span> or more.\n      </p>\n    `,\n  },\n  {\n    id: 'DoomAegis-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Doom Aegis',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> The player with the most charges suffers 4 damage and loses all of their charges.\n      </p>\n    `,\n  },\n  {\n    id: 'GatherDarkness-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Gather Darkness',\n    effect: `\n      <p>\n        Any player places their discard pile on top of their deck, shuffles it, and then destroys the top four cards of their deck. Then, Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'JaggedOne-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Jagged One',\n    hp: 14,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'Obliterate-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Obliterate',\n    effect: `\n      <p>\n        Unleash twice. The player with the most opened breaches destroys four cards in hand or suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'RealityRupture-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Reality Rupture',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Destroy two prepped spells that each cost 3 <span class=\"aether\">&AElig;</span> or more.<br />\n        <br />\n        <b>Power 1:</b> Unleash three times.\n      </p>\n    `,\n  },\n  {\n    id: 'Sunder-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Sunder',\n    effect: `\n      <p>\n        Gravehold suffers 4 damage and the player with the lowest life suffers 4 damage.\n        <span class=\"or\">OR</span>\n        Shuffle all of the nemesis turn order cards into the turn order deck.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Topple',\n    effect: `\n      <p>\n        Unleash twice. Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const buriedSecretsData: IExpansion = {\n  id: 'BS',\n  name: 'Buried Secrets',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Triplite Core',\n    id: 'TripliteCore',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to gain \n      cards.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Nerve Jab',\n    id: 'NerveJab',\n    cost: 2,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Silence a minion.\n        </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Double Tap',\n    id: 'DoubleTap',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage. Deal 1 damage.<br/>\n      <span class=\"hint\">(Effects that modify damage affect both \n      instances of damage this spell deals.)</span>\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Oblivium Resin',\n    id: 'ObliviumResin',\n    cost: 5,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      If you have three or more cards that cost 0 <span class=\"aether\">&AElig;</span> \n      in hand, gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Summonite',\n    id: 'Summonite',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n      Gain a Summonite from the supply and place it on top of any ally's \n      discard pile.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'BS',\n    name: 'Manifold Container',\n    id: 'ManifoldContainer',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      The next time you gain a card this turn, you may also gain a card \n      that costs less than the gained card.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Draining Touch',\n    id: 'DrainingTouch',\n    cost: 2,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Gain 1 charge.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Jolting Crust',\n    id: 'JoltingCrust',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>. Gain 1 pulse token.\n        <span class=\"or\">OR</span>\n      Gain 2 <span class=\"aether\">&AElig;</span>. Lose 1 pulse token.\n        If you do, gain 1 charge.\n      </p>\n      `,\n    keywords: ['pulse'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Mentite Chunk',\n    id: 'MentiteChunk',\n    cost: 5,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span>.<br/>\n      If there are seven or more cards in your discard pile, gain an additional \n      1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'BS',\n    name: 'Soul Cords',\n    id: 'SoulCords',\n    cost: 5,\n    effect: `\n      <p>\n      Any player gains 1 pulse token.<br/>\n      Each player with 2 or more pulse tokens gains 1 charge.\n      </p>\n      `,\n    keywords: ['pulse'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Voidium Spike',\n    id: 'VoidiumSpike',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Each ally may discard a card in hand. Each ally that does gains 1 charge.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Precision Shot',\n    id: 'PrecisionShot',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Link</b> <span class=\"hint\">(Two spells with Link mat be prepped to the same breach.)</span>\n        </p>\n        <p>\n        <b>Cast:</b> Deal 2 damage.<br/>\n        If there are six or more other cards in your \n        discard pile, deal 2 additional damage.\n        </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Muted Lacosite',\n    id: 'MutedLacosite',\n    cost: 5,\n    effect: `\n      <p>\n      When you gain this, Silence a minion.<br/>\n      Gain 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Blade Of Wisdom',\n    id: 'BladeOfWisdom',\n    cost: 6,\n    effect: `\n      <p>\n      When you gain this, if there are seven or more other cards in your \n        discard pile, gain 2 life.<br/>\n        <b>Cast:</b> Deal 5 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Stunning Force',\n    id: 'StunningForce',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage to the nemesis.<br/>\n      Silence a minion.\n        </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Flash Of Intellect',\n    id: 'FlashOfIntellect',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Link</b> <span class=\"hint\">(Two spells with Link mat be prepped to the same breach.)</span>\n      </p>\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      If there are six or more other cards in your \n      discard pile, you may gain a Flash of Intellect from the supply and \n      place it on top of your deck.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'BS',\n    name: 'Scholars Opus',\n    id: 'ScholarsOpus',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 1 charge.<br/>\n      If there are seven or more cards in your discard pile, gain 1 \n      additional charge.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'BS',\n    name: 'Bottled Star',\n    id: 'BottledStar',\n    cost: 7,\n    effect: `\n      <p>\n      Gain 3 charges.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Burning Current',\n    id: 'BurningCurrent',\n    cost: 3,\n    effect: `\n      <p>\n      While prepped, during your casting phase you may lose 2 pulse tokens. \n        If you do, spells you cast this turn deal 1 additional damage.<br/>\n        <b>Cast:</b> Deal 1 damage.<br/>\n        Gain 1 pulse token.\n        </p>\n      `,\n    keywords: ['pulse'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'BS',\n    name: 'Psychic Eruption',\n    id: 'PsychicEruption',\n    cost: 8,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal damage equal to the number of cards in any player's \n      discard pile.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'BS',\n    name: 'Living Gauntlet',\n    id: 'LivingGauntlet',\n    cost: 4,\n    effect: `\n      <p>\n      Reveal the top card of your deck.<br/>\n      You may destroy or discard it. Each ally may draw a card. Each ally \n      that does discards a card in hand.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'BS',\n    name: 'Shining Tetrite',\n    id: 'ShiningTetrite',\n    cost: 6,\n    effect: `\n      <p>\n      Gain 4 <span class=\"aether\">&AElig;</span> that cannot be used to gain \n      a card.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'BladeStorm-BS',\n    expansion: 'BS',\n    tier: 1,\n    type: 'Attack',\n    name: 'Blade Storm',\n    effect: `\n      <p>\n        Gravehold suffers 3 damage. The player with the fewest opened breaches suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'HexofVulnerability-BS',\n    expansion: 'BS',\n    tier: 1,\n    type: 'Power',\n    name: 'Hex of Vulnerability',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Place this card next to the player with the most life. For the rest of the game, when that player suffers damage, they suffer 1 additional damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ThrongCommander-BS',\n    expansion: 'BS',\n    tier: 1,\n    type: 'Minion',\n    name: 'Throng Commander',\n    shields: 3,\n    hp: 1,\n    effect: `\n      <p>\n        <b>Persistent:</b> If there are two or more other minions in play, Gravehold suffers 6 damage and discard this minion. Otherwise, any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Divert-BS',\n    expansion: 'BS',\n    tier: 2,\n    type: 'Attack',\n    name: 'Divert',\n    effect: `\n      <p>\n        The player with the most expensive prepped spell casts that spell. The damage that spell deals must be dealt to the player who cast it instead of to a minion or the nemesis.\n      </p>\n    `,\n  },\n  {\n    id: 'Depreciate-BS',\n    expansion: 'BS',\n    tier: 2,\n    type: 'Power',\n    name: 'Depreciate',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. The player with the most expensive card in hand destroys that card and then gains a card of the same type that costs less from any supply pile. That player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ArmoredHaze-BS',\n    expansion: 'BS',\n    tier: 2,\n    type: 'Minion',\n    name: 'Armored Haze',\n    shields: 4,\n    hp: 1,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 1 damage for each shield token this minion has. Then, this minion suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Muster-BS',\n    expansion: 'BS',\n    tier: 3,\n    type: 'Attack',\n    name: 'Muster',\n    effect: `\n      <p>\n        Unleash twice. Each minion in plays gains 5 life.\n      </p>\n    `,\n  },\n  {\n    id: 'BreachTunnel-BS',\n    expansion: 'BS',\n    tier: 3,\n    type: 'Power',\n    name: 'Breach Tunnel',\n    power: 4,\n    effect: `\n      <p>\n        <b>Power 4:</b> If each player has at least one closed breach, the nemesis overwhelms them and the players lose.\n      </p>\n    `,\n  },\n  {\n    id: 'MailedShade-BS',\n    expansion: 'BS',\n    tier: 3,\n    type: 'Minion',\n    name: 'Mailed Shade',\n    shields: 1,\n    hp: 8,\n    effect: `\n      <p>\n        This minion can only be dealt damage by spells cast from a III breach.<br />\n        <br />\n        <b>Persistent:</b> Unleash twice.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\n\nexport const intoTheWildData: IExpansion = {\n  id: 'IW',\n  name: 'Into The Wild',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'IW',\n    name: 'Necroswarm',\n    id: 'Necroswarm',\n    health: 70,\n    difficulty: 7,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'IW',\n    name: 'Inco',\n    id: 'Inco',\n    mageTitle: 'Child Of Green',\n    ability: `\n        <h2>Massive Growth</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Cast any number of Rose Thorns prepped by any number of players. \n        Those spells deal 2 additional damage.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Verdant Emerald',\n        expansion: 'IW',\n        id: 'VerdantEmerald',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Gain a Rose Thorn from the Rose Thorn deck. \n            Place that card on top of any player's discard pile.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'IW',\n    name: 'Razra',\n    id: 'Razra',\n    mageTitle: 'The Trainer',\n    ability: `\n        <h2>Train Rip</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Destroy a card with \"Rip\" in its name in your hand. \n        Gain a card with \"Rip\" in its name from the personal upgrade deck \n        that costs 3 <span class=\"aether\">&AElig;</span> more than the destroyed card \n        and place that card into your hand.\n        <span class=\"or\">OR</span>\n        Return to your hand all cards with \"Rip\" in their name \n        you have played this turn or are in your discard pile.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Relic',\n        name: 'Rip, Help!',\n        expansion: 'IW',\n        id: 'RipHelp',\n        cost: 0,\n        effect: `<p>Gain 1 charge.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 7,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'IW',\n    name: 'Jeweled Brain',\n    id: 'JeweledBrain',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">OR</span>\n          Gain 1 <span class=\"aether\">&AElig;</span>. Return to your hand a \n          card in your discard pile that costs 0 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'IW',\n    name: 'Blast Sphere',\n    id: 'BlastSphere',\n    cost: 8,\n    effect: `\n        <p>\n          Cast any player's prepped spell three times without discarding it \n          and then destroy it.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'IW',\n    name: 'Wound Mender',\n    id: 'WoundMender',\n    cost: 8,\n    effect: `\n        <p>\n          <b>Echo</b>\n        </p>\n        <p>\n          <b>Cast:</b> Deal 2 damage.<br/>\n          If this was cast from an opened III or IV breach, gain 1 life.\n        </p>\n      `,\n    keywords: ['echo'],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'DezmodiasOblivionShard',\n    name: \"Dezmodia's Oblivion Shard\",\n    expansion: 'IW',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n        <p>\n        Gain 2 <span class=\"aether\">&AElig;</span> that cannot be used to gain \n        a relic or spell.\n        </p>\n      `,\n  },\n  {\n    id: 'UlgimorsCoalFragment',\n    name: \"Ulgimor's Coal Fragment\",\n    expansion: 'IW',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n        <p>\n        Gain 2 <span class=\"aether\">&AElig;</span> and suffer 1 damage.\n          <span class=\"or\">OR</span>\n        Gain 1 life.\n        </p>\n      `,\n  },\n  {\n    id: 'IndirasLoneOpal',\n    name: \"Indiras's Lone Opal\",\n    expansion: 'IW',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n        <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n        You may cast a spell in hand that costs 4 aether or less.\n        </p>\n      `,\n  },\n  {\n    id: 'MistsAmethystParagon',\n    name: \"Mist's Amethyst Paragon\",\n    expansion: 'IW',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n        <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n        Any ally may prep a spell in hand to their opened or closed breach(es).\n        </p>\n      `,\n  },\n  {\n    id: 'MalastarsImmolate',\n    name: \"Malastar's Immolate\",\n    expansion: 'IW',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n        <p>\n        While prepped, when you suffer damage gain 1 charge.<br/>\n        <b>Cast:</b> Deal 1 damage.\n        </p>\n      `,\n  },\n  {\n    id: 'YanMagdasIlluminate',\n    name: \"Yan Magda's Illuminate\",\n    expansion: 'IW',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n        <p>\n        While prepped, when you focus or open one of your breaches during your turn, \n        deal 1 damage.<br/>\n        <b>Cast:</b> Deal 1 damage.\n        </p>\n      `,\n  },\n  {\n    id: 'EyeOfTheMaelstrom',\n    name: 'Eye Of The Maelstrom',\n    expansion: 'IW',\n    level: 2,\n    effect: `\n        <p>\n        At the start of the game, set this next to a supply pile that costs \n        4 <span class=\"aether\">&AElig;</span> or more. When a player gains a \n        card from that supply pile, that player gains 1 life.\n        </p>\n      `,\n  },\n  {\n    id: 'WellOfDespair',\n    name: 'Well Of Despair',\n    expansion: 'IW',\n    level: 2,\n    effect: `\n        <p>\n        When a player deals 6 or more damage to the nemesis with a single spell, \n        add a power token to this card.<br/>\n        <br/>\n        At the start of the nemesis turn, the nemesis suffers damage equal to the \n        number of tokens on this card.\n        </p>\n      `,\n  },\n  {\n    id: 'CronesAmulet',\n    name: \"Crones's Amulet\",\n    expansion: 'IW',\n    level: 2,\n    effect: `\n        <p>\n        When a player opens a breach, that player may destroy a card in hand.\n        </p>\n      `,\n  },\n  {\n    id: 'EdibleFungusChunks',\n    name: 'Edible Fungus Chunks',\n    expansion: 'IW',\n    level: 2,\n    effect: `\n        <p>\n        When a player gains life, they gain an additional 1 life.\n        </p>\n      `,\n  },\n  {\n    id: 'UmbralHornOfWar',\n    name: 'Umbral Horn Of War',\n    expansion: 'IW',\n    level: 2,\n    effect: `\n        <p>\n        At the start of the game, set this next to a spell supply pile that costs \n        6 <span class=\"aether\">&AElig;</span> or more. Those spells deal 2 \n        additional damage when cast.\n        </p>\n      `,\n  },\n  {\n    id: 'TheBrokenMask',\n    name: 'The Broken Mask',\n    expansion: 'IW',\n    level: 2,\n    effect: `\n        <p>\n        After a player finishes resolving their ability, any ally gains a charge.\n        </p>\n      `,\n  },\n  {\n    id: 'AlchemistsAlembic',\n    name: \"Alchemist's Alembic\",\n    expansion: 'IW',\n    level: 3,\n    effect: `\n        <p>\n          Once per turn during your main phase, when you play the second \n          gem or relic that costs 4 <span class=\"aether\">&AElig;</span> or more, deal 3 damage.\n        </p>\n      `,\n  },\n  {\n    id: 'SoothsayersPouch',\n    name: \"Soothsayer's Pouch\",\n    expansion: 'IW',\n    level: 3,\n    effect: `\n      <p>\n      Add an additional level 1 treasure to your starting deck using the level 1 treasure rules. <br/>\n      <br/>\n      Your group can use an additional level 2 treasure.\n      </p>\n      `,\n  },\n  {\n    id: 'SuppressingPin',\n    name: 'Suppressing Pin',\n    expansion: 'IW',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn during your main phase, you may discard a card in hand. If you do, any ally draws a card and you may add a power token to a power in play.\n      </p>\n      `,\n  },\n  {\n    id: 'Quicksilver',\n    name: 'Quicksilver',\n    expansion: 'IW',\n    level: 3,\n    effect: `\n      <p>\n      When you cast a spell that costs 2 <span class=\"aether\">&AElig;</span> \n      or more, you may place it into any ally's hand instead of discarding it.\n      </p>\n      `,\n  },\n  {\n    id: 'BandOfRetrieval',\n    name: 'Band of Retrieval',\n    expansion: 'IW',\n    level: 3,\n    effect: `\n      <p>\n      At the start of your casting phase, you may lose 1 charge. If you do, \n      return the next spell you cast during this casting phase to your hand \n      instead of discarding it.\n      </p>\n      `,\n  },\n  {\n    id: 'PurifiedBangle',\n    name: 'Purified Bangle',\n    expansion: 'IW',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn during your main phase, you may spend 9 <span class=\"aether\">&AElig;</span> \n      and suffer 1 damage to place a card in play from the nemesis deck on top \n      of the nemesis deck.\n      </p>\n      `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const legacyData: IExpansion = {\n  id: 'Legacy',\n  name: 'Legacy',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Legacy',\n    name: 'Bladius',\n    id: 'Bladius',\n    health: 40,\n    difficulty: 1,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Deathmind',\n    id: 'Deathmind',\n    health: 80,\n    difficulty: 6,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Fungal Mesh',\n    id: 'FungalMesh',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Maelstrom: Risen',\n    id: 'MaelstromRisen',\n    health: 65,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: `\n        <p>\n          During setup, include two less upgraded basic nemesis cards in each tier.\n        </p>\n      `,\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Spawning Horror',\n    id: 'SpawningHorror',\n    health: 50,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Xaxos: Ascended',\n    id: 'XaxosAscended',\n    health: 90,\n    difficulty: 9,\n    expeditionRating: 4,\n    additionalInfo: `\n        <p>\n          During setup, include three less upgraded basic nemesis cards in each tier.\n        </p>\n      `,\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Green',\n    id: 'LegacyGreen',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    mageTitle: 'Custom',\n    uniqueStarters: [],\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Yellow',\n    id: 'LegacyYellow',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    uniqueStarters: [],\n    mageTitle: 'Custom',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Orange',\n    id: 'LegacyOrange',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    uniqueStarters: [],\n    mageTitle: 'Custom',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Blue',\n    id: 'LegacyBlue',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    uniqueStarters: [],\n    mageTitle: 'Custom',\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Branching Radite',\n    id: 'BranchingRadite',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. <br/>\n          If you have two or more prepped spells, gain an additional 1 \n          <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Fire Chakram',\n    id: 'FireChakram',\n    cost: 2,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Brane Knife',\n    id: 'BraneKnife',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 1 charge. <br/>\n          Any ally focuses their closed breach with \n          the lowest focus cost.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Fulmite Slab',\n    id: 'FulmiteSlab',\n    cost: 6,\n    effect: `\n        <p>\n          Gain 1 <span class=\"aether\">&AElig;</span>. Gain 2 pulse tokens. <br/>\n          Until the end of the turn, you may lose 1 pulse token to gain \n          1 <span class=\"aether\">&AElig;</span> any number of times.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Gilded Marble',\n    id: 'GildedMarble',\n    cost: 6,\n    effect: `\n        <p>\n          Gain 3 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Voltaic Relay',\n    id: 'VoltaicRelay',\n    cost: 4,\n    effect: `\n        <p>\n          Any player gains 3 pulse tokens. <br/>\n          That player may lose 1 pulse token. If they do, \n          they destroy a card in hand.\n        </p>\n      `,\n    keywords: ['strong', 'pulse'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Sparking Siphon',\n    id: 'SparkingSiphon',\n    cost: 3,\n    effect: `\n        <p>\n          When you gain this, gain 2 pulse tokens. <br/>\n          <b>Cast:</b> Deal 2 damage. <br/>\n          You may lose 1 pulse token. If you do, any player gains 1 life.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Breach Communion',\n    id: 'BreachCommunion',\n    cost: 4,\n    effect: `\n        <p>\n          While prepped, once per turn during your main phase \n          you may gain 1 pulse token. <br/>\n          <b>Cast:</b> Deal 2 damage.<br/>\n          You may lose 2 pulse tokens. \n          If you do, deal 3 additional damage.\n        </p>\n      `,\n    keywords: ['strong', 'pulse'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Infernal Mirror',\n    id: 'InfernalMirror',\n    cost: 5,\n    effect: `\n        <p>\n          Any ally gains 1 charge. Any player gains 2 pulse tokens. \n          You may lose 2 pulse tokens. If you do, cast any player's \n          prepped spell. That spell deals 1 additional damage.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Geophage',\n    id: 'Geophage',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 1 <span class=\"aether\">&AElig;</span>. <br/>\n          You may destroy a gem in hand.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Force Transfusion',\n    id: 'ForceTransfusion',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 3 damage. <br/>\n          If you have 3 or more charges, gain 1 charge.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Conductive Grit',\n    id: 'ConductiveGrit',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. Gain 1 pulse token.\n          <span class=\"or\">OR</span>\n          You may lose 1 pulse token. If you do, gain 3 \n          <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Ancient Cyanolith',\n    id: 'AncientCyanolith',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Ethereal Hand',\n    id: 'EtherealHand',\n    cost: 6,\n    effect: `\n        <p>\n          Any ally draws two cards.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Bending Beam',\n    id: 'BendingBeam',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage. <br/>\n          If this spel was cast from an opened III breach, \n          deal 3 additional damage.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Entangled Shard',\n    id: 'EntangledShard',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. If you have 3 or more \n          charges, gain an additional 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Arcane Salvo',\n    id: 'ArcaneSalvo',\n    cost: 5,\n    effect: `\n        <p>\n          While prepped, once per turn during your main\n          phase you may place a relic you played this turn \n          or a relic in your discard pile on top of your deck. <br/>\n          <b>Cast:</b> Deal 4 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Phased Portalite',\n    id: 'PhasedPortalite',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. If your III breach is \n          opened, gain and additional 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Pyro Geist',\n    id: 'PyroGeist',\n    cost: 6,\n    effect: `\n        <p>\n          When you prep this, deal 1 damage. <br/>\n          <b>Cast:</b> Deal 1 damage. Deal 2 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Breach Flare',\n    id: 'BreachFlare',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage. <br/>\n          Focus any player's III breach.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Thunderous Oath',\n    id: 'ThunderousOath',\n    cost: 8,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 6 damage.<br/> \n          Gain 1 pulse token.<br/>\n          You may lose any number of pulse tokens. \n          If you do, any ally draws cards equal to the number \n          of pulse tokens lost this way.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Soothing Torporene',\n    id: 'SoothingTorporene',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">OR</span>\n          Silence a minion.\n        </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Arcing Silicate',\n    id: 'ArcingSilicate',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. Gain 1 pulse token. <br/>\n          You may lose any number of pulse tokens. Deal damage equal to the \n          number of pulse tokens lost this way.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Warping Haze',\n    id: 'WarpingHaze',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage. <br/>\n          If you have two or more other prepped spells, deal 1 additional damage.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Incinerating Fist',\n    id: 'IncineratingFist',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 3 damage.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Reality Stabilizer',\n    id: 'RealityStabilizer',\n    cost: 6,\n    effect: `\n        <p>\n          Gain 2 charges. <br/>\n          Silence a minion.\n        </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Breach Collision',\n    id: 'BreachCollision',\n    cost: 7,\n    effect: `\n        <p>\n          When you gain this, you may place it on top \n          of any player's discard pile. <br/>\n          <b>Cast:</b> Deal 5 damage. <br/>\n          Gravehold gains 1 life.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Fiery Conclusion',\n    id: 'FieryConclusion',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 4 damage.<br/>\n          If there are three or more empty supply piles, \n          deal 3 additional damage.\n        </p>\n      `,\n    keywords: ['strong'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Starfire Frenzy',\n    id: 'StarfireFrenzy',\n    cost: 6,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 4 damage.<br/>\n          You may discard a spell in hand. If you do, deal 1 additional \n          damage and gain 1 charge.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Crumbling Compound',\n    id: 'CrumblingCompound',\n    cost: 5,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. You may discard a gem in \n          in hand. If you do, gain an additional 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Prophetic Lens',\n    id: 'PropheticLens',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 1 charge. <br/>\n          Reveal the top card of your deck. You may destroy it. If you\n          don't, gain 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['strong'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Adrenal Batteries',\n    id: 'AdrenalBatteries',\n    cost: 7,\n    effect: `\n        <p>\n          Gain 2 pulse tokens. You may lose 4 pulse tokens. \n          If you do, open any player's closed breach. Then, \n          gain a spell from any supply pile that costs 5 \n          <span class=\"aether\">&AElig;</span> or less and \n          prep that spell to any player's opened breach.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Refined Lumenium',\n    id: 'RefinedLumenium',\n    cost: 5,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>. <br/>\n          Any ally draws a card.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Void Mill',\n    id: 'VoidMill',\n    cost: 5,\n    effect: `\n        <p>\n          Focus any player's breach. <br/>\n          Two different players may destroy the top card of their \n          discard pile.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Gravity Node',\n    id: 'GravityNode',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Cast: Any player discards a card in hand. \n          If they do, deal 4 damage.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Neural Wreath',\n    id: 'NeuralWreath',\n    cost: 4,\n    effect: `\n        <p>\n          Focus any player's breach. Any player may prep a spell in hand.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Sphere Of Inversion',\n    id: 'SphereOfInversion',\n    cost: 9,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 7 damage. <br/>\n          Any ally may destroy a card in hand. \n          If they do, they gain 2 life.\n        </p>\n      `,\n    keywords: ['strong'],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Ambush-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Attack',\n    name: 'Ambush',\n    effect: `\n      <p>\n        Unleash. Gravehold suffers 2 damage. Any player suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Conduct-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Attack',\n    name: 'Conduct',\n    effect: `\n      <p>\n        Unleash. The player with the most charges suffers 2 damage and gains a charge.\n      </p>\n    `,\n  },\n  {\n    id: 'CreepingCurse-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Power',\n    name: 'Creeping Curse',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash. Any player suffers 2 damage. The players collectively discad two cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'Daze-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Attack',\n    name: 'Daze',\n    effect: `\n      <p>\n        Any player suffers 2 damage and discards a card in hand. If that card costs 0 <span class=\"aether\">&AElig;</span>, Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'EndlessChasm-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Power',\n    name: 'Endless Chasm',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'AetherExtract-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Power',\n    name: 'Aether Extract',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash. Any player discards two gems. If both of those gems cost 0 <span class=\"aether\">&AElig;</span>, Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'RavenousLeviathan-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Minion',\n    name: 'Ravenous Leviathan',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'SpineThresher-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Minion',\n    name: 'Spine Thresher',\n    shields: 3,\n    hp: 1,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Any player suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CausticCocoon-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Minion',\n    name: 'Caustic Cocoon',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Gravehold suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Sap-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Attack',\n    name: 'Sap',\n    effect: `\n      <p>\n        Unleash twice. Any player loses 2 charges.\n        <span class=\"or\">OR</span>\n        Unleash twice. Any player suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Tremor-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Power',\n    name: 'Tremor',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Drain-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Attack',\n    name: 'Drain',\n    effect: `\n      <p>\n        Unleash. Gravehold suffers 2 damage. The players collectively discard two prepped spells. Then, if any player has a prepped spell that costs 4 <span class=\"aether\">&AElig;</span> or more, Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'HummingHive-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Minion',\n    name: 'Humming Hive',\n    shields: 3,\n    hp: 5,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Hunted-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Attack',\n    name: 'Hunted',\n    effect: `\n      <p>\n        Unleash twice. The player with the lowest life suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'TemptingOffer-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Power',\n    name: 'Tempting Offer',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash twice. The player with the lowest life suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Annihilate-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Attack',\n    name: 'Annihilate',\n    effect: `\n      <p>\n        Unleash twice. The player with the most expensive card in hand discards two cards in hand. Then, for each card in that players hand that costs 2 <span class=\"aether\">&AElig;</span> or more, Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'FacetOgre-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Minion',\n    name: 'Facet Ogre',\n    shields: 4,\n    hp: 1,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers damage equal to the number of shield tokens this minion has. If this minion has two or less shield tokens, it gains one shield token.\n      </p>\n    `,\n  },\n  {\n    id: 'FlashofDecay-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Power',\n    name: 'Flash of Decay',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash twice. The player with the most expensive prepped spell destroys it. If that spell costs 4 <span class=\"aether\">&AElig;</span> or less, or no spell was destroyed, Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'GatheringStorm-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Power',\n    name: 'Gathering Storm',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. If there are two nemesis turn order cards in the turn order discard pile, any player suffers 4 damage. Otherwise, Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'MaddeningSpectre-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Minion',\n    name: 'Maddening Spectre',\n    shields: 2,\n    hp: 7,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'Scatter-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Attack',\n    name: 'Scatter',\n    effect: `\n      <p>\n        Unleash twice. Any player destroys their most expensive card in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'Suffocate-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Attack',\n    name: 'Suffocate',\n    effect: `\n      <p>\n        Unleash three times.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 3 damage and any player suffes 3 damage.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { basicNemesisCards } from './basicNemesisCards'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const newAgeData: IExpansion = {\n  id: 'NA',\n  name: 'The New Age',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n  basicNemesisCards,\n  upgradedBasicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'NA',\n    name: 'Maggoth',\n    id: 'Maggoth',\n    health: 45,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'NA',\n    name: 'Arachnos',\n    id: 'Arachnos',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'NA',\n    name: 'Ageless Walker',\n    id: 'AgelessWalker',\n    health: 80,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'NA',\n    name: 'Fenrix',\n    id: 'Fenrix',\n    health: 60,\n    difficulty: 7,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'NA',\n    name: 'Sahala',\n    id: 'Sahala',\n    mageTitle: 'Oracle',\n    ability: `\n        <h2>Star Bind</h2>\n        <p class=\"ability-activation\">Activate during your casting or main phase:</p>\n        <p>Reveal the top three cards of your deck. \n        Place a spell revealed this way into your hand. \n        If there are no spells prepped to your Celestial Breach, \n        prep up to two spells in hand to your Celestial Breach.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Sparkling Meteorite',\n        expansion: 'NA',\n        id: 'SparklingMeteorite',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to focus or open a breach.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'NA',\n    name: 'Gygar',\n    id: 'Gygar',\n    mageTitle: 'Tide Master',\n    ability: `\n        <h2>High Tide</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Place a Surge token on your Ancient Breach.\n        <span class=\"or\">OR</span>\n        Cast a spell prepped to your Ancient Breach. Gain 2 charges.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Tidal Surge',\n        expansion: 'NA',\n        id: 'TidalSurge',\n        cost: 0,\n        effect: `<p><b>Cast:</b> Gain 1 charge.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'NA',\n    name: 'Soskel',\n    id: 'Soskel',\n    mageTitle: 'Aristocrat',\n    ability: `\n        <h2>Energized Sigil</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Place an Energize token on any player's breach that doesn't have one.\n        <span class=\"or\">OR</span>\n        Discard an Energize token on any player's breach. \n        That player gains 4 life.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Lucky Coin',\n        expansion: 'NA',\n        id: 'LuckyCoin',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            You may lose 1 charge. If you do, gain 2 additional <span class=\"aether\">&AElig;</span>.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'NA',\n    name: 'Taqren',\n    id: 'Taqren',\n    mageTitle: 'The Shield',\n    ability: `\n        <h2>Breach Siphon</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Focus any player's breach. \n        Any player gains 1 life for each opened breach you have.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Gift Of Spirit',\n        expansion: 'NA',\n        id: 'GiftOfSpirit',\n        cost: 0,\n        effect: `<p><b>Cast:</b> Deal 1 damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Any ally draws a card.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 2,\n  },\n  {\n    expansion: 'NA',\n    name: 'Talix',\n    id: 'Talix',\n    mageTitle: 'The Chain',\n    ability: `\n        <h2>Soaring Ash</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Destroy two sparks in hand. If you do, \n        shuffle your turn order card into the turn order deck.\n        <span class=\"or\">OR</span>\n        Gravehold gains 5 life.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Relic',\n        name: 'Furnacium',\n        expansion: 'NA',\n        id: 'Furnacium',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Discard up to three spells in hand. \n            Gain 1 <span class=\"aether\">&AElig;</span> for each spell discarded this way. \n            You may place this on top of your deck.`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'NA',\n    name: 'Rhia',\n    id: 'Rhia',\n    mageTitle: 'Relic Hunter',\n    ability: `\n        <h2>Sublimate</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Return a card in your hand or discard pile to its supply pile. \n        If you returned a relic, gain a card from any supply pile \n        that costs up to 3 <span class=\"aether\">&AElig;</span> more than the returned card. \n        Otherwise, gain a card from any supply pile \n        that costs up to 2 <span class=\"aether\">&AElig;</span> more than the returned card. \n        Either way, place the gained card into your hand.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Planar Pocket',\n        expansion: 'NA',\n        id: 'PlanarPocket',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Gain an additional 2 <span class=\"aether\">&AElig;</span> that can only be used to gain a relic.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'NA',\n    name: 'Claudia',\n    id: 'Claudia',\n    mageTitle: 'Prospector',\n    ability: `\n        <h2>Aeplosion</h2>\n        <p class=\"ability-activation\">Activate during any ally's main phase:</p>\n        <p>That ally gains 2 <span class=\"aether\">&AElig;</span>. The next time that ally \n        gains a card from a supply pile this turn, \n        you gain a copy of that card from that supply pile.\n        <span class=\"or\">OR</span>\n        That ally gains 5 <span class=\"aether\">&AElig;</span>.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Aetherscope',\n        expansion: 'NA',\n        id: 'Aetherscope',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Any ally may lose 1 charge. If they do, gain 2 charges.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n  {\n    expansion: 'NA',\n    name: 'Lost',\n    id: 'Lost',\n    mageTitle: 'Living Forge',\n    ability: `\n        <h2>Meek's Might</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Return up to four cards that cost 0 <span class=\"aether\">&AElig;</span> \n        in your discard pile to your hand.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Heart Forge',\n        expansion: 'NA',\n        id: 'HeartForge',\n        cost: 0,\n        effect: `<p>Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Destroy a Spark or Crystal in hand. \n            Gain a card of the same type from the Forged deck \n            and place it into your hand.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'NA',\n    name: 'Lurking Sionite',\n    id: 'LurkingSionite',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      If there is a Lurking Sionite in any ally's discard pile, gain an \n      additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'NA',\n    name: 'Unrefined Blaststone',\n    id: 'UnrefinedBlaststone',\n    cost: 6,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n      Destroy a card in this card's supply pile. If you do, deal 3 damage.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'NA',\n    name: 'Exogranite',\n    id: 'Exogranite',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>\n      <span class=\"or\">OR</span>\n      Destroy this. Gain 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'NA',\n    name: 'Recurring Jasper',\n    id: 'RecurringJasper',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      If the top card of your discard pile is a spell, you may place this \n      gem on top of your deck.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'NA',\n    name: 'Energized Rubidium',\n    id: 'EnergizedRubidium',\n    cost: 5,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span>.<br/>\n      Any ally may discard a card in hand. If they do, that player gains \n      1 charge.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'NA',\n    name: 'Resonant Pearl',\n    id: 'ResonantPearl',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Any ally may discard a Resonant Pearl in hand and draw a card. \n        If they do, gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Caged Fire',\n    id: 'CagedFire',\n    cost: 3,\n    effect: `\n      <p>\n      Destroy the top card of any player's discard pile.\n        <span class=\"or\">OR</span>\n      Destroy this. Gain 2 life.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Galvanized Bauble',\n    id: 'GalvanizedBauble',\n    cost: 3,\n    effect: `\n      <p>\n      Focus any ally's breach.\n        <span class=\"or\">OR</span>\n      Cast any player's prepped spell. You may destroy it.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Aether Conduit',\n    id: 'AetherConduit',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Attach</b> this to any player's breach.\n      </p>\n      <p>\n      Whena spell is cast from this breach, the player who cast that spell \n      gains 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: ['attach'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Well of Energy',\n    id: 'WellOfEnergy',\n    cost: 7,\n    effect: `\n      <p>\n      Gravehold gains 2 life.\n        <span class=\"or\">OR</span>\n      Any player gains 2 life.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Pain Conduit',\n    id: 'PainConduit',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Attach</b> this to any player's breach.\n      </p>\n      <p>\n      When a spell is cast from this breach, it deals 2 additional damage, \n      and discard this card.\n      </p>\n      `,\n    keywords: ['attach'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Link Conduit',\n    id: 'LinkConduit',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Attach</b> this to any player's breach.\n      </p>\n      <p>\n      Two spells may be prepped to this breach.\n      </p>\n      `,\n    keywords: ['attach'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'NA',\n    name: 'Marble Galaxy',\n    id: 'MarbleGalaxy',\n    cost: 2,\n    effect: `\n      <p>\n      Any ally may discard a Marble Galaxy in hand and draw a card.<br/>\n      Gain 1 charge or focus your closed breach with the lowest focus cost.\n        If an ally discarded Marble Galaxy, resolve both effects.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Deluge of Power',\n    id: 'DelugeOfPower',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br/>\n        Any ally may discard up to two cards in hand. They draw a card for each \n        card discarded this way.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Reverberating Shock',\n    id: 'ReverberatingShock',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Echo</b>\n      </p>\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br/>\n        Gain 1 <span class=\"aether\">&AElig;</span> that can only be used to \n        gain cards.\n      </p>\n      `,\n    keywords: ['echo'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Fatal Harmony',\n    id: 'FatalHarmony',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage.<br/>\n      Any ally may discard a Fatal Harmony in hand and draw a card.<br/>\n      If they do, deal 3 damage.<br/>\n      <span class=\"hint\">(Effects that \n      modify damage affect both instances of damage.)</span>\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Bouncing Boom',\n    id: 'BouncingBoom',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Echo</b>\n      </p>\n      <p>\n        <b>Cast:</b> Deal 2 damage.\n        </p>\n        `,\n    keywords: ['echo'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Spirit Lift',\n    id: 'SpiritLift',\n    cost: 8,\n    effect: `\n      <p>\n        While prepped once during your turn when you gain a charge, any ally \n        gains 2 charges.<br/>\n        <b>Cast:</b> Deal 5 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Tethered Darts',\n    id: 'Tethered Darts',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 2 damage.<br/>\n      If this was cast from an opened III or IV breach, you may place this \n      into any ally's hand.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Force Amplifier',\n    id: 'ForceAmplifier',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      If this was cast from an opened III or IV breach, deal 1 additional \n      damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Imbued Smash',\n    id: 'ImbuedSmash',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage.<br/>\n      You may discard a card in hand. If you do, deal 2 damage to the nemesis.<br/>\n        <span class=\"hint\">(Effects that modify damage affect both \n        instances of damage.)</span>\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'NA',\n    name: 'Pattern Strike',\n    id: 'PatternStrike',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage.<br/>\n      You may return to your hand up to two cards in your discard pile \n      that cost 0 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'KadirsEmeraldShard',\n    name: \"Kadir's Emerald Shard\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n      Any player gains 1 life.\n      </p>\n      `,\n  },\n  {\n    id: 'GexsShatteredGeode',\n    name: \"Gex's Shattered Geode\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      You may place the top card of any ally's discard pile into your hand.\n      </p>\n      `,\n  },\n  {\n    id: 'JiansMoonstoneShard',\n    name: \"Jian's Moonstone Shard\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      Gain an additional 1 <span class=\"aether\">&AElig;</span> that can only \n      be used to gain a gem.\n      </p>\n      `,\n  },\n  {\n    id: 'LashsQuartzShard',\n    name: \"Lash's Quartz Shard\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      Reveal the top card of the turn order deck. You may place that card on the bottom or\n      the top of the turn order deck. If you revealed a player turn order card, gain an \n      additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'XaxosFlare',\n    name: \"Xaxo's Flare\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n      <b>Cast:</b> Reveal the top card of the turn order deck, and then place it \n      back on top of the turn order deck. If you revealed a player turn order \n      card, deal 3 damage. Otherwise, deal 1 damage.\n      </p>\n      `,\n  },\n  {\n    id: 'AdelheimsAmethystShard',\n    name: \"Adelheim's Amethyst Shard\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      Any ally may draw a card and then discard a card in hand.\n      </p>\n      `,\n  },\n  {\n    id: 'BramasBuriedLight',\n    name: \"Brama's Buried Light\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'GarusTorch',\n    name: \"Garu's Torch\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n      <b>Cast:</b> Focus any player's breach.\n      </p>\n      `,\n  },\n  {\n    id: 'XaxosPyre',\n    name: \"Xaxo's Pyre\",\n    expansion: 'NA',\n    subtype: 'Spell',\n    level: 1,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Any ally may discard a card in hand. If they do, deal 2 additional damage.\n      </p>\n      `,\n  },\n  {\n    id: 'MistsGarnetShard',\n    name: \"Mist's Garnet Shard\",\n    expansion: 'NA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n      Cast any player's prepped spell.\n      </p>\n      `,\n  },\n  {\n    id: 'ShimmeringCloakOfTheMagus',\n    name: 'Shimmering Cloak Of The Magus',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      After a player finishes resolving their ability, that player deals 2 damage.\n      </p>\n      `,\n  },\n  {\n    id: 'ImbuedShackles',\n    name: 'Imbued Shackles',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      At the start of the game, set this next to a supply pile that costs 7 \n      <span class=\"aether\">&AElig;</span> or more. These cards cost players 1 \n      less <span class=\"aether\">&AElig;</span> to gain.\n      </p>\n      `,\n  },\n  {\n    id: 'GluttonsTooth',\n    name: \"Glutton's Tooth\",\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      When the last card in a supply pile is gained or destroyed, any player deals \n      6 damage.\n      </p>\n      `,\n  },\n  {\n    id: 'CoreOfRage',\n    name: 'Core Of Rage',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      At the start of the game, set this next to a spell or relic supply pile. \n      When a player gains a card from that supply pile, they deal 2 damage.\n      </p>\n      `,\n  },\n  {\n    id: 'CleansingAmulet',\n    name: 'Cleansing Amulet',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      After a player finishes resolving their ability, any player may destroy \n      a card in hand.\n      </p>\n      `,\n  },\n  {\n    id: 'CarapaceFragement',\n    name: 'Carapace Fragement',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      At the start of the game, set this next to a relic or spell supply pile. \n      When a player gains a card from that supply pile, that player focuses one \n      of their breaches.\n      </p>\n      `,\n  },\n  {\n    id: 'ThornedWhip',\n    name: 'Thorned Whip',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      When a player opens a breach, that player deals 2 damage.\n      </p>\n      `,\n  },\n  {\n    id: 'BonesOfDeathmind',\n    name: 'Bones Of Deathmind',\n    expansion: 'NA',\n    level: 2,\n    effect: `\n      <p>\n      When a player opens a breach, that player gains 1 charge.<br/>\n      <br/>\n      At the start of any player's turn, if that player has no closed breaches, \n      that player gains 1 charge.\n      </p>\n      `,\n  },\n  {\n    id: 'AcceleratingGauntlets',\n    name: 'Accelerating Gauntlets',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      At the start of your first turn of the game, gain a card that costs \n      4 <span class=\"aether\">&AElig;</span> or less.\n      </p>\n      `,\n  },\n  {\n    id: 'EssenceExtractor',\n    name: 'Essence Extractor',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      When you play a gem that costs 5 <span class=\"aether\">&AElig;</span> or \n      more, gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'BroochOfAttunment',\n    name: 'Brooch Of Attunment',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn, when you cast a spell that costs 6 <span class=\"aether\">&AElig;</span> \n      or more, gain 2 charges.\n      </p>\n      `,\n  },\n  {\n    id: 'BladedCrystal',\n    name: 'Bladed Crystal',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      When you deal damage to the nemesis with a spell, that spell deals \n      1 additional damage.\n      </p>\n      `,\n  },\n  {\n    id: 'PrismOfDestruction',\n    name: 'Prism Of Destruction',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      If you have no closed breaches, spells you cast deal 2 additional damage.\n      </p>\n      `,\n  },\n  {\n    id: 'ForgottenTrinket',\n    name: 'Forgotten Trinket',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      At the start of your first turn of the game, focus each of your closed \n      breaches once.\n      </p>\n      `,\n  },\n  {\n    id: 'PrecisionMagnifier',\n    name: 'Precision Magnifier',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      Spells you cast that cost 2 <span class=\"aether\">&AElig;</span> or \n      more deal 1 additional damage.\n      </p>\n      `,\n  },\n  {\n    id: 'ShroudOfObfucation',\n    name: 'Shroud of Obfucation',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      When you cast two or more spells during your casting phase, gain 2 \n      <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'VerdantStaff',\n    name: 'Verdant Staff',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      When you gain a spell, gain 1 life.\n      </p>\n      `,\n  },\n  {\n    id: 'FlowingMantle',\n    name: 'Flowing Mantle',\n    expansion: 'NA',\n    level: 3,\n    effect: `\n      <p>\n      At the start of your turn, gain 1 <span class=\"aether\">&AElig;</span> \n      that can onlly be used to gain relics.<br/>\n      <br/>\n      When you gain a relic, you may place it on top of your deck.\n      </p>\n      `,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'DrillbeakWurm-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Minion',\n    name: 'Drillbeak Wurm',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 1 damage. Gravehold suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CarriodeColony-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Minion',\n    name: 'Carriode Colony',\n    hp: 4,\n    effect: `\n      <p>\n        <b>Immediately:</b> This minion suffers damage equal to the number of players in the game.<br />\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'ChaosOrb-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Power',\n    name: 'Chaos Orb',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash. Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Disorient-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Attack',\n    name: 'Disorient',\n    effect: `\n      <p>\n        Unleash. Any player suffers 1 damage and discards a card in hand. If that card is a gem, Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Rend-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Attack',\n    name: 'Rend',\n    effect: `\n      <p>\n        Unleash. Gravehold suffers 1 damage. Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'UnnervingHowl-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Power',\n    name: 'Unnerving Howl',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash. Any player discards two gems in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'CeaselessDarkness-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Power',\n    name: 'Ceaseless Darkness',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 5 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash. Any player suffers 3 damage. Any player discards a card in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'AetherShock-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Attack',\n    name: 'Aether Shock',\n    effect: `\n      <p>\n        Unleash. The player with the most prepped spells suffers 1 damage and discards a prepped spell.\n      </p>\n    `,\n  },\n  {\n    id: 'Decimate-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Attack',\n    name: 'Decimate',\n    effect: `\n      <p>\n        Unleash twice and any players gains 2 charges.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'BlindEnigma-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Minion',\n    name: 'Blind Enigma',\n    hp: 7,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 1 damage. If the nemesis tier is 2 or higher, that player suffers 2 additional damage.\n      </p>\n    `,\n  },\n  {\n    id: 'PlanarCollision-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Power',\n    name: 'Planar Collision',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard two prepped spells.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'SpiritSnare-NA',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Power',\n    name: 'Spirit Snare',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard a card in hand that costs 5 <span class=\"aether\">&AElig;</span> or more.<br />\n        <br />\n        <b>Power 3:</b> Unleash. Any player discards a spell in hand and suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Dement-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Attack',\n    name: 'Dement',\n    effect: `\n      <p>\n        Unleash twice. Any player suffers 1 damage and places their most expensive card in hand on top of their deck.\n      </p>\n    `,\n  },\n  {\n    id: 'Decay-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Attack',\n    name: 'Decay',\n    effect: `\n      <p>\n        Unleash twice. Any player or Gravehold suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CullingScythe-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Power',\n    name: 'Culling Scythe',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash. The player with the lowest life suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Fugue-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Attack',\n    name: 'Fugue',\n    effect: `\n      <p>\n        Any player discards three cards in hand and suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'VolcanicZala-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Minion',\n    name: 'Volcanic Zala',\n    hp: 10,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 3 damage.\n        <span class=\"or\">OR</span>\n        Any player loses 2 charges.\n      </p>\n    `,\n  },\n  {\n    id: 'PortalGuardian-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Minion',\n    name: 'Portal Guardian',\n    hp: 8,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Any player suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ObliteratingMeteor-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Power',\n    name: 'Obliterating Meteor',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard four cards in hand.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. Gravehold suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Mutilate-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Attack',\n    name: 'Mutilate',\n    effect: `\n      <p>\n        Unleash. The players collectively discard two prepped spells. Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Needlemaw-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Minion',\n    name: 'Needlemaw',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'MorbidGyre-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Power',\n    name: 'Morbid Gyre',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. The players collectively discard three cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'GravitySplinter-NA',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Power',\n    name: 'Gravity Splinter',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. The player with the fewest opened breaches suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Eliminate-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    name: 'Eliminate',\n    effect: `\n      <p>\n        Unleash three times.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 6 damage.\n        <span class=\"or\">OR</span>\n        Any player suffers 5 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CrushingStorm-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    name: 'Crushing Storm',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Destroy two opened breaches.<br />\n        <br />\n        <b>Power 1:</b> Unleash three times.\n      </p>\n    `,\n  },\n  {\n    id: 'GnashingMaw-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    name: 'Gnashing Maw',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash. The player with the most expensive prepped spell destroys it. If that spell costs 4 <span class=\"aether\">&AElig;</span> or less, Unleash and any player suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Disperse-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    name: 'Disperse',\n    effect: `\n      <p>\n        Unleash twice. Any player suffers 2 damage and destroys their most expensive card in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'Gore-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    name: 'Gore',\n    effect: `\n      <p>\n        Unleash twice. The player with the most expensive card in hand discards three cards in hand. Then, for each card in that player's hand that costs 2 <span class=\"aether\">&AElig;</span> or more, that player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'HexofDestruction-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    name: 'Hex of Destruction',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 4 damage. Any player destroys the top four cards of their deck.\n      </p>\n    `,\n  },\n  {\n    id: 'EternalWatcher-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Minion',\n    name: 'Eternal Watcher',\n    hp: 10,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 3 damage. If this minion has 6 or less life, it gains 3 life.\n      </p>\n    `,\n  },\n  {\n    id: 'Sunder-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    name: 'Sunder',\n    effect: `\n      <p>\n        Gravehold suffers 4 damage and the player with the lowest life suffers 4 damage.\n        <span class=\"or\">OR</span>\n        Shuffle all of the nemesis turn order cards into the turn order deck.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    name: 'Topple',\n    effect: `\n      <p>\n        Unleash twice. Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'MonstrosityofOmens-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Minion',\n    name: 'Monstrosity of Omens',\n    shields: 5,\n    hp: 0,\n    effect: `\n      <p>\n        When damage is dealt to this minion, reduce that damage to 1.<br />\n        <br />\n        <b>Persistent:</b> Gravehold suffers damage equal to this minion's current life.\n      </p>\n    `,\n  },\n  {\n    id: 'DoomAegis-NA',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    name: 'Doom Aegis',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> The player with the most charges suffers 4 damage and loses all of their charges.\n      </p>\n    `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'HissingAcid',\n    name: 'Hissing Acid',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Power',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br /> \n        <b>Power 3:</b> Reveal the top card of the turn order deck. If it's a player turn order card, Unleash three times. Otherwise, any player suffers 5 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Wreck',\n    name: 'Wreck',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice. Gravehold suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BaneCommander',\n    name: 'Bane Commander',\n    expansion: 'NA',\n    tier: 1,\n    type: 'Minion',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Any player suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SkyTremor',\n    name: 'Sky Tremor',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. Gravehold suffers 4 damage.\t\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'EngulfingMadness',\n    name: 'Engulfing Madness',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Any player suffers 4 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Separate',\n    name: 'Separate',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice. Gravehold suffers 2 damage. The player with the most expensive prepped spell discards that spell.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'NeedleDoom',\n    name: 'Needle Doom',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Minion',\n    hp: 12,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Gravehold suffers 2 damage.\t\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Marked',\n    name: 'Marked',\n    expansion: 'NA',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice. The player with the lowest life suffers 3 damage.\t\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Eradicate',\n    name: 'Eradicate',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice. Any player discards their three most expensive cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'FlashOfDecay',\n    name: 'Flash Of Decay',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash twice. The player with the most expensive prepped spell destroys it. If that spell costs 4 <span class=\"aether\">&AElig;</span> or less, or no spell was destroyed, Unleash.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Terrify',\n    name: 'Terrify',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash three times. Gravehold suffers 2 damage. Any player destroys two cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'RayOfDesolation',\n    name: 'Ray Of Desolation',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>Power 1:</b> Unleash twice. The players collectively destroy the two most expensive prepped spells.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'ThunderousTempest',\n    name: 'Thunderous Tempest',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 9 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash. If there are two nemesis turn order cards in the turn order discard pile, any player suffers 8 damage. Otherwise, any player suffers 5 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Sacrifice',\n    name: 'Sacrifice',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash four times. \n        <span class=\"or\">OR</span> \n        Gravehold suffers 4 damage and any player suffers 4 damage.\t\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Burialskulk',\n    name: 'Burialskulk',\n    expansion: 'NA',\n    tier: 3,\n    type: 'Minion',\n    hp: 18,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash twice.\t\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const outerDarkData: IExpansion = {\n  id: 'OD',\n  name: 'Outer Dark',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'OD',\n    name: 'Thrice Dead Prophet',\n    id: 'ThriceDeadProphet',\n    health: 40,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'OD',\n    name: 'Wraithmonger',\n    id: 'Wraithmonger',\n    health: 70,\n    difficulty: 6,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'OD',\n    name: 'Indira',\n    id: 'Indira',\n    mageTitle: 'Breach Apprentice',\n    ability: `\n        <h2>Pyromancer's Guile</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Cast any number of spells in hand. Those spells each \n        deal 1 additional damage.</p>\n        <p>You may destroy a card in your discard pile.</p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Twin Opal',\n        expansion: 'OD',\n        id: 'TwinOpal',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              You may cast a spell in hand.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'OD',\n    name: 'Remnant',\n    id: 'Remnant',\n    mageTitle: 'Aethereal Entity',\n    ability: `\n        <h2>Ephemera Masque</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Any ally returns two cards in their discard pile to their hand.\n        <span class=\"or\">OR</span>\n        Gravehold gains 5 life.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Void Shard',\n        expansion: 'OD',\n        id: 'VoidShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Gain an additional 1 <span class=\"aether\">&AElig;</span> that can only \n              be used to focus or open a breach.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Char',\n    id: 'Char',\n    cost: 8,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 6 damage.<br/>\n          If this damage causes a minion to be discarded, any player gains 2 life.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Alien Element',\n    id: 'AlienElement',\n    cost: 4,\n    effect: `\n        <p>\n          Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n          For each of your breaches with a spell prepped to it, gain an \n          additional 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Scorch',\n    id: 'Scorch',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 4 damage.<br/>\n          If this damage causes a minion from the nemesis deck to be discarded, \n          any ally gains 2 charges.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Pyromancy',\n    id: 'Pyromancy',\n    cost: 7,\n    effect: `\n        <b>Cast:</b> Deal 1 damage.<br/>\n        Allies may collectively discard up to two cards in hand. For each card \n        discarded this way, deal 3 additional damage.\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Feedback Aura',\n    id: 'FeedbackAura',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 3 damage.<br/>\n          If you have 4 or more charges, deal 3 additional damage.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Catalyst',\n    id: 'Catalyst',\n    cost: 6,\n    effect: `\n        <p>\n          <b>Cast:</b> Deal 2 damage.<br/>\n          If you have 2 life or less, deal 5 additional damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Pain Stone',\n    id: 'PainStone',\n    cost: 6,\n    effect: `\n        <p>\n          Gain 3 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">OR</span>\n          Gain 2 <span class=\"aether\">&AElig;</span> and deal 1 damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'OD',\n    name: 'Astral Cube',\n    id: 'AstralCube',\n    cost: 5,\n    effect: `\n        <p>\n          Return a gem you played this turn to your hand.<br/>\n          Reveal the top card of the turn order deck. If you revealed a \n          player's turn order card, that player gains 1 life.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'OD',\n    name: 'Riddle Sphere',\n    id: 'RiddleSphere',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 1 charge.\n          <span class=\"or\">OR</span>\n          You may lose 2 charges. If you do, gain 5 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Nether Conduit',\n    id: 'NetherConduit',\n    cost: 7,\n    effect: `\n        <b>Cast:</b> Reveal a card in hand that costs 2 <span class=\"aether\">&AElig;</span> \n        or more.<br/>\n        If you do, deal damage equal to the number of cards missing in \n        that card's supply pile. Then, any ally may gain a card from that supply\n        pile.<br/>\n        <span class=\"hint\">(Gem supply piles start with 7 cards. Relic and \n        spell supply piles start with 5 cards)</span>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Haunted Berylite',\n    id: 'HauntedBerylite',\n    cost: 3,\n    effect: `\n        <p>\n          Gain 2 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">OR</span>\n          Discard a card in hand. If you do, gain 2 charges.\n        </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'LabyrinthWisp-OD',\n    expansion: 'OD',\n    tier: 1,\n    type: 'Minion',\n    name: 'Labyrinth Wisp',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player discards a prepped spell.\n        <span class=\"or\">OR</span>\n        Any player loses 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'Assail-OD',\n    expansion: 'OD',\n    tier: 2,\n    type: 'Attack',\n    name: 'Assail',\n    effect: `\n      <p>\n        Unleash twice. The player with the most expensive prepped spell places that spell on top of their deck.\n      </p>\n    `,\n  },\n  {\n    id: 'DireAbbatoir-OD',\n    expansion: 'OD',\n    tier: 3,\n    type: 'Power',\n    name: 'Dire Abbatoir',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> The player with the most life suffers damage equal to their current life.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { basicNemesisCards } from './basicNemesisCards'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const promosData: IExpansion = {\n  id: 'promos',\n  name: 'Promos',\n  type: 'promo',\n  mages,\n  nemeses,\n  cards,\n  treasures,\n  basicNemesisCards,\n  upgradedBasicNemesisCards,\n}\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Drown in Flames',\n    id: 'DrownInFlames',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage to a minion or the nemesis.<br />\n        You may lose 2 charges. If you do, repeat this.<br />\n        <span class=\"hint\">(Effects that modify damage affect each \n        instance of damage this spell deals)</span>\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Fleeting Vision',\n    id: 'FleetingVision',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br />\n        Each player may reveal the top two cards of their deck and may discard \n        any of those cards.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Splinter Missile',\n    id: 'SplinterMissile',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br />\n        Any ally may discard a card in hand. \n        If they do, divide this damage however you choose among the nemesis \n        and any number of minions.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Echo Stone',\n    id: 'EchoStone',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        If you have played another Echo Stone this turn, gain an additional \n        1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Thieving Spirit',\n    id: 'ThievingSpirit',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br />\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Fractured Quartz',\n    id: 'FracturedQuartz',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may destroy two cards in this card's supply pile. If you do, \n        gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Rock Launcher',\n    id: 'RockLauncher',\n    cost: 3,\n    effect: `\n      <p>\n        Discard or destroy a card in hand. If you do, deal damage equal to its cost.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Abacus of Ignition',\n    id: 'AbacusOfIgnition',\n    cost: 4,\n    effect: `\n      <p>\n        You may casdt any ally's prepped spell.<br />\n        Any ally draws a card.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Illuminating Flame',\n    id: 'IlluminatingFlame',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br/>\n        If this was cast from an opened III or IV breach, you may destroy this.\n        If you do, gain 3 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Chronal Arc',\n    id: 'ChronalArc',\n    cost: 7,\n    effect: `\n      <p>\n        This spell must be prepped to two adjacent breaches so that this card \n        touches both breaches. This fully occupies both breaches.<br />\n        <b>Cast:</b> Deal 4 damage.<br />\n        You may place this card into your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Coruscating Sapal',\n    id: 'CoruscatingSapal',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may lose 1 charge. If you do, \n        gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Humming Shell',\n    id: 'HummingShell',\n    cost: 7,\n    effect: `\n      <p>\n        Destroy up to two cards in hand or discard pile.\n        <span class=\"or\">OR</span>\n        Gain 2 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Force Catalyst',\n    id: 'ForceCatalyst',\n    cost: 4,\n    effect: `\n      <p>\n        While prepped, during you main phase you may spend 3 <span class=\"aether\">&AElig;</span> \n        to cast any player's prepped spell.<br />\n        <b>Cast:</b> Deal 3 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Talusoid Clod',\n    id: 'TalusoidClod',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      <p>\n\t<b>Recall:</b> You may suffer 2 damage to return this to your hand.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Chronophage Coil',\n    id: 'ChronophageCoil',\n    cost: 8,\n    effect: `\n      <p>\n        Destroy this.<br />\n\tShuffle any player's turn order card into the turn order deck.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Parasitic Force',\n    id: 'ParasiticForce',\n    cost: 8,\n    effect: `\n      <p>\n        You may prep this to any player's opened breach.<br />\n\t<b>Cast:</b> Deal 6 damage.<br />\n\tYou may destroy up to two cards in your hand or discard pile.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'ReevesRavenShard',\n    name: \"Reeve's Raven Shard\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>. You may discard a card in \n        hand. If you do, gain and additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'NymsVision',\n    name: \"Nym's Vision\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Reveal the top card of the nemesis deck. If you revealed an attack, gain \n        2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'SparrowsAid',\n    name: \"Sparrow's Aid\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Any ally may prep a spell in hand to their opened or closed breach(es).\n      </p>\n    `,\n  },\n  {\n    id: 'WraithsEssence',\n    name: \"Wraith's Essence\",\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        When a player becomes exhausted, do not resolve any on-exhaust effects.<br />\n        <br />\n        The players do not lose when all players are exhausted.\n      </p>\n    `,\n  },\n  {\n    id: 'VolatileClasp',\n    name: 'Volatile Clasp',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        When you play a relic that costs 4 <span class=\"aether\">&AElig;</span> \n        or more, any ally gains 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'BreachStabilizer',\n    name: 'Breach Stabilizer',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        Any number of Sparks may be prepped to your I breach.\n      </p>\n    `,\n  },\n  {\n    id: 'FangedChoker',\n    name: 'Fanged Choker',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the end of your draw phase, if the total cost of spells in your hand \n        is 6 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n    `,\n  },\n  {\n    id: 'EndlessBandolier',\n    name: 'Endless Bandolier',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        Once per turn during your main phase you may discard a card in hand. \n        If you do, deal 1 damage and gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'SahalasBlackMeteorite',\n    name: \"Sahala's Black Meteorite\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to focus \n        or open your IV breach.\n      </p>\n    `,\n  },\n  {\n    id: 'NooksMysticFlourish',\n    name: \"Nook's Mystic Flourish\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        Cast a spell in your hand. If that spell costs 1 <span class=\"aether\">&AElig;</span> \n        or more, return that spell to its supply pile, gain a spell from any supply pile that \n        costs less than the cast spell, and gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'RitualStaff',\n    name: 'Ritual Staff',\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        When a player gains a card that costs 7 <span class=\"aether\">&AElig;</span> or more, \n        add a power token to this card.<br />\n        <br />\n        At the start of the nemesis turn if the nemesis has exactly one turn order card \n        in the turn order discard pile, the nemesis suffers damage equal to the number \n        of tokens on this card.\n      </p>\n    `,\n  },\n  {\n    id: 'CrownOfFangs',\n    name: 'Crown Of Fangs',\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        At the start of the game, set this next to a spell supply pile that costs \n        6 <span class=\"aether\">&AElig;</span> or more. These cards cost player's 1 less \n        <span class=\"aether\">&AElig;</span> to gain.\n      </p>\n    `,\n  },\n  {\n    id: 'EverfullPurse',\n    name: 'Everfull Purse',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the end of your draw phase, if the total cost of gems and relics in your hand \n        is 7 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n    `,\n  },\n  {\n    id: 'ArcaneTimepiece',\n    name: 'Arcane Timepiece',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain 2 charges.<br />\n        <br />\n        Once per game when the nemesis turn order card is drawn, you may lose 4 charges. \n        If you do, skip the nemesis turn.\n      </p>\n    `,\n  },\n  {\n    id: 'BootsOfArcaneQuickening',\n    name: 'Boots Of Arcane Quickening',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain 4 <span class=\"aether\">&AElig;</span> \n        that can only be used to gain a spell.\n      </p>\n    `,\n  },\n  {\n    id: 'IlyasTruliteOfForce',\n    name: \"Ilya's Trulite of Force\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span><br />\n\tAny ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that can only be used to gain a spell or to focus or open a breach.\n      </p>\n    `,\n  },\n  {\n    id: 'KelsTruliteOfEnergy',\n    name: \"Kel's Trulite of Energy\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span><br />\n\tAny ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that can only be used to gain a spell or to gain a gem or relic.\n      </p>\n    `,\n  },\n  {\n    id: 'QusCallOfTheVoid',\n    name: \"Qu's Call of the Void\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        While prepped, the first time you play a gem or relic that costs 1 <span class=\"aether\">&AElig;</span> or more each turn, play that card twice and then return it to the supply.\n      </p>\n      <p>\n\t<b>Cast:</b> Deal 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ThraxirsNamelessSiphon',\n    name: \"Thraxir's Nameless Siphon\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n\tAny ally may discard a card in hand. If they do, focus one of your breaches.\n      </p>\n    `,\n  },\n  {\n    id: 'CairnasInvigorate',\n    name: \"Cairna's Invigorate\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Return a spell in your discarad pile to your hand.\n      </p>\n    `,\n  },\n  {\n    id: 'DezmodiasEternalDarkness',\n    name: \"Dezmodia's Eternal Darkness\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        This may be prepped to closed breaches. <br />\n        <b>Cast:</b> Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to focus or open a breach.\n      </p>\n    `,\n  },\n  {\n    id: 'OhatsShowerOfCoals',\n    name: \"Ohat's Shower of Coals\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Suffer 1 damage and gain 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Deal 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'LuciensSunShard',\n    name: \"Lucien's Sun Shard\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to open a breach.\n      </p>\n    `,\n  },\n  {\n    id: 'RethsFossilizedRoze',\n    name: \"Reth's Fossilized Rose\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Discard a card in hand. If you do, gain a spell that costs 5 <span class=\"aether\">&AElig;</span> or less from any supply pile.\n      </p>\n    `,\n  },\n  {\n    id: 'TaqrensDefenseGlyphs',\n    name: \"Taqren's Defense Glyphs\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n\tYou may suffer 1 damge. If you do, gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'ZhanasScimitar',\n    name: \"Z'hana's Scimitar\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>\n        <span class=\"or\">OR</span>\n        Place 2 <span class=\"aether\">&AElig;</span> tokens on top of any card in the supply. When any player gains that card, they gain the <span class=\"aether\">&AElig;</span> tokens on it.\n      </p>\n    `,\n  },\n  {\n    id: 'ArachnosSpellbook',\n    name: \"Arachnos's Speelbook\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage. <br />\n\tIf you have two or more cards in hand that cost 4 <span class=\"aether\">&AElig;</span> or more, gain 1 charge.\n      </p>\n    `,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Menace-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Menace',\n    effect: `\n      <p>\n        The players collectively discard two spells that are in hand or prepped. The players collectively place two gems from their hands on top of their decks.\n      </p>\n    `,\n  },\n  {\n    id: 'GlyphEnigma-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Glyph Enigma',\n    hp: 7,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehod suffers 1 damage. If the nemesis tier is 2 or higher, Gravehold suffers 2 additional damage.\n      </p>\n    `,\n  },\n  {\n    id: 'GravitySplinter-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Gravity Splinter',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. The player with the fewest opened breaches suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'WorldPurge-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Power',\n    name: 'World Purge',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 9 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash three times.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 7 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Bane Sire',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'Decimate-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Decimate',\n    effect: `\n      <p>\n        Unleash twice and any player gains 2 charges.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'SpiritCage-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    name: 'Spirit Cage',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard a card in hand that costs 5 <span class=\"aether\">&AElig;</span> or more.<br />\n        <br />\n        <b>Power 3:</b> Unleash twice. Any player discards a spell in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'BanefulCrux-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Baneful Crux',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard two cards in hand that each cost 4 <span class=\"aether\">&AElig;</span> or more.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Negate-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    name: 'Negate',\n    effect: `\n      <p>\n        Unleash twice. Any player destroys their most expensive card in hand.\n        <span class=\"or\">OR</span>\n        Unleash twice. Gravehold suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Gallowskulk-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Minion',\n    name: 'Gallowskulk',\n    hp: 10,\n    effect: `\n      <p>\n        The player with the lowest life suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Unmake-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Attack',\n    name: 'Unmake',\n    effect: `\n      <p>\n        Unleash twice. Any player destroys the top three cards of their deck and suffers 3 damage.\n      </p>\n    `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'Writhe',\n    name: 'Writhe',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Any player suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BubblingRuin',\n    name: 'Bubbling Ruin',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash. Any player discards three cards in hand. \n        Gravehold suffers 2 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SweepingBlackness',\n    name: 'Sweeping Blackness',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Gravehold suffers 4 damage.<br />\n        <br />\n        Any player loses 2 charges and discards two cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'TwistingFlesh',\n    name: 'Twisting Flesh',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. Any player suffers 3 damage. That player gains \n        a Cursed Manacles from the Curse deck and places it on top of their deck.\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\n\nexport const shatteredDreamsData: IExpansion = {\n  id: 'SD',\n  name: 'Shattered Dreams',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'SD',\n    name: 'The Wailing',\n    id: 'TheWailing',\n    health: 50,\n    difficulty: 6,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'SD',\n    name: 'Nook',\n    id: 'Nook',\n    mageTitle: 'Orb Caller',\n    ability: `\n        <h2>Condense Aether</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>You my destroy a card in your hand or discard pile.\n        Gain 4 <span class=\"aether\">&AElig;</span>.<br/>\n        You may place the next spell you gain this turn into your hand.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Mystic Orb',\n        expansion: 'SD',\n        id: 'MysticOrb',\n        cost: 0,\n        effect: `<p>Gain 1 charge.<br/>\n          Cast a spell in your hand. Return that spell to its supply pile, \n          if able. You may lose 1 charge to gain a spell from any supply pile \n          that costs less than the cast spell.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 9,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'SD',\n    name: 'Olivinite',\n    id: 'Olivinite',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 aether.\n        <span class=\"or\">OR</span>\n      Deal 1 damage to a minion.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'SD',\n    name: 'Cache Glass',\n    id: 'CacheGlass',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      If there is a Cache Glass in your discard pile, you may destroy a card \n      in your discard pile.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'SD',\n    name: 'Reflective Conduit',\n    id: 'ReflectiveConduit',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Attach</b> this to any player's breach.\n      </p>\n      <p>\n      When a spell is cast from this breach, the player who cast that spell may \n      return it to their hand instead of discarding it. If they do, discard this.\n      </p>\n      `,\n    keywords: ['attach'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'SD',\n    name: 'Will Weaver',\n    id: 'WillWeaver',\n    cost: 7,\n    effect: `\n      <p>\n      Gain 2 charges.<br/>\n      After the next time you activate your ability this turn, deal 3 damage.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SD',\n    name: 'Breach Seeker',\n    id: 'BreachSeeker',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Echo</b>\n      </p>\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Focus any ally's breach.\n        </p>\n      `,\n    keywords: ['echo'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SD',\n    name: 'Crescendo Ray',\n    id: 'CrescendoRay',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      Gain 1 <span class=\"aether\">&AElig;</span> for each other spell you have \n        prepped.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SD',\n    name: 'Storm Vapors',\n    id: 'StormVapors',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      If there is another Storm Vapors in any player's discard pile, \n      focus any player's breach.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SD',\n    name: 'Mantra of Strength',\n    id: 'MantraOfStrength',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Cast:</b> Any player focuses their closed breach wich the highest \n      focus cost.<br/>\n      Deal 1 damage.<br/>\n      You may destroy this. If you do, deal 2 additional damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SD',\n    name: 'Embody Flame',\n    id: 'EmbodyFlame',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 5 damage.<br/>\n      You may destroy a card in this card's supply pile. If you do deal 3 \n      additional damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SD',\n    name: 'Snap Ritual',\n    id: 'SnapRitual',\n    cost: 6,\n    effect: `\n      <p>\n      While prepped once per turn during your main phase, you may discard \n      a card in hand to deal 2 damage.<br/>\n        <b>Cast:</b> Deal 3 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'MazahaedronsWorldheartShard',\n    name: \"Mazahaedron's Worldheart Shard\",\n    expansion: 'SD',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n      Gain 2 <span class=\"aether\">&AElig;</span> that can only be used to gain \n      a card. Place the next card you gain this turn on top of any ally's discard pile.\n      </p>\n      `,\n  },\n  {\n    id: 'PhaedraxasTourmalineShard',\n    name: \"Phaedraxa's Tourmaline Shard\",\n    expansion: 'SD',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      Any ally may suffer 1 damage. If they do, they destroy a card in hand.\n      </p>\n      `,\n  },\n  {\n    id: 'FracturedShell',\n    name: 'Fractured Shell',\n    expansion: 'SD',\n    level: 2,\n    effect: `\n      <p>\n      At the start of the game, set this next to asupply pile that costs 4 \n      <span class=\"aether\">&AElig;</span> or more. When a player gains a card \n      from that supply, that player gains a charge.\n      </p>\n      `,\n  },\n  {\n    id: 'Extra-DimensionalLens',\n    name: 'Extra-Dimensional Lens',\n    expansion: 'SD',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn during your main phase, you may reveal the top three cards \n      of the nemesis deck. Return them in any order.\n      </p>\n      `,\n  },\n  {\n    id: 'SeersBracer',\n    name: \"Seer's Bracer\",\n    expansion: 'SD',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn during your main phase when you gain a charge, any ally \n      draws a card.\n      </p>\n      `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const theAncientsData: IExpansion = {\n  id: 'TA',\n  name: 'The Ancients',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n  upgradedBasicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'TA',\n    name: 'The Wanderer',\n    id: 'TheWanderer',\n    health: 40,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'TA',\n    name: 'Mazra',\n    id: 'Mazra',\n    mageTitle: 'The Reader',\n    ability: `\n        <h2>Research</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Destroy a card with \"Mazra\" in its name in your hand. \n        Gain a card with \"Mazra\" in its name from the personal upgrade deck \n        that costs 3 <span class=\"aether\">&AElig;</span> more than the destroyed card \n        and place that card into your hand.\n        <span class=\"or\">OR</span>\n        Return to your hand all cards with \"Mazra\" in their name \n        in your discard pile.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: \"Mazra's Studies\",\n        expansion: 'TA',\n        id: 'MazrasStudies',\n        cost: 0,\n        effect: `<p><b>Cast:</b> Deal 1 damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Focus your III breach.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'TA',\n    name: 'Qu',\n    id: 'Qu',\n    mageTitle: 'Builder And Destroyer',\n    ability: `\n        <h2>Duality Embrace</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>If you are in Destroyer form, cast up to two different spells prepped \n        by any number of players, and then flip over the Form token. \n        Otherwise, any player preps up to two spells in their discard pile \n        to their opened breaches, and then flip over the Form token.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Relic',\n        name: 'Change Form',\n        expansion: 'TA',\n        id: 'ChangeForm',\n        cost: 0,\n        effect: `<p>Qu flips over the Form token.</p>`,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'MeldedRadite',\n        expansion: 'TA',\n        id: 'MeldedRadite',\n        cost: 0,\n        effect: `<p>Gain 0 <span class=\"aether\">&AElig;</span>.<br/>\n            You may cast any player's prepped spell.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 8,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'TA',\n    name: 'Shining Fluorite',\n    id: 'ShiningFluorite',\n    cost: 7,\n    effect: `\n      <p>\n      Gain 3 <span class=\"aether\">&AElig;</span>.<br/>\n      Place the next spell you gain this turn into your hand.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TA',\n    name: 'Polyphase Turbine',\n    id: 'PolyphaseTurbine',\n    cost: 3,\n    effect: `\n      <p>\n        If this is the first time you've played a Polyphase Turbine this turn, \n        gain 2 <span class=\"aether\">&AElig;</span>. Otherwise, gain 1 charge \n        and 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TA',\n    name: 'Breach Extractor',\n    id: 'BreachExtractor',\n    cost: 5,\n    effect: `\n      <p>\n      Any player destroys up to two cards in hand.\n        <span class=\"or\">OR</span>\n      Destroy this. Gravehold gains 3 life.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TA',\n    name: 'Focusing Conduit',\n    id: 'FocusingConduit',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Attach</b> this to any player's breach.\n      </p>\n      <p>\n        At the end of that player's casting phase, focus this breach.\n        When this breach is opened, destory this card.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TA',\n    name: 'Dual Flash',\n    id: 'DualFlash',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 2 damage.<br/>\n      If this is the first time you have cast Dual Flash during your casting \n      phase this turn, you may cast any player's prepped Dual Flash without\n      discarding it.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TA',\n    name: 'Dust Caller',\n    id: 'DustCaller',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage.<br/>\n      Any ally returns a card that costs 0 <span class=\"aether\">&AElig;</span> \n      from their discard pile to their hand.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TA',\n    name: 'Symbiotic Synapse',\n    id: 'SymbioticSynapse',\n    cost: 7,\n    effect: `\n      <p>\n        If there is another Symbiotic Synapse in any player's discard pile, this\n        gains <b>Echo</b>.\n        </p>\n        <p>\n        <b>Cast:</b> Deal 4 damage.\n        </p>\n        `,\n    keywords: ['echo'],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'RemnantsVoidShard',\n    name: \"Remnant's Void Shard\",\n    expansion: 'TA',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n      Gain an additional 1 <span class=\"aether\">&AElig;</span> that can only \n      be used to focus or open a breach.\n      </p>\n      `,\n  },\n  {\n    id: 'QuiliussErasure',\n    name: \"Quilius's Erasure\",\n    expansion: 'TA',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      If this damages a minion, deal 1 additional damage.\n      </p>\n      `,\n  },\n  {\n    id: 'ZhanasFleetingEmber',\n    name: \"Z'hana's Fleeting Ember\",\n    expansion: 'TA',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n      <b>Cast:</b> Cast one of your prepped spells that costs 4 \n      <span class=\"aether\">&AElig;</span> or less without discarding it.\n      </p>\n      `,\n  },\n  {\n    id: 'BlightedRootClump',\n    name: 'Blighted Root Clump',\n    expansion: 'TA',\n    level: 2,\n    effect: `\n      <p>\n      When the last card in a supply pile is gained or destroyed, any player \n      gains 3 life.\n      </p>\n      `,\n  },\n  {\n    id: 'PetrifiedWitchFinger',\n    name: 'Petrified Witch Finger',\n    expansion: 'TA',\n    level: 2,\n    effect: `\n      <p>\n      When the last card in a supply pile is gained or destroyed, any player \n      gains 3 charges.\n      </p>\n      `,\n  },\n  {\n    id: 'WaywardScraps',\n    name: 'Wayward Scraps',\n    expansion: 'TA',\n    level: 2,\n    effect: `\n      <p>\n      Once per turn during any player's main phase that player may spend \n      4 <span class=\"aether\">&AElig;</span> to focus each player's IV breach.\n      </p>\n      `,\n  },\n  {\n    id: 'TrueSightMonocle',\n    name: 'True Sight Monocle',\n    expansion: 'TA',\n    level: 3,\n    effect: `\n      <p>\n      At the start of your main phase, if there are six or more cards in \n      your discard pile, gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'EntwinedAetherStrands',\n    name: 'Entwined Aether Strands',\n    expansion: 'TA',\n    level: 3,\n    effect: `\n      <p>\n      At the end of your draw phase, you may discard one card in hand and \n      draw a card.\n      </p>\n      `,\n  },\n  {\n    id: 'SiphoningBlade',\n    name: 'Siphoning Blade',\n    expansion: 'TA',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn when you focus or open a breach, gain 1 charge.\n      </p>\n      `,\n  },\n  {\n    id: 'GemEncrustedAnklet',\n    name: 'Gem Encrusted Anklet',\n    expansion: 'TA',\n    level: 3,\n    effect: `\n      <p>\n      At the start of your first turn of the game, gain 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'Rupture',\n    name: 'Rupture',\n    expansion: 'TA',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash. Any player suffers 4 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'FurrowOfDestruction',\n    name: 'Furrow Of Destruction',\n    expansion: 'TA',\n    tier: 1,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 3 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Mangle',\n    name: 'Mangle',\n    expansion: 'TA',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        The player with the most charges loses 3 charges and suffers 3 damage. A different player discards three cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'HowlingSlayer',\n    name: 'Howling Slayer',\n    expansion: 'TA',\n    tier: 2,\n    type: 'Minion',\n    hp: 14,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 2 damage. Any player discards a card in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theDepthsData: IExpansion = {\n  id: 'Depths',\n  name: 'The Depths',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Depths',\n    name: 'Horde-Crone',\n    id: 'HordeCrone',\n    health: 60,\n    difficulty: 6,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Depths',\n    name: 'Nym',\n    id: 'Nym',\n    mageTitle: 'Breach Mage Apprentice',\n    ability: `\n        <h2>Terminus Barrier</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Discard the top card of the nemesis deck.</p>\n        <p>If you discarded an attack card, discard an additional card.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Cinder',\n        expansion: 'Depths',\n        id: 'Cinder',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Deal 1 damage.\n              <span class=\"or\">OR</span>\n              <b>Cast:</b> Gain 2 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: 'Reeve',\n    id: 'Reeve',\n    mageTitle: 'Breach Mage Elite',\n    ability: `\n        <h2>Quelling Blade</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Deal 5 damage to a minion.</p>\n        <p>Deal 3 damage to a different minion.</p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Obsidian Shard',\n        expansion: 'Depths',\n        id: 'ObsidianShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              You may suffer 1 damage. If you do, gain an additional 2 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: 'Zhana',\n    id: 'Zhana',\n    mageTitle: 'Breach Mage Renegade',\n    ability: `\n        <h2>Sanctum Glyph</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Gravehold gains 7 life.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Eternal Ember',\n        expansion: 'Depths',\n        id: 'EternalEmber',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Deal 1 damage.\n              <span class=\"or\">OR</span>\n              <b>Cast:</b> Cast one of your prepped spells without \n              discarding it.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Void Bond',\n    id: 'VoidBond',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      You may cast any player's prepped spell.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Combustion',\n    id: 'Combustion',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 2 damage to a minion.<br/>\n      Deal 2 damage to a different minion or the nemesis.<br/>\n      <span class=\"hint\">Effects that modify damage affect both instances \n      of damage this spell deals.\n      </span>\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Vim Dynamo',\n    id: 'VimDynamo',\n    cost: 4,\n    effect: `\n      <p>\n        Suffer 1 damage. Any player draws two cards.\n          <span class=\"or\">OR</span>\n        Destroy this. Any player gains 2 life and 1 charge.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Disintegrating Scythe',\n    id: 'DisintegratingScythe',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 8 damage.<br/>\n        Suffer 1 damage. Instead of discarding this, destroy it or place it \n        on top of any player's discard pile.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Monstrous Inferno',\n    id: 'MonstrousInferno',\n    cost: 8,\n    effect: `\n      <p>\n        This spell must be prepped to two adjacent breaches so that this card \n        touches both breaches. This fully occupies both breaches.<br/>\n        <b>Cast:</b> Deal 7 damage divided however you choose to the nemesis \n        and any number of minions.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Devouring Shadow',\n    id: 'DevouringShadow',\n    cost: 6,\n    effect: `\n      <p>\n        While prepped, once per turn during your main phase you may \n        destroy a card in hand.<br/>\n        <b>Cast:</b> Deal 3 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Depths',\n    name: 'Banishing Topaz',\n    id: 'BanishingTopaz',\n    cost: 5,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      You may place any card in hand on top of your deck. If you do, \n      gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Transmogrifier',\n    id: 'Transmogrifier',\n    cost: 4,\n    effect: `\n      <p>\n        Destory a card in hand.<br/>\n        You may gain a card from any supply pile that costs up to \n        3 <span class=\"aether\">&AElig;</span> more than the destroyed card.\n      </p>\n        `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theNamelessData: IExpansion = {\n  id: 'Nameless',\n  name: 'The Nameless',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Blight Lord',\n    id: 'BlightLord',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Nameless',\n    name: 'Wayward One',\n    id: 'WaywardOne',\n    health: 60,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Malastar',\n    id: 'Malastar',\n    mageTitle: 'Breach Mage Mentor',\n    ability: `\n        <h2>Gift Of Aether</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Gain a spell from any supply pile. You may prep that spell to \n        any player's opened breach.</p>\n      `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Immolate',\n        expansion: 'Nameless',\n        id: 'Immolate',\n        cost: 0,\n        effect: `\n            <p>\n              While prepped, when you suffer 1 damage gain 1 charge.<br/>\n              <b>Cast:</b> Deal 1 damage.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Molten Hammer',\n    id: 'MoltenHammer',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 1 charge.<br/>\n        You may destroy a card in hand or on top of any player's discard pile.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Radiance',\n    id: 'Radiance',\n    cost: 8,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 5 damage.<br/>\n      Each ally draws a card.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Blaze',\n    id: 'Blaze',\n    cost: 4,\n    effect: `\n      <p>\n        When you gain this, you may place it on top of any player's discard pile.<br/>\n          <b>Cast:</b> Deal 2 damage.<br/>\n        Deal 1 additional damage for each other time you have cast Blaze this \n          turn and for each other Blaze you currently have prepped.\n        </p>\n            `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Scrying Bolt',\n    id: 'ScryingBolt',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 5 damage.<br/>\n      You may lose 1 charge. If you do, reveal the top two cards of the \n      nemesis deck. Return them in any order.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Sages Brand',\n    id: 'SagesBrand',\n    cost: 7,\n    effect: `\n      <p>\n        This spell must be prepped to two adjacent breaches so that this card \n        touches both breaches. This fully occupies both breaches.<br/>\n        While prepped, draw an additional card during your draw phase.<br/>\n        <b>Cast:</b> Deal 6 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Nameless',\n    name: 'Leeching Agate',\n    id: 'LeechingAgate',\n    cost: 3,\n    effect: `\n      <p>\n        When you gain this, gain 1 charge.<br/>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Temporal Helix',\n    id: 'TemporalHelix',\n    cost: 7,\n    effect: `\n      <p>\n      Cast any player's prepped spell without discarding it.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theVoidData: IExpansion = {\n  id: 'TV',\n  name: 'The Void',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'TV',\n    name: 'Knight Of Shackles',\n    id: 'KnightOfShackles',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'TV',\n    name: 'Maiden Of Thorns',\n    id: 'MaidenOfThorns',\n    health: 80,\n    difficulty: 4,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'TV',\n    name: 'Sparrow',\n    id: 'Sparrow',\n    mageTitle: 'Breach Mage Soldier',\n    ability: `\n        <h2>Eldritch Tether</h2>\n        <p class=\"ability-activation\">Activate during your casting or main phase:</p>\n        <p>Focus any player's breach. Repeat this three additional times.\n        <span class=\"or\">OR</span>\n        Any ally with no closed breaches draws three cards and then \n        preps up to three spells from their hand.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Smolder',\n        expansion: 'TV',\n        id: 'Smolder',\n        cost: 0,\n        effect: `\n            <p>\n              This spell may be prepped to a closed breach without focusing it.<br/>\n              <b>Cast:</b> Deal 1 damage.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'TV',\n    name: 'XaxosTV',\n    id: 'XaxosTV',\n    mageTitle: 'Voidbringer',\n    ability: `\n        <h2>Praetorian Halo</h2>\n        <p class=\"ability-activation\">Activate during your casting or main phase:</p>\n        <p>Any ally gains 1 charge and discards a random card in hand. Focus \n        one of your breaches. Gain 1 life. Destroy a card in your hand or \n        discard pile.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Pyre',\n        expansion: 'TV',\n        id: 'Pyre',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Deal 1 damage.<br/>\n              Any ally may discard a card in hand. If they do, \n              deal 2 additional damage.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'TV',\n    name: 'Fossilized Scarab',\n    id: 'FossilizedScarab',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n      Destroy a card in hand.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Thermal Dart',\n    id: 'ThermalDart',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Link</b> <span class=\"hint\">(Two spells with Link may be prepped to the same breach.)</span>\n      </p>\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      If this is not the first Thermal Dart you have cast this turn, gain 1 charge.\n        </p>\n      `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Resonate',\n    id: 'Resonate',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage.<br/>\n      If there are six or more other cards in your discard pile, deal 3 \n      additional damage.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Conflagration',\n    id: 'Conflagration',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Link</b> <span class=\"hint\">(Two spells with Link mat be prepped to the same breach.)</span>\n      </p>\n      <p>\n      <b>Cast:</b> Deal 2 damage.<br/>\n      Gain 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TV',\n    name: 'Dimensional Key',\n    id: 'DimensionalKey',\n    cost: 8,\n    effect: `\n      <p>\n      Any ally draws two cards.\n        <span class=\"or\">OR</span>\n      Destroy this. Suffer 1 damage. Place a card in play from the nemesis deck\n      on top of the nemesis deck.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Inner Fire',\n    id: 'InnerFire',\n    cost: 2,\n    effect: `\n      <p>\n        <b>Link</b> <span class=\"hint\">(Two spells with Link mat be prepped to the same breach.)</span>\n      </p>\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br/>\n        If the nemesis tier is 2 or higher, deal 1 additional damage.\n        </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Fulminate',\n    id: 'Fulminate',\n    cost: 5,\n    effect: `\n      <p>\n      While prepped, other spells you cast deal 1 additional damage.\n      </p>\n      <p>\n      <b>Link</b> <span class=\"hint\">(Two spells with Link mat be prepped to the same breach.)</span>\n      </p>  \n      <b>Cast:</b> Deal 3 damage.\n        </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TV',\n    name: 'Eternity Charm',\n    id: 'EternityCharm',\n    cost: 3,\n    effect: `\n      <p>\n        Focus your closed breach with the lowest focus cost. Reveal the top \n        three cards of your deck. You may prep on of the revealed cards.\n      </p>\n        `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const warEternalData: IExpansion = {\n  id: 'WE',\n  name: 'War Eternal',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'WE',\n    name: 'Gate Witch',\n    id: 'GateWitch',\n    health: 70,\n    difficulty: 7,\n    expeditionRating: 4,\n    additionalInfo: `\n        <p>\n          When Gate Witch accelerates time, it loses five nemesis tokens \n          instead of four nemesis tokens.\n        </p>\n      `,\n  },\n  {\n    expansion: 'WE',\n    name: 'Hollow Crown',\n    id: 'HollowCrown',\n    health: 1,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Magus Of Cloaks',\n    id: 'MagusOfCloaks',\n    health: 35,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Umbra Titan',\n    id: 'UmbraTitan',\n    health: 70,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'WE',\n    name: 'Dezmodia',\n    id: 'Dezmodia',\n    mageTitle: 'Voidborn Prodigy',\n    ability: `\n        <h2>Tempest Sigil</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Any player destroys an opened I or II breach and \n        returns any spells prepped to that breach to their hand. \n        That player gains a Sigil breach and places it where the destroyed \n        breach was. Then, that player may prep a spell from their hand \n        to a breach.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Oblivion Shared',\n        expansion: 'WE',\n        id: 'OblivionShared',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 2 <span class=\"aether\">&AElig;</span> that cannot be used \n              to gain a relic or spell.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Garu',\n    id: 'Garu',\n    mageTitle: 'Oathsworn Protector',\n    ability: `\n        <h2>Colossal Force</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Discard up to four of your prepped spells.</p>\n        <p>Deal 2 damage plus 4 additional damage for each spell you \n        discarded divided however you choose to the nemesis or any \n        number of minions.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Torch',\n        expansion: 'WE',\n        id: 'Torch',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Deal 1 damage.\n              <span class=\"or\">OR</span>\n              <b>Cast:</b> Focus any player's breach.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Gex',\n    id: 'Gex',\n    mageTitle: 'Breach Mage Adviser',\n    ability: `\n        <h2>Vimcraft Oath</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Destroy up to two cards in your discard pile that cost \n        0 <span class=\"aether\">&AElig;</span>.</p>\n        <p>Any ally draws one card and gains 2 life.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Shattered Geode',\n        expansion: 'WE',\n        id: 'ShatteredGeode',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              You may place the top card of any ally's discard pile into your hand.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Mazahaedron',\n    id: 'Mazahaedron',\n    mageTitle: 'Henge Mystic',\n    ability: `\n        <h2>Underearth Mantra</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>You may gain a gem that costs 4 <span class=\"aether\">&AElig;</span> or \n        less from any supply pile.</p>\n        <p>Gravehold gains 4 life.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Worldheart Shard',\n        expansion: 'WE',\n        id: 'WorldheartShard',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">OR</span>\n              Gain 2 <span class=\"aether\">&AElig;</span> that can only be used \n              to gain a card. Place the next card you gain this turn on top of \n              any ally's discard pile.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'MistWE',\n    id: 'MistWE',\n    mageTitle: 'Voidwalker',\n    ability: `\n        <h2>Exalted Brand</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Cast up to three different spells prepped by any number of players. \n        For each spell cast this way, place that spell into any ally's hand.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Amethyst Paragon',\n        expansion: 'WE',\n        id: 'AmethystParagon',\n        cost: 0,\n        effect: `\n            <p>\n              Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Any ally may prep a spell in hand to their opened or closed \n              breach(es).\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Quilius',\n    id: 'Quilius',\n    mageTitle: 'Breach Mage Assassin',\n    ability: `\n        <h2>Quietus Vow</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Deal 2 damage for each Trophy token you have.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Extinguish',\n        expansion: 'WE',\n        id: 'Extinguish',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Cast:</b> Deal 1 damage.<br/>\n              If this damage causes a minion from the nemesis deck to be \n              discarded, Quilius gains a Trophy token.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Ulgimor',\n    id: 'Ulgimor',\n    mageTitle: 'Shadowkin Beast',\n    ability: `\n        <h2>Eidolon Shroud</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Gain 6 life.</p>\n        <p>If you are exhausted, any ally gains 5 life instead.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Coal Shard',\n        expansion: 'WE',\n        id: 'CoalShard',\n        cost: 0,\n        effect: `\n            <p>\n              If you have 2 life or less, destroy this. Otherwise, gain \n              3 <span class=\"aether\">&AElig;</span>, gain 1 charge, and \n              suffer 2 damage.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Yan Magda',\n    id: 'YanMagda',\n    mageTitle: 'Enlightened Exile',\n    ability: `\n        <h2>Imperium Ritual</h2>\n        <p class=\"ability-activation\">Activate during your main phase:</p>\n        <p>Gain a card from any supply pile. If you have four \n        opened breaches, any ally gains a card from any supply pile and \n        places it on top of their deck.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Illuminate',\n        expansion: 'WE',\n        id: 'Illuminate',\n        cost: 0,\n        effect: `\n            <p>\n              While prepped, when you focus or open one of your breaches \n              during your turn, deal 1 damage.<br/>\n              <b>Cast:</b> Deal 1 damage.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Erratic Ingot',\n    id: 'ErraticIngot',\n    cost: 5,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Gain an additional 2 <span class=\"aether\">&AElig;</span> if there is \n        at least one nemesis turn order card in the turn order discard pile.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Reduce To Ash',\n    id: 'ReduceToAsh',\n    cost: 7,\n    effect: `\n      <p>\n      While prepped, at the start of your casting phase reveal the top card \n      of your deck. You may destroy the revealed card.<br/>\n        <b>Cast:</b> Deal 4 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Vortex Gauntlet',\n    id: 'VortexGauntlet',\n    cost: 6,\n    effect: `\n      <p>\n      Cast any player's prepped spell.<br/>\n      Return that spell to that player's hand.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Carbonize',\n    id: 'Carbonize',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      Reveal the top card of the turn order deck. You may place that card on \n      the bottom of the turn order deck.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Equilibrium',\n    id: 'Equilibrium',\n    cost: 7,\n    effect: `\n      <p>\n      While prepped, when you suffer damage reduce that damage by 1, to a \n      minimum of 1.<br/>\n        <b>Cast:</b> Deal 4 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Volcanic Glass',\n    id: 'VolcanicGlass',\n    cost: 3,\n    effect: `\n      <p>\n      When you gain this on your turn, you may spend 2 <span class=\"aether\">&AElig;</span>. \n        If you do, any ally also gains a Volcanic Glass and places it on top \n      of their deck.<br/>\n      Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Convection Field',\n    id: 'ConvectionField',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 4 damage.\n        <span class=\"or\">OR</span>\n      <b>Cast:</b> Deal 2 damage. Any ally day destroy a card in hand.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Jagged Lightning',\n    id: 'JaggedLightning',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      You may discard a card in hand. If you do, any player focuses their \n      closed breach with the lowest focus cost.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Bloodstone Jewel',\n    id: 'BloodstoneJewel',\n    cost: 6,\n    effect: `\n      <p>\n      When you gain a Bloodstone Jewel for the first time on you turn, gain\n        3 <span class=\"aether\">&AElig;</span>. <br/>\n      Gain 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Kindle',\n    id: 'Kindle',\n    cost: 4,\n    effect: `\n      <p>\n      While prepped, during your main phase you may also prep on Spark to the \n      breach this spell is prepped to.<br/>\n        <b>Cast:</b> Deal 3 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Thoughtform Familiar',\n    id: 'ThoughtformFamiliar',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 2 damage.<br/>\n      Deal 1 additional damage for each of your other prepped spells.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Crystallize',\n    id: 'Crystallize',\n    cost: 8,\n    effect: `\n      <p>\n      This spell must be prepped to two adjacent breaches so that this card \n      touches both breaches. This fully occupies both breaches.<br/>\n      <b>Cast:</b> Any ally reveals their hand.<br/>\n      Deal 2 damage for each gem in that ally's hand.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Fiery Torrent',\n    id: 'FieryTorrent',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 2 damage.<br/>\n      Deal 2 additional damage for each other Fiery Torrent prepped by any \n        player.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Celestial Spire',\n    id: 'CelestialSpire',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 3 damage.<br/>\n      If this card's supply pile is empty, any ally draws a card.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Conjure The Lost',\n    id: 'ConjureTheLost',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 5 damage.<br/>\n      You may destroy this. If you do, Gravehold gains 4 life.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Nova Forge',\n    id: 'NovaForge',\n    cost: 6,\n    effect: `\n      <p>\n      While prepped, once per turn during your main phase you may gain 2 \n      <span class=\"aether\">&AElig;</span> that can only be used to gain a spell.<br/>\n        <b>Cast:</b> Deal 4 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Dread Diamond',\n    id: 'DreadDiamond',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      You may discard a prepped spell. If you do, gain an additional 1 \n      <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Cairn Compass',\n    id: 'CairnCompass',\n    cost: 4,\n    effect: `\n      <p>\n      Any ally may prep a spell in their discard pile to their opened or \n      closed breach(es).\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Scoria Slag',\n    id: 'ScoriaSlag',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      If the nemesis tier is 2 or higher, gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Breach Ore',\n    id: 'BreachOre',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      <span class=\"or\">OR</span>\n      Focus your closed breach with the lowest focus cost.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Fiend Catcher',\n    id: 'FiendCatcher',\n    cost: 3,\n    effect: `\n      <p>\n      You may destroy a card in your hand or discard pile.<br/>\n      Reveal the top card of the turn order deck. If you revealed a nemesis \n      turn order card, you may place that card on the bottom of the turn order deck.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Pyrotechnic Surge',\n    id: 'PyrotechnicSurge',\n    cost: 4,\n    effect: `\n      <p>\n      This spell must be prepped to two adjacent breaches so that this card \n      touches both breaches. This fully occupies both breaches.<br/>\n      <b>Cast:</b> Deal 4 damage.<br/>\n      You may destroy a card in you discard pile.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Aurora',\n    id: 'Aurora',\n    cost: 5,\n    effect: `\n      <p>\n      While prepped, once per turn during your main phase you may gain 1 charge.<br/>\n        <b>Cast:</b> Deal 3 damage.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Conclave Scroll',\n    id: 'ConclaveScroll',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 1 charge.<br/>\n      If this card's supply pile is empty, you may destroy the top card of \n      any ally's discard pile.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Primordial Fetish',\n    id: 'PrimordialFetish',\n    cost: 4,\n    effect: `\n      <p>\n      Focus any player's breach.\n        <span class=\"or\">OR</span>\n      Destroy this. Gain 3 life.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Frozen Magmite',\n    id: 'FrozenMagmite',\n    cost: 3,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      You may place the next card you gain this turn on top of your deck.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Mages Totem',\n    id: 'MagesTotem',\n    cost: 2,\n    effect: `\n      <p>\n      Destroy a gem or relic you played this turn.\n        <span class=\"or\">OR</span>\n      Destroy this. Gravehold gains 1 life.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Afflict-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Afflict',\n    effect: `\n      <p>\n        Unleash. Any player suffers 3 damage and may place a card in their discard pile into their hand.\n      </p>\n    `,\n  },\n  {\n    id: 'CatacombDrone-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Catacomb Drone',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Gravehold suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Encroach-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Encroach',\n    effect: `\n      <p>\n        Unleash. Reveal the top card of the turn order deck. If a player turn order card was revealed, that player suffers 2 damage. Otherwise, Gravehold suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'HeartofNothing-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Heart of Nothing',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard four cards in hand.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice.\n        <span class=\"or\">OR</span>\n        Any player suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'HowlingSpinners-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Howling Spinners',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'NightUnending-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Night Unending',\n    power: 3,\n    effect: `\n      <p>\n        <b>Power 3:</b> Gravehold suffers 2 damage for each spell prepped by the player with the most prepped spells.\n      </p>\n    `,\n  },\n  {\n    id: 'Nix-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Nix',\n    effect: `\n      <p>\n        Unleash. Any player suffers 1 damage and discards their most expensive card in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'PlanarCollision-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Planar Collision',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Discard two prepped spells.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'Thrash-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Thrash',\n    effect: `\n      <p>\n        Unleash. The players collectively discard two cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'AphoticSun-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Aphotic Sun',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash. The player with the most charges suffers 3 damage and loses all of their charges.\n      </p>\n    `,\n  },\n  {\n    id: 'ChaosFlail-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Chaos Flail',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Any player places their discard pile on top of their deck and shuffles it. Then, that player reveals the top two cards of their deck and destroys the most expensive card revealed.\n      </p>\n    `,\n  },\n  {\n    id: 'MageEnder-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Mage Ender',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Persistent:</b> The player with the most opened breaches suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Mangleroot-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Mangleroot',\n    hp: 12,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 3 damage. This minon suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'MorbidGyre-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Morbid Gyre',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. The players collectively discard three cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'Mutilate-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Mutilate',\n    effect: `\n      <p>\n        Unleash. The players collectively discard two prepped spells. Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'NullScion-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Null Scion',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'Smite-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Smite',\n    effect: `\n      <p>\n        Unleash twice. Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n\n  {\n    id: 'ApocalypseRitual-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Apocalypse Ritual',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Gravehold suffers 5 damage for each nemesis turn order card in the turn order discard pile.\n      </p>\n    `,\n  },\n  {\n    id: 'Banish-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Banish',\n    effect: `\n      <p>\n        Unleash twice. The player with the most prepped spells suffers 1 damage for each of their prepped spells.\n      </p>\n    `,\n  },\n  {\n    id: 'CataclysmicFate-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Cataclysmic Fate',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Destroy a prepped spell that costs 5 <span class=\"aether\">&AElig;</span> or more and a breach in which it was prepped.<br />\n        <br />\n        <b>Power 1:</b> The player with the lowest life suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'MonstrosityofOmens-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Monstrosity of Omens',\n    shields: 5,\n    hp: 0,\n    effect: `\n      <p>\n        When damage is dealt to this minion, reduce that damage to 1.<br />\n        <br />\n        <b>Persistent:</b> Gravehold suffers damage equal to this minion's current life.\n      </p>\n    `,\n  },\n  {\n    id: 'Engulf-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Engulf',\n    effect: `\n      <p>\n        Resolve the most recently discarded attack card in the nemesis discard pile.\n      </p>\n    `,\n  },\n  {\n    id: 'Quell-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Quell',\n    effect: `\n      <p>\n        Gravehold Suffers 7 damage.\n        <span class=\"or\">OR</span>\n        Unleash three times.\n      </p>\n    `,\n  },\n  {\n    id: 'Throttle-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Throttle',\n    effect: `\n      <p>\n        Unleash twice. Any player destorys their three most expensive cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'WitheringBeam-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Withering Beam',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash twice. The players collectively destroy the two most expensive prepped spells.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { basicNemesisCards } from './basicNemesisCards'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const outcastsData: IExpansion = {\n  id: 'O',\n  name: 'Outcasts',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n  basicNemesisCards,\n  upgradedBasicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'O',\n    name: 'Experiment 153',\n    id: 'Experiment153',\n    health: '*',\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'O',\n    name: 'Thief Of Dreams',\n    id: 'ThiefOfDreams',\n    health: 80,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'O',\n    name: 'Risen Thrall',\n    id: 'RisenThrall',\n    health: 50,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'O',\n    name: 'Fountain Of Souls',\n    id: 'FountainOfSouls',\n    health: 70,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'O',\n    name: 'Ilya',\n    id: 'Ilya',\n    mageTitle: '',\n    ability: `\n      <h2>Life Embrace</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast all of your prepped spells without discarding them. \n        Any ally returns a card in their discard pile to their hand.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Entwined Amethyst',\n        expansion: 'O',\n        id: 'EntwinedAmethyst',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When you discard this during an ally's turn, you gain 1 charge.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Entwined Amethyst',\n        expansion: 'O',\n        id: 'EntwinedAmethyst',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When you discard this during an ally's turn, you gain 1 charge.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Trulite Of Force',\n        expansion: 'O',\n        id: 'TruliteOfForce',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Any ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that \n            can only be used to gain a spell or to focus or open a breach.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Trulite Of Force',\n        expansion: 'O',\n        id: 'TruliteOfForce',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Any ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that \n            can only be used to gain a spell or to focus or open a breach.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'O',\n    name: 'Kel',\n    id: 'Kel',\n    mageTitle: '',\n    ability: `\n      <h2>Soul Invigoration</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Return up to two gems or relics you played this turn to your hand. \n        Any ally draws a card and may prep a spell in hand to an opened or closed breach.\n      </p>\n    `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Entwined Amethyst',\n        expansion: 'O',\n        id: 'EntwinedAmethyst',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When you discard this during an ally's turn, you gain 1 charge.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Entwined Amethyst',\n        expansion: 'O',\n        id: 'EntwinedAmethyst',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When you discard this during an ally's turn, you gain 1 charge.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Trulite Of Energy',\n        expansion: 'O',\n        id: 'TruliteOfEnergy',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Any ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that \n            can only be used to gain a gem or relic.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Trulite Of Energy',\n        expansion: 'O',\n        id: 'TruliteOfEnergy',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Any ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that \n            can only be used to gain a gem or relic.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'O',\n    name: \"Z'hana\",\n    id: 'ZhanaO',\n    mageTitle: '',\n    ability: `\n      <h2>Inscribe</h2>\n      <p class=\"ability-activation\">Activate during any player's main phase:</p>\n      <p>\n        Gravehold gains 5 life. Place two glyph tokens on top of any card in the supply.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Glyph Carver',\n        expansion: 'O',\n        id: 'GlyphCarver',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Place 1 glyph token on top of any card in the supply.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Glyph Carver',\n        expansion: 'O',\n        id: 'GlyphCarver',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Place 1 glyph token on top of any card in the supply.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'O',\n    name: 'Taqren',\n    id: 'TaqrenO',\n    mageTitle: '',\n    ability: `\n      <h2>Sustain</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        If you are not exhausted, gain 3 life.<br />\n        Otherwise, Gravehold gains 3 life.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Esoteric Amplifier',\n        expansion: 'O',\n        id: 'EsotericAmplifier',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n            You may suffer 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'O',\n    name: 'Qu',\n    id: 'QuO',\n    mageTitle: '',\n    ability: `\n      <h2>Combust Aether</h2>\n      <p class=\"ability-activation\">Activate at the end of your draw phase:</p>\n      <p>\n        Draw three cards.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Call Of The Void',\n        expansion: 'O',\n        id: 'CallOfTheVoid',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, the first time you play a gem or relic that costs 1 <span class=\"aether\">&AElig;</span> or more \n            each turn, play that card twice and then return it to the supply.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 7,\n  },\n  {\n    expansion: 'O',\n    name: 'Thraxir',\n    id: 'Thraxir',\n    mageTitle: '',\n    ability: `\n      <h2>Shackles Unleashed</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast up to three spells prepped by any players. If you have three opened breaches, \n        those spells deal 1 additional damage. If you have four opened breaches, \n        you may cast up to four spells and those spells deal 2 additional damage instead.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Nameless Siphon',\n        expansion: 'O',\n        id: 'NamelessSiphon',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Any ally may discard a card in hand. If they do, focus one of your breaches.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n  {\n    expansion: 'O',\n    name: 'Dezmodia',\n    id: 'DezmodiaO',\n    mageTitle: '',\n    ability: `\n      <h2>Void Vortex</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Any ally draws three cards. Then, place any number of cards in your hand into their hand. \n        Then, that ally places the same number of cards in their hand into your hand.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Swirling Darkness',\n        expansion: 'O',\n        id: 'SwirlingDarkness',\n        cost: 0,\n        effect: `\n          <p>\n            This may be prepped to closed breaches.<br />\n            <b>Cast:</b> Focus the breach this was cast from.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 7,\n  },\n  {\n    expansion: 'O',\n    name: 'Arachnos',\n    id: 'Arachnos',\n    mageTitle: '',\n    ability: `\n      <h2>Expunge</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast any player's prepped spell. That spell deals 3 additional damage.\n      </p>\n    `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Convergence',\n        expansion: 'O',\n        id: 'Convergence',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, when you play a gem or relic that costs 3 <span class=\"aether\">&AElig;</span> or more, \n            gain 1 charge.<br />\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Unstable Pyrite',\n    id: 'UnstablePyrite',\n    cost: 2,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        You may destroy this. If you do, gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Molten Peridot',\n    id: 'MoltenPeridot',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        If this is the second time you have played Molten Peridot this turn, \n        you may destroy this. If you do, gain a card that costs 4 <span class=\"aether\">&AElig;</span> \n        or less from any supply pile.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Helix Of Amber',\n    id: 'HelixOfAmber',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may suffer 1 damage. If you do, destroy a card that costs 0 <span class=\"aether\">&AElig;</span> \n        in your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Petrified Phoenixium',\n    id: 'PetrifiedPhoenixium',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        The next time you gain a card this turn, you may cast any player's prepped spell.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Galvanized Sapphire',\n    id: 'GalvanizedSapphire',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        Xaxos: Outcast gains 1 charge.\n      </p>\n    `,\n    keywords: ['xaxos'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Elongated Looq',\n    id: 'ElongatedLooq',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        The next time you focus or open a breach this turn, gain 1 charge.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Vigorous Sunstone',\n    id: 'VigorousSunstone',\n    cost: 5,\n    effect: `\n      <p>\n        When you gain this, if this is the second card you gained this turn, \n        place it into your hand.<br />\n        Gain 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'O',\n    name: 'Duplicating Sazite',\n    id: 'DuplicatingSazite',\n    cost: 6,\n    effect: `\n      <p>\n        Gain 3 <span class=\"aether\">&AElig;</span>.<br />\n        The next time you gain a card this turn, you may discard a prepped spell \n        that costs 1 <span class=\"aether\">&AElig;</span> or more. If you do, \n        any ally gains a card from the supply that costs less than or equal to the card \n        you gained.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Orb Of The Deep',\n    id: 'OrbOfTheDeep',\n    cost: 2,\n    effect: `\n      <p>\n        Focus your closed breach with the lowest focus cost.\n        <span class=\"or\">OR</span>\n        Destroy this. Gain 1 charge.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Carnivorous Roox',\n    id: 'CarnivorousRoox',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>. You may destroy a card in hand \n        to gain <span class=\"aether\">&AElig;</span> equal to its cost.\n        <span class=\"or\">OR</span>\n        Destroy this. Focus your closed breach with the lowest focus cost twice.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Rift Dagger',\n    id: 'RiftDagger',\n    cost: 3,\n    effect: `\n      <p>\n        Gain a card from any other supply pile that costs 3 <span class=\"aether\">&AElig;</span> \n        or less. You may destroy this to gain a card that costs up to 4 <span class=\"aether\">&AElig;</span> \n        instead.<br />\n        You may spend 1 <span class=\"aether\">&AElig;</span>. If you do, place that card \n        into your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Reconstituting Circuit',\n    id: 'ReconstitutingCircuit',\n    cost: 3,\n    effect: `\n      <p>\n        Xaxos: Outcast gains 1 charge.<br />\n        You may destroy a card in hand.\n      </p>\n    `,\n    keywords: ['xaxos'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Destiny Forger',\n    id: 'DestinyForger',\n    cost: 4,\n    effect: `\n      <p>\n        Any ally may destroy a card in hand. That player may gain a card that costs \n        up to 2 <span class=\"aether\">&AElig;</span> more than the destroyed card and \n        place it into their hands.\n        <span class=\"or\">OR</span>\n        Destroy this. Gain 2 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Chain Of Retrieval',\n    id: 'ChainOfRetrieval',\n    cost: 4,\n    effect: `\n      <p>\n        Focus any ally's breach.\n        <span class=\"or\">OR</span>\n        Return a card in your discard pile to your hand that costs \n        6 <span class=\"aether\">&AElig;</span> or less.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Bottled Sun',\n    id: 'BottledSun',\n    cost: 6,\n    effect: `\n      <p>\n        Xaxos: Outcast gains 3 charges.\n      </p>\n    `,\n    keywords: ['xaxos'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: \"Transmuter's Lens\",\n    id: 'TransmutersLens',\n    cost: 5,\n    effect: `\n      <p>\n        Destroy this.<br />\n        You may destroy a card in your hand or discard pile.<br />\n        Gain a card that costs up to 6 <span class=\"aether\">&AElig;</span> from \n        any supply pile.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'O',\n    name: 'Unhinged Vortex',\n    id: 'UnhingedVortex',\n    cost: 7,\n    effect: `\n      <p>\n        Any ally draws three cards. Then, they discard a card in hand.\n        <span class=\"or\">OR</span>\n        You may focus any ally's breach. Any ally may return a card in their discard pile \n        to their hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Fortified Frost',\n    id: 'FortifiedFrost',\n    cost: 2,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br />\n        You may discard a card in hand. If you do, deal 1 additional damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Paired Storm',\n    id: 'PairedStorm',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Link</b> <span class=\"hint\">(Two spells with Link may be prepped to the same breach.)</span>\n      </p>\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br />\n        If this is the second time you have cast a Paired Storm this turn, \n        deal 2 additional damage.\n      </p>\n    `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Twisted Fang',\n    id: 'TwistedFang',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n        If this card's supply pile is empty, deal 1 additional damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Shattering Bolt',\n    id: 'ShatteringBolt',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br />\n        You may destroy a card in your hand.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Discard a gem in hand.<br />\n        If you do, deal 4 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Infused Ignition',\n    id: 'InfusedIgnition',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n        If Xaxos: Outcast has 4 or less charges, he gains 1 charge.\n      </p>\n    `,\n    keywords: ['xaxos'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Lightning Arrow',\n    id: 'LightningArrow',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n        You may discard a card in hand. If you do, Gravehold gains 1 life.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Radiant Conflux',\n    id: 'RadiantConflux',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n        Any ally may draw a card and then discard a card in hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Unstable Rift',\n    id: 'UnstableRift',\n    cost: 5,\n    effect: `\n      <p>\n        While prepped, at the end of your casting phase deal 1 damage and \n        gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        <b>Cast:</br> Deal 4 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Gathered Will',\n    id: 'GatheredWill',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br />\n        You may gain a spell from any supply pile that costs 4 <span class=\"aether\">&AElig;</span> \n        or less and place it on top of your deck.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Tornado Of Insight',\n    id: 'TornadoOfInsight',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br />\n        If you have no closed breaches, gain 1 charge.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Hasted Intellect',\n    id: 'HastedIntellect',\n    cost: 6,\n    effect: `\n      <p>\n        While prepped, when you gain a card, you may place that card on top \n        of your deck.\n        <b>Cast:</b> Deal 4 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Swarm Of Flame',\n    id: 'SwarmOfFlame',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br />\n        You may cast any player's prepped spell that costs 5 <span class=\"aether\">&AElig;</span> or less.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Arcane Relay',\n    id: 'ArcaneRelay',\n    cost: 8,\n    effect: `\n      <p>\n        <b>Cast:</b> Any ally draws a card then reveals their hand.<br />\n        Deal 4 damage. Deal 1 additional damage for each card in that ally's \n        hand that costs 1 <span class=\"aether\">&AElig;</span> or more.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'O',\n    name: 'Dizzying Burst',\n    id: 'DizzyingBurst',\n    cost: 8,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 6 damage.<br />\n        Reveal the turn order deck.<br />\n        Return it in any order.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'RhiasPlanarPocket',\n    name: \"Rhia's Planar Pocket\",\n    expansion: 'O',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        Gain an additional <span class=\"aether\">&AElig;</span> that can only be used \n        to gain a relic.\n      </p>\n    `,\n  },\n  {\n    id: 'TalixsEverburn',\n    name: \"Talix's Everburn\",\n    expansion: 'O',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        Discard up to three spells in hand. Gain 1 <span class=\"aether\">&AElig;</span> \n        for each spell discarded this way.\n      </p>\n    `,\n  },\n  {\n    id: 'LostsForgedSpark',\n    name: \"Lost's Forged Spark\",\n    expansion: 'O',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <span class=\"hint\">(When the game starts, add a Crystal to your discard pile.)</span><br />\n        <b>Cast:</br> Deal 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'MazrasThesis',\n    name: \"Mazra's Thesis\",\n    expansion: 'O',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <b>Cast:</br> Deal 1 damage.<br />\n        Focus any player's III breach.\n      </p>\n    `,\n  },\n  {\n    id: 'RazrasTrainingWhistle',\n    name: \"Razra's Training Whistle\",\n    expansion: 'O',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>. \n        <span class=\"or\">OR</span>\n        Gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'RejuvenatingDiamond',\n    name: 'Rejuvenating Diamond',\n    expansion: 'O',\n    level: 2,\n    effect: `\n      <p>\n        When Gravehold gains life, Gravehold gains an additional 1 life.\n      </p>\n    `,\n  },\n  {\n    id: 'BrokenTooth',\n    name: 'Broken Tooth',\n    expansion: 'O',\n    level: 2,\n    effect: `\n      <p>\n        When a player opens a breach, any ally draws a card.\n      </p>\n    `,\n  },\n  {\n    id: 'PoisonHeart',\n    name: 'Poison Heart',\n    expansion: 'O',\n    level: 2,\n    effect: `\n      <p>\n        At the start of the game, set this next to a spell supply pile that \n        costs 5 <span class=\"aether\">&AElig;</span> or less. Those spells deal \n        1 additional damage when cast.\n      </p>\n    `,\n  },\n  {\n    id: 'WorldMarble',\n    name: 'World Marble',\n    expansion: 'O',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, focus one of your breaches \n        three times.\n      </p>\n    `,\n  },\n  {\n    id: 'ArmoredPauldrons',\n    name: 'Armored Pauldrons',\n    expansion: 'O',\n    level: 3,\n    effect: `\n      <p>\n        When you play a relic that costs 3 <span class=\"aether\">&AElig;</span> \n        or more, deal 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'BloodshotGeode',\n    name: 'Bloodshot Geode',\n    expansion: 'O',\n    level: 3,\n    effect: `\n      <p>\n        When you play a gem that costs 5 <span class=\"aether\">&AElig;</span> \n        or more, deal 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'TreasuredStone',\n    name: 'Treasured Stone',\n    expansion: 'O',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain a gem from any supply pile.\n      </p>\n    `,\n  },\n  {\n    id: 'ReboundGauntlet',\n    name: 'Rebound Gauntlet',\n    expansion: 'O',\n    level: 3,\n    effect: `\n      <p>\n        Once per turn, when you cast a spell that costs 5 <span class=\"aether\">&AElig;</span> \n        or less, you may discard a spell in hand to return the cast spell to your hand.\n      </p>\n    `,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'WitheringRot-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Attack',\n    name: 'Withering Rot',\n    effect: `\n      <p>\n        Any player suffers 3 damage and gains a Curse of Rot from the Curse deck.\n      </p>\n    `,\n  },\n  {\n    id: 'WeepingHex-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Attack',\n    name: 'Weeping Hex',\n    effect: `\n      <p>\n        Unleash.<br />\n        <br />\n        Any player suffers 2 damage, gains a Cursed Shard from the Curse deck, and \n        places it on top of their deck.\n      </p>\n    `,\n  },\n  {\n    id: 'Hemorrhage-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Attack',\n    name: 'Hemorrhage',\n    effect: `\n      <p>\n        Unleash.<br />\n        <br />\n        Gravehold suffers 1 damage.<br />\n        <br />\n        Place this in front of the player with the most opened breaches.<br />\n        <br />\n        At the start of that player's turn they suffer 1 damage. When that player gains a card \n        that costs 5 <span class=\"aether\">&AElig;</span> or more, this card is discarded.<br />\n        If there are no cards in the supply that cost 5 <span class=\"aether\">&AElig;</span> or more, \n        discard this when they gain a card with the highest cost in the supply.\n      </p>\n    `,\n  },\n  {\n    id: 'MoonstruckHound-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Minion',\n    name: 'Moonstruck Hound',\n    hp: 5,\n    effect: `\n      <p>\n        Reduce to 1 all damage dealt to this minion by spells that cost 5 <span class=\"aether\">&AElig;</span> \n        or more.<br />\n        <b>Persistent:</b> Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'WanderingLasher-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Minion',\n    name: 'Wandering Lasher',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Wandering</b> <span class=\"hint\">(Reduce to 1 all damage that is dealt to this \n        by abilities and player cards. During any player's main phase, that player \n        may spend any amount of <span class=\"aether\">&AElig;</span> to deal an \n        equal amount of damage to this.)</span><br />\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'AuraDrain-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Power',\n    name: 'Aura Drain',\n    power: 2,\n    effect: `\n      <p>\n        When a power token is removed from this, any player suffers 2 damage.<br />\n        <br />\n        <b>To Discard:</b> Spend 5 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'HauntedForce-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Power',\n    name: 'Haunted Force',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash. Gravehold suffers 2 damage. Any player gaines \n        a Cursed Bolt from the Curse deck.\n      </p>\n    `,\n  },\n  {\n    id: 'NoxiousWinds-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Power',\n    name: 'Noxious Winds',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 5 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Gravehold suffers 3 damage. Any player gains a Cursed Shard \n        from the Curse deck. Any player gains a Cursed Bolt from the Curse deck.\n      </p>\n    `,\n  },\n  {\n    id: 'MarkedForDeath-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Attack',\n    name: 'Marked For Death',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Place this card in front of any player.<br />\n        <br />\n        For the rest of the game, when a nemesis card specifies 'any player' \n        the player with this card must resolve that effect if possible.<br />\n        <br />\n        When the player with this card becomes exhausted, discard this.\n      </p>\n    `,\n  },\n  {\n    id: 'ConjuredGrapple-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Attack',\n    name: 'Conjured Grapple',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Any player suffers 2 damage and discards two cards in hand. That \n        player gains a Cursed Manacles from the Curse deck and places it into \n        their hand.\n      </p>\n    `,\n  },\n  {\n    id: 'ChitinCrawler-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Minion',\n    name: 'Chitin Crawler',\n    hp: 9,\n    effect: `\n      <p>\n        Reduce to 1 all damage dealt to this minion by spells that cost 3 <span class=\"aether\">&AElig;</span> \n        or less.<br />\n        <b>Persistent:</b> Any player suffers 3 damage.\n        <span class=\"or\">OR</span>\n        Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'WanderingObserver-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Minion',\n    name: 'Wandering Observer',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Wandering</b> <span class=\"hint\">(Reduce to 1 all damage that is dealt to this \n        by abilities and player cards. During any player's main phase, that player \n        may spend any amount of <span class=\"aether\">&AElig;</span> to deal an \n        equal amount of damage to this.)</span><br />\n        <b>Persistent:</b> Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'SeekingDestruction-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Power',\n    name: 'Seeking Destruction',\n    power: 3,\n    effect: `\n      <p>\n        <b>Immediately:</b> Place the player number token of the player with the most opened breaches \n        on this.<br />\n        <br />\n        <b>To Discard:</br> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> If the player whose player token is on this has the most opened breaches, \n        that player suffers 5 damage. Otherwise, Unleash twice.\n      </p>\n    `,\n  },\n  {\n    id: 'SuffocatingHaze-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Power',\n    name: 'Suffocating Haze',\n    power: 3,\n    effect: `\n      <p>\n        Reduce by 1 all damage dealt to minions from the nemesis deck, to a minimum of 1.<br />\n        <br />\n        <b>Power 3:</b> Unleash twice. Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ToxicSubterfuge-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Power',\n    name: 'Toxic Subterfuge',\n    power: 3,\n    effect: `\n      <p>\n        When a power token is removed from this, Gravehold suffers 2 damage.<br />\n        <br />\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'Throttle-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Attack',\n    name: 'Throttle',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Any player destroys their three most expensive cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Attack',\n    name: 'Topple',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'BreachSpike-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Attack',\n    name: 'Breach Spike',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        The player with the most prepped spells suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'NyxTheSpineCruncher-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Minion',\n    name: 'Nyx, The Spine Cruncher',\n    hp: 14,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Any player suffers 2 damage.      \n      </p>\n    `,\n  },\n  {\n    id: 'EndlessTorment-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Power',\n    name: 'Endless Torment',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</br> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash three times.\n        <span class=\"or\">OR</span>\n        Any player suffers 6 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'DarkeningDepths-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Power',\n    name: 'Darkening Depths',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</br> Destroy a prepped spell that costs 3 <span class=\"aether\">&AElig;</span> \n        or more and a breach in which it was prepped.<br />\n        <br />\n        <b>Power 1:</b> Unleash. The player with the lowest life suffers 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ApocalypseRitual-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Power',\n    name: 'Apocalypse Ritual',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</br> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Gravehold suffers 5 damage for each nemesis turn order card in the turn order \n        discard pile.\n      </p>\n    `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'ChaosStrike',\n    name: 'Chaos Strike',\n    expansion: 'O',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash.<br />\n        <br />\n        Gravehold suffers 4 damage.<br />\n        <br />\n        Any player gains a Cursed Shard from the Curse deck and places it on top of their deck.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'LabyrinthWraith-O',\n    expansion: 'O',\n    tier: 1,\n    type: 'Minion',\n    name: 'Labyrinth Wraith',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Wandering</b> <span class=\"hint\">(Reduce to 1 all damage that is dealt to this \n        by abilities and player cards. During any player's main phase, that player \n        may spend any amount of <span class=\"aether\">&AElig;</span> to deal an \n        equal amount of damage to this.)</span><br />\n        <b>Persistent:</b> Unleash. Any player suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'RainOfDevastation',\n    name: 'Rain Of Devastation',\n    expansion: 'O',\n    tier: 1,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Any player suffers 3 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'HuntTheWeak',\n    name: 'Hunt The Weak',\n    expansion: 'O',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Any player suffers 3 damage.<br />\n        <br />\n        Gravehold suffers 3 damage.<br />\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Rescind',\n    name: 'Rescind',\n    expansion: 'O',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        The player with the most expensive prepped spell discards that spell and suffers 2 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'HarbingerOfMonstrosity-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Minion',\n    name: 'Harbinger Of Monstrosity',\n    hp: 8,\n    effect: `\n      <p>\n        When a player deals damage to this minion, reduce that damage by 2, \n        to a minimum of 1.<br />\n        <b>Persistent:</b> Gravehold suffers 2 damage. Any player discards a card in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'MageDevourer-O',\n    expansion: 'O',\n    tier: 2,\n    type: 'Minion',\n    name: 'Mage Devourer',\n    hp: 11,\n    effect: `\n      <p>\n        When a player deals damage to this minion, the player with the most opened breaches \n        suffers 1 damage.<br />\n        <b>Persistent:</b> Unleash. Gravehold suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SilentDecay',\n    name: 'Silent Decay',\n    expansion: 'O',\n    tier: 2,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 3 damage. Any player gains a Cursed Bolt \n        from the Curse deck and places it on top of their deck.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SkyCrush',\n    name: 'Sky Crush',\n    expansion: 'O',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash three times.<br />\n        <br />\n        Any player destroys two cards in hand and suffers 2 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Scour',\n    name: 'Scour',\n    expansion: 'O',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash three times.<br />\n        <br />\n        The player with the most expensive card in hand discards their three most expensive cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Sacrifice-O',\n    name: 'Sacrifice',\n    expansion: 'O',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash four times.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 4 damage and any player suffers 4 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'ScionOfTheVoid-O',\n    expansion: 'O',\n    tier: 3,\n    type: 'Minion',\n    name: 'Scion Of The Void',\n    hp: 13,\n    effect: `\n      <p>\n        When a player deals damage to this minion, Unleash.<br />\n        <b>Persistent:</b> Unleash twice.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'RayOfDesolation-O',\n    name: 'Ray Of Desolation',\n    expansion: 'O',\n    tier: 3,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>Power 1:</b> Unleash twice. The players collectively destroy the two most expensive \n        prepped spells.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BlightedMagic',\n    name: 'Blighted Magic',\n    expansion: 'O',\n    tier: 3,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash. The player with the most expensive prepped spell destroyed it. \n        A different player destroys two cards in hand that cost 1 <span class=\"aether\">&AElig;</span> \n        or more.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BlackenedStars',\n    name: 'Blackened Stars',\n    expansion: 'O',\n    tier: 3,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 9 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 2:</b> Any player suffers 7 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\n\nexport const returnToGraveholdData: IExpansion = {\n  id: 'RTG',\n  name: 'Return To Gravehold',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'RTG',\n    name: 'Burrower',\n    id: 'Burrower',\n    health: 80,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'RTG',\n    name: 'Fortress',\n    id: 'Fortress',\n    health: 90,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'RTG',\n    name: 'Ohat And Ulgimor',\n    id: 'OhatAndUlgimor',\n    mageTitle: '',\n    ability: `\n      <h2>Enrapture</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Ohat mode: Suffer 2 damage. Any ally draws five cards and discards two cards in hand.<br />\n        Ulgimore mode: Cast a spell prepped to Ulgimor's IV breach without discarding it.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Shower Of Coals',\n        expansion: 'RTG',\n        id: 'ShowerOfCoals',\n        cost: 0,\n        effect: `\n          <p>\n            Ohat Mode:<br />\n            <b>Cast:</b> Suffer 1 damage and gain 2 <span class=\"aether\">&AElig;</span>.<br />\n            Ulgimor Mode:<br />\n            <b>Cast:</b> Deal 3 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'RTG',\n    name: 'Cairna',\n    id: 'Cairna',\n    mageTitle: '',\n    ability: `\n      <h2>Energize</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Gain a spell that costs 5 <span class=\"aether\">&AElig;</span> or less from a supply pile. \n        You may lose two charges to gain any spell from a supply pile instead. You may \n        lose a charge to prep a spell in your discard pile to one of your opened breaches.\n      </p>\n    `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Invigorate',\n        expansion: 'RTG',\n        id: 'Invigorate',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Return a spell in your discard pile to your hand.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Relic',\n    expansion: 'RTG',\n    name: 'Glass-Eyed Oracle',\n    id: 'GlassEyedOracle',\n    cost: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Destroy this and any number of copies of this card in hand. You may gain a card with cost \n        up to three times the number of copies destroyed.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RTG',\n    name: 'Cleanse',\n    id: 'Cleanse',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n        If you have 3 or less life, gain 1 life.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RTG',\n    name: 'Memory Break',\n    id: 'MemoryBreak',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n        You may destroy a card in hand. If you do, deal additional damage equal \n        to the cost of the destroyed card.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'ClaudiasAetherscope',\n    name: \"Claudia's Aetherscope\",\n    expansion: 'RTG',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Any ally may lose 1 charge. If they do, gain 2 charges.\n      </p>\n    `,\n  },\n  {\n    id: 'SoskelsLuckyCoin',\n    name: \"Soskel's Lucky Coin\",\n    expansion: 'RTG',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        You may lose 1 charge. If you do, gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'QusVoidRadite',\n    name: \"Qu's Void Radite\",\n    expansion: 'RTG',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        You may cast any player's prepped spell. That spell deals 1 less damage, minimum 1.\n      </p>\n    `,\n  },\n  {\n    id: 'TaqrensGiftOfSpirit',\n    name: \"Taqren's Gift Of Spirit\",\n    expansion: 'RTG',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Any ally draws a card.\n      </p>\n    `,\n  },\n  {\n    id: 'GygarsTsunami',\n    name: \"Gygar's Tsunami\",\n    expansion: 'RTG',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        >ou may lose 1 charge. If you do, deal 3 additional damage.\n      </p>\n    `,\n  },\n  {\n    id: 'EnergizedHusk',\n    name: 'Energized Husk',\n    expansion: 'RTG',\n    level: 2,\n    effect: `\n      <p>\n        After a player finishes resolving their ability, any ally draws a card.\n      </p>\n    `,\n  },\n  {\n    id: 'SparkingShards',\n    name: 'Sparking Shards',\n    expansion: 'RTG',\n    level: 2,\n    effect: `\n      <p>\n        At the start of the game, set this next to a gem supply pile. When a player gains \n        a card from that supply pile, that player gains 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'SigilPendant',\n    name: 'Sigil Pendant',\n    expansion: 'RTG',\n    level: 2,\n    effect: `\n      <p>\n        Once per turn during any player's main phase that player may spend 3 <span class=\"aether\">&AElig;</span> \n        to have each player gain a charge.\n      </p>\n    `,\n  },\n  {\n    id: 'HornOfPlenty',\n    name: 'Horn Of Plenty',\n    expansion: 'RTG',\n    level: 3,\n    effect: `\n      <p>\n        Draw two cards from level 1 treasure deck and add them to the Barracks.<br />\n        <br />\n        Add two additional level 1 treasures to your starting deck using the level 1 \n        treasure rules.\n      </p>\n    `,\n  },\n  {\n    id: 'ImbuedCirclet',\n    name: 'Imbued Circlet',\n    expansion: 'RTG',\n    level: 3,\n    effect: `\n      <p>\n        When you gain a gem, Gravehold gains 1 life.<br />\n        <br />\n        This can cause Gravehold to have more than its maximum life.\n      </p>\n    `,\n  },\n  {\n    id: 'BurstingBracelet',\n    name: 'Bursting Bracelet',\n    expansion: 'RTG',\n    level: 3,\n    effect: `\n      <p>\n        When you focus or open a breach, you may cast any player's prepped spell. \n        That spell deals 1 additional damage.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\n\nexport const southernVillageData: IExpansion = {\n  id: 'SV',\n  name: 'Southern Village',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  treasures,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'SV',\n    name: 'The Burning Kor',\n    id: 'TheBurningKor',\n    health: 60,\n    difficulty: 7,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'SV',\n    name: 'Lucien',\n    id: 'Lucien',\n    mageTitle: '',\n    ability: `\n      <h2>Magnetism</h2>\n      <p class=\"ability-activation\">Activate during your casting phase:</p>\n      <p>\n        Open all of your breaches. Prep any number of spells in hand to your opened breaches.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Sun Shard',\n        expansion: 'SV',\n        id: 'SunShard',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to open a breach.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 7,\n  },\n  {\n    expansion: 'SV',\n    name: 'Reth',\n    id: 'Reth',\n    mageTitle: '',\n    ability: `\n      <h2>Missing Half</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Reveal your deck. Place up to two spells with the same name from your deck into \n        your hand, and up to two spells with that same name from your discard into \n        your hand. Return your deck in the same order.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Fossilized Rose',\n        expansion: 'SV',\n        id: 'FossilizedRose',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Discard a card in hand. If you do, gain a spell that costs \n            5 <span class=\"aether\">&AElig;</span> or less from any supply pile.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'SV',\n    name: 'Quickening Qitite',\n    id: 'QuickeningQitite',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may discard a card in hand. If you do, focus any player's II breach.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'SV',\n    name: 'Jeweled Urup',\n    id: 'JeweledUrup',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 3 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        If this is the second time you have played Jeweled Urup this turn, \n        you may destroy this. If you do, gain a card from any supply pile \n        that costs 7 <span class=\"aether\">&AElig;</span> or less.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'SV',\n    name: \"Cat's Eye\",\n    id: 'CatsEye',\n    cost: 1,\n    effect: `\n      <p>\n        You cannot gain this card if you have gained another card this turn. You cannot \n        gain any other cards the turn you gain this.<br />\n        Gain 1 charge. You may destroy this. If you do, gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'SV',\n    name: 'Volt Replicator',\n    id: 'VoltReplicator',\n    cost: 4,\n    effect: `\n      <p>\n        Any ally gains a card that costs 5 <span class=\"aether\">&AElig;</span> or less. \n        If there are two or fewer Volt Replicator in the supply, you may destroy this. If you do, \n        place the gained card into that ally's hand instead.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'SV',\n    name: 'Energized Conduit',\n    id: 'EnergizedConduit',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Attach</b> this to any player's breach.\n      </p>\n      <p>\n        When a spell is cast from this breach, the player who cast that spell gains 1 charge.\n      </p>\n    `,\n    keywords: ['attach'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SV',\n    name: 'Flame Jab',\n    id: 'FlameJab',\n    cost: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage to a minion.<br />\n        You may destroy this. If you do, gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SV',\n    name: 'Gathering Winds',\n    id: 'GatheringWinds',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br />\n        If there are six or more other cards in your discard pile, focus any player's breach.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SV',\n    name: 'Cinder Shower',\n    id: 'CinderShower',\n    cost: 5,\n    effect: `\n      <p>\n        While prepped, when you gain a card, deal 1 damage.<br />\n        <b>Cast:</br> Deal 3 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SV',\n    name: \"Reaper's Flame\",\n    id: 'ReapersFlame',\n    cost: 7,\n    effect: `\n      <p>\n        While prepped, once per turn when you cast another spell, you may gain a card that costs \n        5 <span class=\"aether\">&AElig;</span> or less from any supply pile.<br />\n        <b>Cast:</br> Deal 5 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'SV',\n    name: 'Erasure Of Mind',\n    id: 'ErasureOfMind',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Cast:</b> Destroy a card in hand that costs 3<span class=\"aether\">&AElig;</span> or more. \n        If you do, deal 10 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Deal 5 damage. Reveal the top two cards of your deck and place any number on top \n        of your discard pile.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'IncosSpreadingEmerald',\n    name: \"Inco's Spreading Emerald\",\n    expansion: 'SV',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        The next time you gain a card that costs 3 <span class=\"aether\">&AElig;</span> \n        or less this turn, any ally gains a copy of that card from the supply.\n      </p>\n    `,\n  },\n  {\n    id: 'LostsForgedCrystal',\n    name: \"Lost's Forged Crystal\",\n    expansion: 'SV',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        <span class=\"hint\">(When the game starts, add a Crystal to your discard pile.)</span><br />\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'OnyxElixir',\n    name: 'Onyx Elixir',\n    expansion: 'SV',\n    level: 2,\n    effect: `\n      <p>\n        At the start of the game, set this next to a supply pile that costs \n        7 <span class=\"aether\">&AElig;</span> or more. When a player gains a card \n        from that supply pile, that player gains 2 life.\n      </p>\n    `,\n  },\n  {\n    id: 'AshenRib',\n    name: 'Ashen Rib',\n    expansion: 'SV',\n    level: 2,\n    effect: `\n      <p>\n        Once per turn after a player plays their second relic, any ally draws a card.\n      </p>\n    `,\n  },\n  {\n    id: 'MassacreHelm',\n    name: 'Massacre Helm',\n    expansion: 'SV',\n    level: 3,\n    effect: `\n      <p>\n        When you cast three or more spells during your casting phase, deal 3 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CloakOfWisdom',\n    name: 'Cloak Of Wisdom',\n    expansion: 'SV',\n    level: 3,\n    effect: `\n      <p>\n        At the start of tyour main phase, if there are five or more cards in your \n        discard pile, focus one of your closed breaches.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theRuinsData: IExpansion = {\n  id: 'RU',\n  name: 'The Ruins',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'RU',\n    name: 'Witchglass',\n    id: 'Witchglass',\n    cost: 2,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>. Any ally gains an <span class=\"aether\">&AElig;</span> token.<br />\n        You may this during an ally's main phase. If you do that player may <b>Conjure</b>.\n      </p>\n    `,\n    keywords: ['conjure'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'RU',\n    name: 'Shimmerbead',\n    id: 'Shimmerbead',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      <p>\n        <b>Recall:</b> Il you have activated your ability this turn, gain 1 life.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'RU',\n    name: 'Allaying Shell',\n    id: 'AllayingShell',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n\tSilence a minion.\n      </p>\n    `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'RU',\n    name: 'Pulsyrium Globe',\n    id: 'PulsyriumGlobe',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      <p>\n\t<b>Recall:</b> Discard a card in hand. If you do, any player gains an <span class=\"aether\">&AElig;</span> token.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'RU',\n    name: 'Rainbow Fluorite',\n    id: 'RainbowFluorite',\n    cost: 6,\n    effect: `\n      <p>\n        Gain 3 <span class=\"aether\">&AElig;</span>.<br />\n        <span class=\"or\">OR</span>\n\tGain 2 charges.\n      </p>\n    `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'RU',\n    name: \"Aether Widget\",\n    id: 'AetherWidget',\n    cost: 2,\n    effect: `\n      <p>\n        Any ally may prep a spell in hand to one of their opened or closed breaches.\n      </p>\n      <p>\n\tYou may discard this during any ally's main phase. If you do, that ally may cast one of their prepped spells.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'RU',\n    name: 'Vim Infusor',\n    id: 'VimInfusor',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 1 charge.<br />\n\tIf you have 2 life or less, repeat this effect.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'RU',\n    name: 'Contingency Kit',\n    id: 'ContingencyKit',\n    cost: 4,\n    effect: `\n      <p>\n        Any ally draws two cards and then discards one card.\n        <span class=\"or\">OR</span>\n\tFocus any player's breach. If you have 2 life or less, do both.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'RU',\n    name: 'Ghost Harness',\n    id: 'GhostHarness',\n    cost: 6,\n    effect: `\n      <p>\n        Each player focuses their closed breach with the lowest cost.\n        <span class=\"or\">OR</span>\n\tEach player may <b>Conjure</b>.\n      </p>\n    `,\n    keywords: ['conjure'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'RU',\n    name: 'Element Convertor',\n    id: 'ElementConvertor',\n    cost: 6,\n    effect: `\n      <p>\n        The players collectively destroy up to two gems from their hands or discard piles.<br />\n\tReveal the top card of the turn order deck. If it is a player card, that player gains an <span class=\"aether\">&AElig;</span> token.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Magnify',\n    id: 'Magnify',\n    cost: 2,\n    effect: `\n      <p>\n        While prepped, an additional spell that costs 2 <span class=\"aether\">&AElig;</span> or less may be prepped to this brech.<br />\n        <b>Cast:</b> Deal 1 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Dawn Barrage',\n    id: 'DawnBarrage',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Other spells you cast during your casting phase this turn deal an additional 1 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Stupefy',\n    id: 'Stupefy',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.\n      </p>\n      <p>\n        <b>Recall:</b> You may discard a card to silence a minion.\n      </p>\n    `,\n    keywords: ['recall', 'silence'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Force Bubble',\n    id: 'ForceBubble',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Return this to your hand. You may prep a spell from your hand that is not named Force Bubble.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Accelerating Field',\n    id: 'AcceleratingField',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br />\n\tIf this is the first time you have cast an Accelerating Field this turn, you may reveal the top four cards of your deck. You may place any cards named Accelerating Field revealed this way into your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Harmonize',\n    id: 'Harmonize',\n    cost: 5,\n    effect: `\n      <p>\n        You may discard this card from your hand when any ally casts a spell to have that spell deal an additional 2 damage.\n      </p>\n      <p>\n        <b>Cast:</b> Deal 4 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Phantasmagoria',\n    id: 'Phantasmagoria',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.\n      </p>\n      <p>\n        <b>Recall:</b> <b>Conjure</b>.\n      </p>\n    `,\n    keywords: ['recall', 'conjure'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Rune Tutor',\n    id: 'RuneTutor',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Gain a card that costs 6 <span class=\"aether\">&AElig;</span> or less from any supply pile and place it on top of your deck.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Deal 4 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Bestowing Light',\n    id: 'BestowingLight',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br />\n\tAny ally gains an <span class=\"aether\">&AElig;</span> token for each spell prepped in an adjacent breach.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'RU',\n    name: 'Reverse Gravity',\n    id: 'ReverseGravity',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 6 damage.\n      </p>\n      <p>\n        When this is placed into your discard pile, you may place this on the botton of your discard pile.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nconst gems: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Darklite Sample',\n    id: 'DarkliteSample',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may place your deck into your discard pile without rearranging the cards.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Nebula Shard',\n    id: 'NebulaShard',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Gain 1 <span class=\"aether\">&AElig;</span> for each spell you cast during\n        your casting phase this turn.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Scrying Sugilite',\n    id: 'ScryingSugilite',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n        You may reveal the top card of your deck. If it is a spell,\n        gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Starglass',\n    id: 'Starglass',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n        <span class=\"or\">OR</span>\n        <b>Conjure</b>.\n      </p>\n    `,\n    keywords: ['conjure'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Sunken Onyx',\n    id: 'SunkenOnyx',\n    cost: 3,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/><br/>\n        You may discard this after any ally focuses a breach. If you do,\n        they focus that breach again.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Cobalt Clump',\n    id: 'CobaltClump',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n        The next time you gain a card that costs 5 <span class=\"aether\">&AElig;</span>\n        or more this turn, silence a minion.\n      </p>\n    `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Glint Splinter',\n    id: 'GlintSplinter',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/><br/>\n        <b>Recall:</b> You may discard a prepped spell. If you do,\n        gain 1 <span class=\"aether\">&AElig;</span> and you may place\n        the next card you gain this turn on top of your deck.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Voidsteel Vein',\n    id: 'VoidsteelVein',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/><br/>\n        You may discard this when any ally casts a spell that costs\n        1 <span class=\"aether\">&AElig;</span> or more. If you do,\n        that spell deals 2 additional damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Aether Dust',\n    id: 'AetherDust',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n        Each ally gains an <span class=\"aether\">&AElig;</span> token.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Frozen Light',\n    id: 'Frozen Light',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 3 <span class=\"aether\">&AElig;</span>.<br/><br/>\n        You may discard this during any ally's turn. If you do,\n        they gain 1 charge and you gain 1 charge.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'LOG',\n    name: 'Shattered Rupix',\n    id: 'ShatteredRupix',\n    cost: 5,\n    effect: `\n      <p>\n        Gain 3 <span class=\"aether\">&AElig;</span>.<br/><br/>\n        When another card or effect would cause you to discard or\n        destroy this, you may return this to your hand.\n        <i>(Ignore this effect while this card is in the supply.)</i>\n      </p>\n    `,\n    keywords: [],\n  },\n]\n\nconst relics: ICard[] = [\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: 'Echo Rune',\n    id: 'EchoRune',\n    cost: 2,\n    effect: `\n      <p>\n        Any player gains 1 charge.<br/><br/>\n        You may discard this during any ally's main phase. If you do,\n        they gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: 'Electrum Rod',\n    id: 'ElectrumRod',\n    cost: 3,\n    effect: `\n      <p>\n        Any player may focus one of their breaches.<br/>\n        If that player has a prepped spell that costs 5 <span class=\"aether\">&AElig;</span>\n        or more, gain 1 charge.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: `Martyr's Bone`,\n    id: 'MartyrsBone',\n    cost: 3,\n    effect: `\n      <p>\n        Focus one of your breaches of <b>Conjure</b>.<br/>\n        You may lose 1 charge to do both.\n      </p>\n    `,\n    keywords: ['conjure'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: 'Chaos Charm',\n    id: 'ChaosCharm',\n    cost: 5,\n    effect: `\n      <p>\n        Two different players may destroy a card in hand.<br/>\n        You may destroy this. If you do, remove a fire token from your location on the map.\n      </p>\n    `,\n    keywords: ['fire token'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: `Summoner's Horn`,\n    id: 'SummonersHorn',\n    cost: 5,\n    effect: `\n      <p>\n        Any player may prep a spell in their discard pile to their opened\n        or closed breaches.<br/><br/>\n        <b>Recall:</b> Discard a card to gain 1 charge.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: 'Void Anchor',\n    id: 'VoidAnchor',\n    cost: 5,\n    effect: `\n      <p>\n        Silence a minion. Any ally gains 2 <span class=\"aether\">&AElig;</span> tokens.<br/><br/>\n        <b>Recall:</b> Gravehold gains 1 life.\n      </p>\n    `,\n    keywords: ['recall', 'silence'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: 'Lightbringer Staff',\n    id: 'LightbringerStaff',\n    cost: 6,\n    effect: `\n      <p>\n        The players collectively destroy up to to cards in their hands.\n        <span class=\"or\">OR</span>\n        Silence up to two minions.\n        <span class=\"or\">OR</span>\n        Destroy this. Remove a fire token from your location on the map.\n      </p>\n    `,\n    keywords: ['fire token', 'silence'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'LOG',\n    name: 'Phoenix Quill',\n    id: 'PhoenixQuill',\n    cost: 6,\n    effect: `\n      <p>\n        Two different players gain 1 life each.<br/><br/>\n        <b>Recall:</b> Lose 1 charge to return a card that costs 3 <span class=\"aether\">&AElig;</span>\n        or less from your discard pile to your hand.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n]\n\nconst spells: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Grassblade',\n    id: 'Grassblade',\n    cost: 2,\n    effect: `\n      <p>\n        You may destroy this from your hand during any ally's main phase.\n        If you do, draw a card.<br/>\n        <b>Cast:</b> Deal 2 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Aether Ripple',\n    id: 'AetherRipple',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 2 damage.<br/>\n        Each ally gains an <span class=\"aether\">&AElig;</span> token.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Douse',\n    id: 'Douse',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br/>\n        You may destroy this. If you do, remove a fire token\n        from your location on the map.\n      </p>\n    `,\n    keywords: ['fire token'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Evaporating Ray',\n    id: 'EvaporatingRay',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br/>\n        Any ally may discard a card in hand that costs 2 <span class=\"aether\">&AElig;</span>\n        or more. If they do, this deals an additional 2 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Galvanize',\n    id: 'Galvanize',\n    cost: 4,\n    effect: `\n      <p>\n        While prepped, once during your main phase, you may <b>Conjure</b>.<br/>\n        <b>Cast:</b> Deal 2 damage.\n      </p>\n    `,\n    keywords: ['conjure'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Magnetic Burst',\n    id: 'MagneticBurst',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br/>\n        You may reveal the top two cards of you deck and place any number\n        of those cards on top of your discard pile.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Backfire',\n    id: 'Backfire',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br/>\n        You may lose 1 charge to return this to your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Cascade',\n    id: 'Cascade',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 3 damage.<br/>\n        You may return a card that costs 4 <span class=\"aether\">&AElig;</span> or less\n        from your discard pile to your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Crystal Carapace',\n    id: 'CrystalCarapace',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br/><br/>\n        When another card or effect would cause you to discard or destroy this,\n        you may return this to your hand. If it was prepped, you may prep it.\n        <i>(Ignore this effect while this card is in the supply.)</i>\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Flame Quake',\n    id: 'FlameQuake',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br/><br/>\n        <b>Recall:</b> Lose 2 charges to remove a fire token from your location on the map.\n      </p>\n    `,\n    keywords: ['recall', 'fire token'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Parallel Self',\n    id: 'Parallel Self',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br/><br/>\n        <b>Recall:</b> Spend 2 <span class=\"aether\">&AElig;</span> to deal 2 damage.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Temporal Strike',\n    id: 'TemporalStrike',\n    cost: 6,\n    effect: `\n      <p>\n        While prepped, when you cast a spell that costs 2 <span class=\"aether\">&AElig;</span>\n        or less, it deals 1 additional damage and you may return it to your hand.<br/>\n        <b>Cast:</b> Deal 4 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Paradigm Flux',\n    id: 'ParadigmFlux',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Cast:</b> Remove up to 2 shield tokens from minions.<br/>\n        Deal 5 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Entwined Tremor',\n    id: 'Entwined Tremor',\n    cost: 8,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 6 damage.<br/>\n        If there is a spell that costs 5 <span class=\"aether\">&AElig;</span> or more\n        prepped to an adjacent breach, this deals 2 additional damage.<br/>\n        If there is a spell that costs 4 <span class=\"aether\">&AElig;</span> or less\n        prepped to an adjacent breach, gain 1 charge.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'LOG',\n    name: 'Volcanic Shrapnel',\n    id: 'VolcanicShrapnel',\n    cost: 8,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage. Deal 1 damage. Deal 1 damage.<br/>\n        You may return to your hand up to two card from your discard pile\n        that cost 0 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n\nexport const cards: ICard[] = [...gems, ...relics, ...spells]\n","import { IExpansionData } from '../../../aer-types/types'\n\nimport { aeData } from './aeonsEnd'\nimport { depthsData } from './theDepths'\nimport { namelessData } from './theNameless'\nimport { weData } from './warEternal'\n\nconst FR: IExpansionData = {\n  AE: aeData,\n  Depths: depthsData,\n  Nameless: namelessData,\n  WE: weData,\n}\n\nexport default FR\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const aeData: IExpansion = {\n  id: 'AE',\n  name: \"Aeon's End\",\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'AE',\n    name: 'Reine Carapace',\n    id: 'CarapaceQueen',\n    health: 60,\n    difficulty: 3,\n    additionalInfo: '',\n    expeditionRating: 1,\n  },\n  {\n    expansion: 'AE',\n    name: 'Masque Tordu',\n    id: 'CrookedMask',\n    health: 70,\n    difficulty: 5,\n    additionalInfo: '',\n    expeditionRating: 2,\n  },\n  {\n    expansion: 'AE',\n    name: 'Prince des Gloutons',\n    id: 'PrinceOfGluttons',\n    health: 70,\n    difficulty: 5,\n    additionalInfo: '',\n    expeditionRating: 2,\n  },\n  {\n    expansion: 'AE',\n    name: 'Rage Incarnée',\n    id: 'Rageborne',\n    health: 70,\n    difficulty: 2,\n    additionalInfo: '',\n    expeditionRating: 1,\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'AE',\n    name: 'Adelheim',\n    id: 'Adelheim',\n    mageTitle: 'Armurier',\n    ability:\n      '<h2>Gardien étherien</h2>\\n<p class=\"ability-activation\">S\\'active durant la phase de pioche de la némésis :</p>\\n<p>Après qu\\'une carte Attaque ou Pouvoir a été piochée, mais avant qu\\'elle soit résolue, vous pouvez la défausser sans appliquer son effet.\\n<span class=\"hint\">La némésis ne pioche pas de nouvelle carte à la place</span></p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: \"Éclat d'améthyste\",\n        id: 'AmethystShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span>.<br/>\\nUn allié peut piocher une carte, puis défausser une carte de sa main.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Brama',\n    id: 'Brama',\n    mageTitle: 'Ancienne',\n    ability:\n      '<h2>Siphon de la bordure</h2>\\n<p class=\"ability-activation\">S\\'active durant votre phase principale :</p>\\n<p>Un joueur gagne 4 Vie.</p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Lumière enterrée',\n        id: 'BuriedLight',\n        cost: 0,\n        effect:\n          '<p>\\n<b>Lancer :</b> Infligez 1 dégât. Gagnez 1 <span class=\"aether\">&AElig;</span>.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Jian',\n    id: 'Jian',\n    mageTitle: 'Orpheline',\n    ability:\n      '<h2>Miroir noir</h2>\\n<p class=\"ability-activation\">S\\'active durant votre phase principale :</p>\\n<p>Lancez le sort préparer d\\'un joueur sans le défausser. Puis lancer ce sort à nouveau.\\n<span class=\"hint\">Défaussez-le ensuite.</span></p>',\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Éclat de pierre de lune',\n        id: 'MoonstoneShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span>.<br/>\\nGagnez 1 <span class=\"aether\">&AElig;</span> additionnel qui ne peut être utilisé que pour acquérir une Gemme.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Kadir',\n    id: 'Kadir',\n    mageTitle: 'Chercheuse',\n    ability:\n      \"<h2>Porte vers l'autre-monde</h2>\\n<p class=\\\"ability-activation\\\">S'active durant la phase principale d'un joueur :</p>\\n<p>Ce joueur peut reprendre en main jusqu'à trois sorts de sa défausse. Durant ce tour, ce joueur peut préparer jusqu'à deux sorts sur chacune de ses brèches ouvertes.</p>\",\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: \"Éclat d'émeraude\",\n        id: 'EmeraldShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span>.\\n<span class=\"or\">OU</span>\\nUn joueur gagne 1 point de vie.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Lash',\n    id: 'Lash',\n    mageTitle: 'Éclaireur',\n    ability:\n      '<h2>Accélération mentale</h2>\\n<p class=\"ability-activation\">S\\'active durant la phase principale d\\'un joueur :</p>\\n<p>Mélangez la carte Ordre du tour d\\'un joueur dans le paquet d\\'ordre du tour. Ce joueur subit 1 dégât.\\n<span class=\"hint\">Vous ne pouvez pas choisir la carte Ordre du jour Joker.</span></p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Éclat de quartz',\n        id: 'QuartzShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span>.<br/>\\nRévélez la 1re carte de la pioche d\\'ordre du tour. Vous pouvez placer cette carte au-dessus ou en dessous de la pioche d\\'ordre du tour.<br/>\\nSi vous avez révélé la carte d\\'ordre tour d\\'un joueur, gagnez 1 <span class=\"aether\">&AElig;</span> supplémentaire.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Mist',\n    id: 'Mist',\n    mageTitle: 'Capitaine de la dague',\n    ability:\n      '<h2>Prédiciton divine</h2>\\n<p class=\"ability-activation\">S\\'active durant votre phase principale :</p>\\n<p>Un allié pioche quatre cartes.</p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Éclat de grenat',\n        id: 'GarnetShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span>.\\n<span class=\"or\">OU</span>\\nLancez un sort préparé chez n\\'importe quel joueur.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Phaedraxa',\n    id: 'Phaedraxa',\n    mageTitle: 'Voyante',\n    ability:\n      '<h2>Rune des oracles</h2>\\n<p class=\"ability-activation\">S\\'active au moment où une carte Ordre du tour est révélée :</p>\\n<p>Tous les dégâts que les joueurs ou Gravehold devraient subir ce tour-ci sont annulés.</p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Éclat de tourmaline',\n        id: 'TourmalineShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span>.<br/>\\nUn allié peut subir 1 dégât pour détruire une carte de sa main.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Xaxos',\n    id: 'Xaxos',\n    mageTitle: 'Adepte',\n    ability:\n      \"<h2>Lien métaphysique</h2>\\n<p class=\\\"ability-activation\\\">S'active durant la phase principale d'un joueur :</p>\\n<p>Les alliés reçoivent collectivement 4 charges. Révélez puis replacez les cartes de la pioche d'Ordre du tour dans l'ordre de votre choix.</p>\",\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Flash',\n        id: 'Flare',\n        cost: 0,\n        effect:\n          \"<p>\\n<b>Lancer :</b> Révélez la 1re carte de la pioche d'ordre du tour, puis replacez-la au dessus de cette pioche. Si vous avez révélé la carte d'ordre du tour d'un joueur, infligez 3 dégâts. Sinon 1 dégât.\\n</p>\",\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Agrégat de diamants',\n    id: 'DiamondCluster',\n    cost: 4,\n    effect:\n      '<p>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.<br/>\\nSi c\\'est le second Agrégat de diamants que vous jouez ce tour, gagnez 2 <span class=\"aether\">&AElig;</span> de plus.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Arc chaotique',\n    id: 'ChaosArc',\n    cost: 6,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 3 dégâts.<br/>\\nInfligez 2 dégâts supplémentaires par sort préparé sur une brèche adjacente.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Mise à feu',\n    id: 'Ignite',\n    cost: 4,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 2 dégâts.<br/>\\nUn allié gagne 1 charge.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: \"Vol d'essence\",\n    id: 'EssenceTheft',\n    cost: 5,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 3 dégâts.<br/>\\nVous pouvez défausser une carte de votre main. Si vous le faites, un joueur gagne 1 point de vie.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Rubis fulgurant',\n    id: 'SearingRuby',\n    cost: 4,\n    effect:\n      '<p>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.<br/>\\nGagnez 1 <span class=\"aether\">&AElig;</span> supplémentaire qui ne peut être utilisé que pour acquérir un sort.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Éclair enragé',\n    id: 'FeralLightning',\n    cost: 5,\n    effect:\n      \"<p>\\nCe sort peut être préparé sur une brèche fermée sans qu'elle doive être stabilisée.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 3 dégâts.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Aperçu planaire',\n    id: 'PlanarInsight',\n    cost: 6,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 2 dégâts.<br/>\\nInfligez 1 dégât supplémentaire pour chacune de vos brèches ouvertes.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Écho spectral',\n    id: 'SpectralEcho',\n    cost: 3,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 2 dégâts.<br/>\\nVous pouvez détruire une carte de votre main.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Opale brûlante',\n    id: 'BurningOpal',\n    cost: 5,\n    effect:\n      '<p>\\nGagnez 3 <span class=\"aether\">&AElig;</span>.<br/>\\nVous pouvez défausser une carte de votre main pour qu\\'un allié pioche une carte.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Vide dévorant',\n    id: 'ConsumingVoid',\n    cost: 7,\n    effect:\n      \"<p>\\n<b>Lancer :</b> Détruisez jusqu'à deux cartes de votre main. Infligez 3 dégâts par carte détruite de cette manière.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Prisme instable',\n    id: 'UnstablePrism',\n    cost: 3,\n    effect:\n      '<p>\\nAppliquez deux fois l\\'effet d\\'une gemme de votre main, puis détruisez-la.\\n<span class=\"or\">OU</span>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Saphir nuageux',\n    id: 'CloudedSapphire',\n    cost: 6,\n    effect:\n      '<p>\\nGagnez 3 <span class=\"aether\">&AElig;</span>.<br/>\\nS\\'il s\\'agit du premier Saphir nuageux que vous jouez ce tour, un allié gagne 1 charge.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Talisman de mage',\n    id: 'MagesTalisman',\n    cost: 5,\n    effect: '<p>\\nGagnez 1 charge.<br/>\\nUn allié gagne 1 charge.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Dague fléchissante',\n    id: 'FlexingDagger',\n    cost: 2,\n    effect:\n      '<p>\\nLa prochaine brèche que vous stabilisez ou que vous ouvrez lors de ce tour vous coûte 3 <span class=\"aether\">&AElig;</span> de moins.\\n<span class=\"or\">OU</span>\\nDétruisez cette carte. Infligez 1 dégât.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Tentacule de lave',\n    id: 'LavaTendril',\n    cost: 4,\n    effect:\n      \"<p>\\nLorsque préparé, à la fin de votre phase d'incantation, infligez 1 dégât.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 3 dégâts.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Vortex en bouteille',\n    id: 'BottledVortex',\n    cost: 3,\n    effect:\n      \"<p>\\nDétruisez cette carte.<br/>\\nDétruisez jusqu'à deux cartes de votre ou de votre défausse.<br/>\\nPiochez une carte.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Nexus des arcanes',\n    id: 'ArcaneNexus',\n    cost: 7,\n    effect:\n      '<p>\\nLorsque préparé, une fois par tour durant votre phase principale, vous pouvez reprendre une gemme jouée ce tour-ci en main.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 4 dégâts.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Feu obscur',\n    id: 'DarkFire',\n    cost: 5,\n    effect:\n      \"<p>\\n<b>Lancer :</b> Défaussez jusqu'à deux cartes de votre main.<br/>\\nInfligez 3 dégâts par carte que vous avez défaussée de cette manière.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Flamme du phénix',\n    id: 'PhoenixFlame',\n    cost: 3,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 2 dégâts.<br/>\\nVous pouvez perdre 1 charge pour infliger 2 dégâts supplémentaires.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Jade',\n    id: 'Jade',\n    cost: 2,\n    effect: '<p>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Vision amplifiée',\n    id: 'AmplifyVision',\n    cost: 4,\n    effect:\n      '<p>\\n<b>Lancer :</b> Stabilisez votre brèche ayant le coût le plus faible.<br/>\\nInfligez 2 dégâts. Si toutes vos brèches sont ouvertes, infligez 1 dégat de plus.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: \"Ambre de V'risbois\",\n    id: 'VriswoodAmber',\n    cost: 3,\n    effect:\n      '<p>\\nLorsque vous acquérez cette carte, vous pouvez la placer au-dessus de votre pioche.<br/>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: \"Bâton d'explosion\",\n    id: 'BlastingStaff',\n    cost: 4,\n    effect:\n      '<p>\\nVous pouvez lancer un sort que vous avez préparé ce tour-ci et infliger 2 dégâts supplémentaires avec ce sort.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Perle filtrante',\n    id: 'SiftersPearl',\n    cost: 3,\n    effect:\n      '<p>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.<br/>\\nChaque joueur révèle la première carte de sa pioche et peut soit la défausser soit la remettre sur le dessus de sa pioche.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Fouet ardent',\n    id: 'WildfireWhip',\n    cost: 6,\n    effect:\n      '<p>\\nLorsque prépare, vous pouvez dépenser 2 <span class=\"aether\">&AElig;</span> durant votre phase principale, pour lancer un sort préparé chez n\\'importe quel joueur.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 4 dégâts.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Orbre de stabilisation',\n    id: 'FocusingOrb',\n    cost: 4,\n    effect:\n      '<p>\\nStabilisez la brèche d\\'un joueur.\\n<span class=\"or\">OU</span>\\nDétruisez cette carte pour faire gagner 3 points de vie à Gravehold.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: \"Vague d'oubli\",\n    id: 'OblivionSwell',\n    cost: 5,\n    effect:\n      '<p>\\nLorsque prépare, une fois par tour, durant votre phase principale, gagnez 1 <span class=\"aether\">&AElig;</span>.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 2 dégâts. Vous pouvez défausser une gemme pour infliger autant de dégâts supplémentaires que son coût.\\n</p>',\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'AgonyField-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: \"Champs d'agonie\",\n    power: 2,\n    effect: `\n      <p>\n        <b>Pour Défausser:</b> Détruisez une carte coûtant 2 <span class=\"aether\">&AElig;</span> ou plus.<br />\n        <br />\n        <b>Puissance 2:</b> Déchaîné. Un joueur défausse trois cartes de sa main puis pioche une carte.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Seigneur du Fléau',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Durable:</b> Déchaîné.\n      </p>\n    `,\n  },\n  {\n    id: 'BleedStatic-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Saignement Statique',\n    power: 3,\n    effect: `\n      <p>\n        <b>Puissance 3:</b> Le joueur ayant le plus grand nombre de sorts préparés subit 2 dégâts par sort préparé.\n      </p>\n    `,\n  },\n  {\n    id: 'EyeofNothing-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Œil du Néant',\n    power: 2,\n    effect: `\n      <p>\n        <b>Pour défausser:</b> Dépensez 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Puissance 2:</b> Déchaîné, deux fois.\n      </p>\n    `,\n  },\n  {\n    id: 'HazeSpewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Cracheur de Brouillard',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Durable:</b> Gravehold subit autant de dégâts que le nombre de points de vie actuel de ce Serviteur. Puis, ce Serviteur subit 1 dégâts.\n      </p>\n    `,\n  },\n  {\n    id: 'Skewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Embrocher',\n    effect: `\n      <p>\n        Déchaîné. Un joueur subit 3 dégâts puis pioche une carte.\n      </p>\n    `,\n  },\n  {\n    id: 'Slaughter-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Massacre',\n    effect: `\n      <p>\n        Déchaîné. Gravehold subit 3 dégâts.\n      </p>\n    `,\n  },\n  {\n    id: 'WovenSky-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Ciel Tissé',\n    power: 2,\n    effect: `\n      <p>\n        <b>Pour défausser:</b> Défaussez trois cartes de votre main.<br />\n        <br />\n        <b>Puissance 2:</b> Déchaîné. Un joueur subit 4 dégâts.\n      </p>\n    `,\n  },\n  {\n    id: 'Awaken-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Réveil',\n    effect: `\n      <p>\n        Déchaîné, deux fois. Puis Gravehold subit 3 dégâts.\n        <span class=\"or\">OU</span>\n        Remettez en jeu le serviteur ayant été défaussé le plus récemment.\n      </p>\n    `,\n  },\n  {\n    id: 'Cauterizer-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Cautériseur',\n    shields: 3,\n    hp: 0,\n    effect: `\n      <p>\n        Lorsque ce serviteur subit des dégâts, ils sont réduits à 1.<br />\n        <br />\n        <b>Durable:</b> Un joueur subit autant de dégâts que la vie actuelle de ce serviteur.\n      </p>\n    `,\n  },\n  {\n    id: 'Dispel-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Dissiper',\n    effect: `\n      <p>\n        Déchaîné, deux fois. Le joueur ayant le plus grand nombre de sorts préparés défausse son sort préparé le plus cher.\n      </p>\n    `,\n  },\n  {\n    id: 'Needlemaw-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Mâchoire-Acérée',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Durable:</b> Gravehold subit 2 dégâts.\n      </p>\n    `,\n  },\n  {\n    id: 'LayWaste-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Dévaster',\n    effect: `\n      <p>\n        Déchaîné, deux fois. Un joueur subit 2 dégâts.\n      </p>\n    `,\n  },\n  {\n    id: 'PulverizingRay-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Power',\n    name: 'Rayon Pulvérisant',\n    power: 1,\n    effect: `\n      <p>\n        <b>Puissance 1:</b> Gravehold subit 3 dégâts sauf si un joueur défausse une gemme de sa main. Répétez ceci 5 fois de plus.\n      </p>\n    `,\n  },\n  {\n    id: 'Venomite-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Porte-Venin',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Durable:</b> Le joueur ayant le moins de vie subit 2 dégâts.\n        <span class=\"or\">OU</span>\n        Un joueur défausse un sort préparé coûtant 3 <span class=\"aether\">&AElig;</span> ou plus.\n      </p>\n    `,\n  },\n  {\n    id: 'DoomAegis-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Égide de la Ruine',\n    power: 1,\n    effect: `\n      <p>\n        <b>Pour défausser:</b> Dépensez 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Puissance 1:</b> Le joueur ayant le plus grand nombre de charges subit 4 dégâts et perd toutes ses charges.\n      </p>\n    `,\n  },\n  {\n    id: 'GatherDarkness-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Rassembler les Ombres',\n    effect: `\n      <p>\n        Un joueur place sa défausse sur sa pioche, mélange le tout, puis détruit les quatre premières cartes de son paquet. Puis, Déchaîné, deux fois.\n      </p>\n    `,\n  },\n  {\n    id: 'JaggedOne-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Le Déchiqueté',\n    hp: 14,\n    effect: `\n      <p>\n        <b>Durable:</b> Déchaîné, deux fois.\n      </p>\n    `,\n  },\n  {\n    id: 'Obliterate-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Anéantir',\n    effect: `\n      <p>\n        Déchaîné, deux fois. Le joueur ayant le plus grand nombre de brèches ouvertes doit détruire quatre cartes de sa main ou subit 4 dégâts.\n      </p>\n    `,\n  },\n  {\n    id: 'RealityRupture-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Rupture de la Réalité',\n    power: 1,\n    effect: `\n      <p>\n        <b>Pour défausser:</b> Détruisez deux sorts préparés coûtant chacun 3 <span class=\"aether\">&AElig;</span> ou plus.<br />\n        <br />\n        <b>Puissance 1:</b> Déchaîné, trois fois.\n      </p>\n    `,\n  },\n  {\n    id: 'Sunder-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Fracture',\n    effect: `\n      <p>\n        Gravehold subit 4 dégâts et le joueur ayant le moins de vie subit 4 dégâts.\n        <span class=\"or\">OU</span>\n        Mélangez toutes les cartes Ordre du tour de la némésis dans le paquet d'ordre du tour.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Renverser',\n    effect: `\n      <p>\n        Déchaîné, deux fois. Gravehold subit 4 dégâts.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const depthsData: IExpansion = {\n  id: 'Depths',\n  name: 'Les Profondeurs',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Depths',\n    name: 'La Mégère',\n    id: 'HordeCrone',\n    health: 60,\n    difficulty: 6,\n    additionalInfo: '',\n    expeditionRating: 2,\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Depths',\n    name: 'Nym',\n    id: 'Nym',\n    mageTitle: 'Apprenti',\n    ability:\n      '<h2>Barrière définitive</h2>\\n<p class=\"ability-activation\">S\\'active durant votre phase principale :</p>\\n<p>Défaussez la première carte de la pioche Némésis\\n<span class=\"hint\">S\\'il s\\'agit d\\'une carte Attaque, défaussez une carte supplémentaire de la pioche Némésis</span></p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Cendre',\n        id: 'Cinder',\n        cost: 0,\n        effect:\n          '<p>\\n<b>Lancer :</b> Infligez 1 dégât.\\n<span class=\"or\">OU</span>\\n<b>Lancer :</b> Gagnez 2 <span class=\"aether\">&AElig;</span>\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: 'Reeve',\n    id: 'Reeve',\n    mageTitle: \"Mage de la Brèche d'élite\",\n    ability:\n      '<h2>Lame de répression</h2>\\n<p class=\"ability-activation\">S\\'active durant votre phase principale :</p>\\n<p>Infligez 5 dégâts à un serviteur\\n<span class=\"hint\">Infligez 3 dégâts à un autre serviteur</span></p>',\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        expansion: 'Depths',\n        name: \"Eclat d'obsidienne\",\n        id: 'ObsidianShard',\n        cost: 0,\n        effect:\n          '<p>\\nGagnez 1 <span class=\"aether\">&AElig;</span><br/>\\nVous pouvez subir 1 dégât. Si vous le faites, gagnez 2 <span class=\"aether\">&AElig;</span> supplémentaires\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: \"Z'hana\",\n    id: 'Zhana',\n    mageTitle: 'Renégate',\n    ability:\n      '<h2>Glyphe du Sanctum</h2>\\n<p class=\"ability-activation\">S\\'active durant votre phase principale :</p>\\n<p>Gravehold gagne 7 points de vie</p>',\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Braise éternelle',\n        id: 'EternalEmber',\n        cost: 0,\n        effect:\n          '<p>\\n<b>Lancer :</b> Infligez 1 dégât.\\n<span class=\"or\">OU</span>\\n<b>Lancer :</b> Lancez un de vos sorts préparés sans le défausser\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Lien du vide',\n    id: 'VoidBond',\n    cost: 4,\n    effect:\n      \"<p>\\n<b>Lancer :</b> Infligez 3 dégâts.<br/>\\nVous pouvez lancer un sort préparé de n'importe quel joueur.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Combustion',\n    id: 'Combustion',\n    cost: 5,\n    effect:\n      \"<p>\\n<b>Lancer :</b> Infligez 2 dégâts à un serviteur.<br/>\\nInfligez 2 dégâts à un autre serviteur ou à la Némésis.<br/>\\n(Les effets modifiant les dégâts s'appliquent aux dégâts de chacun des deux effets de cette carte)\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Dynamo de vigueur',\n    id: 'VimDynamo',\n    cost: 4,\n    effect:\n      '<p>\\nSubissez 1 dégât. Un joueur pioche deux cartes.<br/>\\nou<br/>\\nDétruisez cette carte. Un joueur gagne 2 points de vie et 1 charge.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Faux de désintégration',\n    id: 'DisintegratingScythe',\n    cost: 7,\n    effect:\n      \"<p>\\n<b>Lancer :</b> Infligez 8 dégâts. Subissez 1 dégât.<br/>\\nPlutôt que de défausser cette carte, détruisez-la, ou placez-la sur la défausse d'un joueur.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Brasier monstrueux',\n    id: 'MonstrousInferno',\n    cost: 8,\n    effect:\n      \"<p>\\nCe sort doit être préparé sur deux brèches adjacentes, de manière à ce qu'il touche les deux brèches.<br/>\\nLes deux brèches sont occupées par ce sort.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 7 dégâts répartis librement entre la Némésis et autant de serviteurs que souhaité.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Ombre dévorante',\n    id: 'DevouringShadow',\n    cost: 6,\n    effect:\n      '<p>\\nLorsque péparé, une fois par tour, durant votre phase principale, vous pouvez détruire une carte de votre main.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 3 dégâts.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Depths',\n    name: 'Topaze de bannissement',\n    id: 'BanishingTopaz',\n    cost: 5,\n    effect:\n      '<p>\\nGagnez 2 <span class=\"aether\">&AElig;</span><br/>\\nVous pouvez placer une carte de votre main sur votre pioche. Si vous le faites, gagnez 2 <span class=\"aether\">&AElig;</span> supplémentaires\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Transmogriffeur',\n    id: 'Transmogrifier',\n    cost: 4,\n    effect:\n      '<p>\\nDétruisez une carte de votre main.<br/>\\nVous pouvez gagner une carte d\\'une pile de la réserve qui coûte jusqu\\'à 3 <span class=\"aether\">&AElig;</span> de plus que la carte détruite.\\n</p>',\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = []\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const namelessData: IExpansion = {\n  id: 'Nameless',\n  name: 'Les Sans-Noms',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Seigneur de la Désolation',\n    id: 'BlightLord',\n    health: 70,\n    difficulty: 4,\n    additionalInfo: '',\n    expeditionRating: 2,\n  },\n  {\n    expansion: 'Nameless',\n    name: \"L'Egaré\",\n    id: 'WaywardOne',\n    health: 60,\n    difficulty: 7,\n    additionalInfo: '',\n    expeditionRating: 3,\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Malastar',\n    id: 'Malastar',\n    mageTitle: 'Mentor',\n    ability:\n      \"<h2>Don de l'éther</h2>\\n<p class=\\\"ability-activation\\\">S'active durant votre phase principale :</p>\\n<p>Gagnez un sort de n'importe quelle pile de la réserve. Vous pouvez préparer ce sort sur une brèche ouverte de n'importe quel joueur.</p>\",\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Immolation',\n        id: 'Immolate',\n        cost: 0,\n        effect:\n          '<p>\\nLorsque préparé, si vous subissez des dégâts, gagnez 1 charge.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 1 dégât.\\n</p>',\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Marteau en fusion',\n    id: 'MoltenHammer',\n    cost: 5,\n    effect:\n      \"<p>\\nGagnez 1 charge.<br/>\\nVous pouvez détruire une carte de votre main ou du dessus de le défausse de n'importe quel joueur.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Radiance',\n    id: 'Radiance',\n    cost: 8,\n    effect:\n      '<p>\\n<b>Lancer :</b> Infligez 5 dégâts. Chaque allié pioche une carte.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Flamber',\n    id: 'Blaze',\n    cost: 4,\n    effect:\n      \"<p>\\nLorsque vous gagnez cette carte, vous pouvez la placer sur la défausse de n'importe quel joueur.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 2 dégâts. Infligez 1 dégât suplémentaire par Flamber que vous avez lancé ce tour et par autre Flamber préparé  sur vos brèches.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Eclair de prophétie',\n    id: 'ScryingBolt',\n    cost: 6,\n    effect:\n      \"<p>\\n<b>Lancer :</b> Infligez 5 dégâts. Vous pouvez perdre 1 charge.<br/>\\nSi vous le faites, révélez les deux premières cartes de la pioche de la Némésis et replacez les dans l'ordre de votre choix.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'La marque du sage',\n    id: 'SagesBrand',\n    cost: 7,\n    effect:\n      \"<p>\\nCe sort doit être préparé sur deux brèches adjacentes, de manière à ce qu'il touche les deux brèches.<br/>\\nLes deux brèches sont occupées par ce sort.<br/>\\nLorsque préparé, piochez une carte de plus lors de votre phase de pioche.<br/>\\n<br/>\\n<b>Lancer :</b> Infligez 6 dégâts.\\n</p>\",\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Nameless',\n    name: 'Agate sangsue',\n    id: 'LeechingAgate',\n    cost: 3,\n    effect:\n      '<p>\\nLorsque vous gagnez cette carte, gagner 1 charge.<br/>\\nGagnez 2 <span class=\"aether\">&AElig;</span>.\\n</p>',\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Spirale temporelle',\n    id: 'TemporalHelix',\n    cost: 7,\n    effect:\n      \"<p>\\nLancez un sort préparé de n'importe quel joueur sans le défausser.\\n</p>\",\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = []\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const weData: IExpansion = {\n  id: 'WE',\n  name: 'Guerre éternelle',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = []\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = []\n","import { IExpansionData } from '../../../aer-types/types'\nimport { aeonsEndData } from './aeonsEnd'\nimport { legacyData } from './legacy'\nimport { outerDarkData } from './outerDark'\nimport { promosData } from './promos'\nimport { theDepthsData } from './theDepths'\nimport { theNamelessData } from './theNameless'\nimport { theVoidData } from './theVoid'\nimport { warEternalData } from './warEternal'\n\nconst PL: IExpansionData = {\n  AE: aeonsEndData,\n  Depths: theDepthsData,\n  Legacy: legacyData,\n  Nameless: theNamelessData,\n  OD: outerDarkData,\n  TV: theVoidData,\n  WE: warEternalData,\n  promos: promosData,\n}\n\nexport default PL\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const aeonsEndData: IExpansion = {\n  id: 'AE',\n  name: 'Aeons End',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'AE',\n    name: 'Królowa Roju',\n    id: 'CarapaceQueen',\n    health: 60,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Maska Kłamstw',\n    id: 'CrookedMask',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Książę Pożeraczy',\n    id: 'PrinceOfGluttons',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Gnieworodny',\n    id: 'Rageborne',\n    health: 70,\n    difficulty: 2,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'AE',\n    name: 'Adelheim',\n    id: 'Adelheim',\n    mageTitle: 'Kowal Magii Bram',\n    ability: `\n        <h2>Eteryczny Krąg</h2>\n        <p class=\"ability-activation\">Użyj podczas fazy dobierania Nemezis:</p>\n        <p>Po dobraniu karty Mocy lub Ataku możesz ją odrzucić, bez rozpatrywania jej efektu.\n        <span class=\"hint\">(Nemezis nie dobiera karty zastępczej)</span></p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Ametystu',\n        expansion: 'AE',\n        id: 'AmethystShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Dowolny sojusznik może dobrać kartę z talii, a następnie odrzucić jedną kartę z ręki.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Brima',\n    id: 'Brama',\n    mageTitle: 'Starsza Magini Bram',\n    ability: `\n        <h2>Skraj Wytrzymałości</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Dowolny gracz odzyskuje 4 życia.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Pogrzebany Blask',\n        expansion: 'AE',\n        id: 'BuriedLight',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.<br/>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Jian',\n    id: 'Jian',\n    mageTitle: 'Osierocona Magini Bram',\n    ability: `\n        <h2>Czarne Lustro</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Aktywuj przygotowane Zaklęcie dowolnego gracza, bez odrzucania go.</p>\n        <p>Następnie, ponownie aktywuj to Zaklęcie.\n        <span class=\"hint\">(Po tym należy je odrzucić.)</span></p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Kamień Księżycowy',\n        expansion: 'AE',\n        id: 'MoonstoneShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>, który może zostać wykorzystany wyłącznie do pozyskania Klejnotu.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Kadir',\n    id: 'Kadir',\n    mageTitle: 'Poszukiwaczka Magów Bram',\n    ability: `\n        <h2>Pozaziemskie Wrota</h2>\n        <p class=\"ability-activation\">Użyj podczas fazy głównej dowolnego gracza:</p>\n        <p>Ten gracz może przywrócić na rękę do trzech Zaklęć ze swojego stosu kart odrzuconych.\n        Ponadto może podczas tej tury przygotować po dwa Zaklęcia na każdej otwartej Bramie.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Szmaragdu',\n        expansion: 'AE',\n        id: 'EmeraldShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">ALBO</span>\n              Dowolny gracz otrzymuje 1 punkt życia.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Lash',\n    id: 'Lash',\n    mageTitle: 'Zwiadowca Magów Bram',\n    ability: `\n        <h2>Przyspieszone Myśli</h2>\n        <p class=\"ability-activation\">Użyj podczas fazy głównej dowolnego gracza:</p>\n        <p>Wtasuj kartę tury dowolnego gracza do talii tur. Ten gracz otrzymuje 1 obrażenie. \n        <span class=\"hint\">(Nie możesz wybrać karty tury oznaczonej symbolem \"X\").</span></p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Kwarcu',\n        expansion: 'AE',\n        id: 'QuartzShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Odkryj wierzchnią kartę z talii tur. Możesz ją umieścić na spodzie lub na wierzchu talii tur.\n              Jeżeli odkryłeś kartę tury gracza, otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Mist',\n    id: 'Mist',\n    mageTitle: 'Kapitan Magów Bram',\n    ability: `\n        <h2>Boska Przepowiednia</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Dowolny sojusznik dobiera cztery karty.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Granatu',\n        expansion: 'AE',\n        id: 'Garnet Shard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">ALBO</span>\n              Aktywuj przygotowane Zaklęcie dowolnego gracza.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Phaedraxa',\n    id: 'Phaedraxa',\n    mageTitle: 'Prorokini Magii Bram',\n    ability: `\n        <h2>Runa Augura</h2>\n        <p class=\"ability-activation\">Użyj natychmiast po tym jak zostanie dobrana karta tury:</p>\n        <p>Anuluj obrażenia zadane graczom i Gravehold podczas tej tury.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Turmalinu',\n        expansion: 'AE',\n        id: 'TourmalineShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Dowolny sojusznik może otrzymać 1 obrażenie, aby zniszczyć kartę na swojej ręce.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Xaxos',\n    id: 'Xaxos',\n    mageTitle: 'Uczeń Magii Bram',\n    ability: `\n        <h2>Metafizyczne Ogniwo</h2>\n        <p class=\"ability-activation\">Użyj podczas fazy głównej dowolnego gracza:</p>\n        <p>Sojusznicy otrzymują łącznie 4 Ładunki do podziału. Odkryj karty z talii tur, \n        a następnie ułóż z nich talię tur w dowolnej kolejności.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Blask',\n        expansion: 'AE',\n        id: 'Flare',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Odkryj wierzchnią kartę z talii tur, a następnie odłóż ją na miejsce.\n              Jeżeli odkryłeś kartę tury gracza, zadaj 3 obrażenia. W przeciwnym razie, zadaj 1 obrażenie.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Skupisko Diamentów',\n    id: 'DiamondCluster',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n          Jeżeli zagrałeś Skupisko Diamentów po raz DRUGI w jednej turze, otrzymujesz dodatkowo 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Arka Chaosu',\n    id: 'ChaosArc',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n      Zadaj 2 dodatkowe obrażenia za każde zaklęcie przygotowane na przylegających Bramach.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Podpalenie',\n    id: 'Ignite',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n          Dowolny sojusznik otrzymuje 1 ładunek.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Kradzież Świadomości',\n    id: 'EssenceTheft',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n          Możesz odrzucić kartę z ręki. Jeżeli to zrobisz, dowolny gracz otrzymuje 1 punkt życia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Ognisty Rubin',\n    id: 'SearingRuby',\n    cost: 4,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>, który może zostać wykorzystany wyłącznie do pozyskania Zaklęcia.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Dziki Piorun',\n    id: 'FeralLightning',\n    cost: 5,\n    effect: `\n        <p>\n          To zaklęcie może zostać przygotowane na zamkniętej Bramie, bez jej wzmacniania.<br/>\n          <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Zmysł Wymiarów',\n    id: 'PlanarInsight',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n        Zadaj po 1 dodatkowym obrażeniu za każdą swoją otwartą Bramę.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Upiorny Pogłos',\n    id: 'SpectralEcho',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n          Możesz zniszczyć kartę na ręce.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Płonący Opal',\n    id: 'BurningOpal',\n    cost: 5,\n    effect: `\n      <p>\n      Otrzymujesz 3 <span class=\"aether\">&AElig;</span>.<br/>\n      Możesz odrzucić dowolną kartę z ręki, aby sojusznik mógł dobrać kartę.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Nieokiełznana Czeluść',\n    id: 'ConsumingVoid',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zniszcz do dwóch kart na ręce.<br/>\n      Zadaj 3 obrażenia za każdą zniszczoną w ten sposób kartę.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Niestabilny Pryzmat',\n    id: 'UnstablePrism',\n    cost: 3,\n    effect: `\n      <p>\n      Dwukrotnie zagraj kartę Klejnotu z ręki, a następnie zniszcz ją.\n        <span class=\"or\">ALBO</span>\n        Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Przyćmiony Szafir',\n    id: 'CloudedSapphire',\n    cost: 6,\n    effect: `\n      <p>\n      Otrzymujesz 3 <span class=\"aether\">&AElig;</span>.<br/>\n      Jeżeli zagrałeś Przyćmiony Szafir po raz PIERWSZY w tej turze, dowolny sojusznik otrzymuje 1 Ładunek.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Amulet Maga',\n    id: 'MagesTalisman',\n    cost: 5,\n    effect: `\n      <p>\n        Otrzymujesz 1 Ładunek.<br/>\n        Dowolny sojusznik otrzymuje 1 Ładunek.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Zakrzywiony Sztylet',\n    id: 'FlexingDagger',\n    cost: 2,\n    effect: `\n      <p>\n        Podczas tej tury, następne twoje wzmocnienie lub otwarcie Bramy kosztuje o 3 \n        <span class=\"aether\">&AElig;</span> mniej.\n        <span class=\"or\">ALBO</span>\n        Zniszcz tę kartę. Zadaj 1 obrażenie.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Pnącze Magmy',\n    id: 'LavaTendril',\n    cost: 4,\n    effect: `\n      <p>\n        Gdy przygotowane: na końcu swojej fazy aktywacji zadaj 1 obrażenie.<br/>\n        <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Wir w Butelce',\n    id: 'BottledVortex',\n    cost: 3,\n    effect: `\n      <p>\n        Zniszcz tę kartę.<br/>\n        Zniszcz do dwóch kart ze swojej ręki lub stosu kart odrzuconych.<br/>\n        Dobierz kartę.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Nieprzeniknione Ogniwo',\n    id: 'ArcaneNexus',\n    cost: 7,\n    effect: `\n      <p>\n      Gdy przygotowane: raz na turę, w swojej fazie głównej możesz wziąć z powrotem na rękę zagraną w tej turze kartę Klejnotu.<br/>\n        <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Mroczny Płomień',\n    id: 'DarkFire',\n    cost: 5,\n    effect: `\n        <p>\n        <b>Aktywacja:</b> Odrzuć do dwóch kart z ręki.<br/>\n        Zadaj po 3 obrażenia za każdą odrzuconą kartę.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Płomień Feniksa',\n    id: 'PhoenixFlame',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n          Możesz odrzucić 1 Ładunek, aby zadać dodatkowe 2 obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Jadeit',\n    id: 'Jade',\n    cost: 2,\n    effect: `\n      <p>\n        Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Poszerzone widzenie',\n    id: 'AmplifyVision',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Wzmocnij swoją zamkniętą Bramę o najniższym koszcie wzmocnienia.<br/>\n      Zadaj 2 obrażenia.<br/>\n      Jeżeli wszystkie twoje Bramy są otwarte, zadaj dodatkowo 1 obrażenie.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Bursztyn Vriswood',\n    id: 'VriswoodAmber',\n    cost: 3,\n    effect: `\n      <p>\n        Gdy pozyskujesz tę kartę, możesz ją umieścić na wierzchu swojej talii.<br/>\n        Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Kostur Spustoszenia',\n    id: 'BlastingStaff',\n    cost: 4,\n    effect: `\n      <p>\n        Możesz aktywować Zaklęcie, które przygotowałeś podczas tej tury. W takim przypadku, to Zaklęcie zadaje dodatkowe 2 obrażenia.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Perła Poławiacza',\n    id: 'SiftersPearl',\n    cost: 3,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Każdy gracz odkrywa wierzchnią kartę swojej talii. Może ją odrzucić lub odłożyć na wierzch talii.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Ognisty Bicz',\n    id: 'WildfireWhip',\n    cost: 6,\n    effect: `\n      <p>\n      Gdy przygotowane: możesz podczas fazy głównej swojej tury wydać 2 <span class=\"aether\">&AElig;</span>, \n      aby aktywować przygotowane Zaklęcie dowolnego gracza.<br/>\n        <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Kula Wzmocnienia',\n    id: 'FocusingOrb',\n    cost: 4,\n    effect: `\n      <p>\n        Wzmocnij Bramę dowolnego gracza.\n        <span class=\"or\">ALBO</span>\n        Zniszcz tę kartę. Gravehold otrzymuje 3 żywotności.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Mistrz Zapomnienia',\n    id: 'OblivionSwell',\n    cost: 5,\n    effect: `\n      <p>\n      Gdy przygotowane: raz na turę, w swojej fazie głównej możesz otrzymać 1 \n      <span class=\"aether\">&AElig;</span>.<br/>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n      Możesz odrzucić Klejnot, aby zadać dodatkowe obrażenia równe jego kosztowi.\n        </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'AgonyField-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Pole Agonii',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Zniszcz kartę na ręce kosztującą 2 <span class=\"aether\">&AElig;</span> lub więcej.<br />\n        <br />\n        <b>MOC 2:</b> Wyzwolenie. Dowolny gracz odrzuca trzy karty z ręki, a następnie dobiera jedną kartę.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Demiurg Zguby',\n    hp: 6,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'BleedStatic-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Zakrzepły Krwotok',\n    power: 3,\n    effect: `\n      <p>\n        <b>MOC 3:</b> Gracz z największą liczbą przygotowanych Zaklęć, otrzymuje po 2 obrażenia za każde z nich.\n      </p>\n    `,\n  },\n  {\n    id: 'EyeofNothing-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Oko Nicości',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'HazeSpewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Mglaki',\n    hp: 5,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Gravehold otrzymuje tyle obrażeń, ile obecnie życia ma ten Poplecznik. Następnie, ten Poplecznik otrzymuje 1 obrażenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Skewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Szpikulec',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Dowolny gracz otrzymuje 3 obrażenia i dobiera kartę.\n      </p>\n    `,\n  },\n  {\n    id: 'Slaughter-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Rzeź',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Gravehold otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'WovenSky-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Osnowa Firmamentu',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Odrzucić trzy karty z ręki.<br />\n        <br />\n        <b>MOC 2:</b> Wyzwolenie. Dowolny gracz otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Awaken-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Przebudzenie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        Gravehold otrzymuje 3 obrażenia.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Umieść z powrotem w grze ostatnią odrzuconą kartę Poplecznika ze stosu kart odrzuconych Nemezis.\n      </p>\n    `,\n  },\n  {\n    id: 'Cauterizer-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Przyżegacz',\n    shields: 3,\n    hp: 0,\n    effect: `\n      <p>\n        Wartość obrażeń zadawanych temu Poplecznikowi jest zawsze redukowana do 1.<br />\n        <br />\n        <b>TRWAŁY:</b> Dowolny gracz otrzymuje tyle obrażeń, ile obecnie życia ma ten Poplecznik.\n      </p>\n    `,\n  },\n  {\n    id: 'Dispel-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Odrzucenie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Gracz z największą liczbą przygotowanych Zaklęć odrzuca najdroższe przygotowane Zaklęcie.\n      </p>\n    `,\n  },\n  {\n    id: 'Needlemaw-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Szpilopaszcze',\n    hp: 11,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Gravehold otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'LayWaste-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Zrównanie z Ziemią',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Dowolny gracz otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'PulverizingRay-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Power',\n    name: 'Promień Zniszczenia',\n    power: 1,\n    effect: `\n      <p>\n        <b>Power 1:</b> Gravehold otrzymuje 3 obrażenia.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Dowolny gracz odrzuca kartę Klejnotu z ręki. Należy powtórzyć tę czynności dodatkowo 5 razy.\n      </p>\n    `,\n  },\n  {\n    id: 'Venomite-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Jadomit',\n    hp: 9,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Gracz z najmniejszą liczbą punktów życia otrzymuje 2 obrażenia. \n        <span class=\"or\">ALBO</span>\n        Dowolny gracz odrzuca przygotowane Zaklęcie kosztujące 3 <span class=\"aether\">&AElig;</span> lub więcej.\n      </p>\n    `,\n  },\n  {\n    id: 'DoomAegis-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Egida Zagłady',\n    power: 1,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 1:</b> Gracz z największą liczbą Ładunków otrzymuje 4 obrażenia i odrzuca wszystkie Ładunki.\n      </p>\n    `,\n  },\n  {\n    id: 'GatherDarkness-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Narastająca Ciemność',\n    effect: `\n      <p>\n        Dowolny gracz umieszcza swój stos kart odrzuconych na wierzchu swojej talii, tasuje ją, a następnie niszczy cztery wierzchnie karty.<br />\n        <br />\n        Dwukrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'JaggedOne-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Wyszczerbiony',\n    hp: 14,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Dwukrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Obliterate-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Unicestwienie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Gracz z największą liczbą otwartych Bram niszczy cztery karty ze swojej ręki lub otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'RealityRupture-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Rozdarcie Materii',\n    power: 1,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Zniszcz dwa przygotowane Zaklęcia, każde kosztujące 3 <span class=\"aether\">&AElig;</span> lub więcej.<br />\n        <br />\n        <b>MOC 1:</b> Trzykrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Sunder-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Rozszarpanie',\n    effect: `\n      <p>\n        Gravehold otrzymuje 4 obrażenia.<br />\n        Gracz z najmniejszą liczbą punktów życia otrzymuje 4 obrażenia.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Wtasuj wszystkie karty tury Nemezis do talii tur.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Obalenie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Gravehold otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theDepthsData: IExpansion = {\n  id: 'Depths',\n  name: 'Czeluście',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Depths',\n    name: 'Wiedźma Hordy',\n    id: 'HordeCrone',\n    health: 60,\n    difficulty: 6,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Depths',\n    name: 'Nym',\n    id: 'Nym',\n    mageTitle: 'Nowicjusz Magii Bram',\n    ability: `\n        <h2>Ostateczna Bariera</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Odrzuć wierzchnią kartę z talii Nemezis.</p>\n        <p>W przypadku odrzucenia karty Ataku, odrzuć dodatkową kartę.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Spopielenie',\n        expansion: 'Depths',\n        id: 'Cinder',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.\n              <span class=\"or\">ALBO</span>\n              <b>Aktywacja:</b> Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: 'Reeve',\n    id: 'Reeve',\n    mageTitle: 'Elitarny Mag Bram',\n    ability: `\n        <h2>Rozrywające Ostrze</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Zadaj 5 obrażeń Poplecznikowi.</p>\n        <p>Zadaj 3 obrażenia innemu Poplecznikowi.</p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Obsydianu',\n        expansion: 'Depths',\n        id: 'ObsidianShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Możesz otrzymać 1 obrażenie. Jeżeli to zrobisz, otrzymujesz dodatkowe 2 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: 'Zhana',\n    id: 'Zhana',\n    mageTitle: 'Zbuntowana Magini Bram',\n    ability: `\n        <h2>Glif Strażniczy</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Gravehold otrzymuje 7 żywotności.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Wieczny Żar',\n        expansion: 'Depths',\n        id: 'EternalEmber',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.\n              <span class=\"or\">ALBO</span>\n              <b>Aktywacja:</b> Aktywuj jedno ze swoich przygotowanych Zaklęć bez odrzucania go.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Więź z Otchłanią',\n    id: 'VoidBond',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n      Możesz aktywować przygotowane Zaklęcie dowolnego gracza.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Seryjny Zapłon',\n    id: 'Combustion',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia Poplecznikowi.<br/>\n      Zadaj 2 obrażenia innemu Poplecznikowi albo Nemezis.<br/>\n      <span class=\"hint\">Efekty modyfikujące obrażenia, dotyczą obu przypadków obrażeń zadawanych przez to Zaklęcie.\n      </span>\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Dynamo Vim',\n    id: 'VimDynamo',\n    cost: 4,\n    effect: `\n      <p>\n        Otrzymujesz 1 obrażenie. Dowolny gracz dobiera dwie karty.\n          <span class=\"or\">ALBO</span>\n        Zniszcz tę kartę. Dowolny gracz otrzymuje 2 punkty życia i 1 Ładunek.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Kosa Dezintegracji',\n    id: 'DisintegratingScythe',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 8 obrażeń.<br/>\n        Otrzymujesz 1 obrażenie. Zamiast odrzucać tę kartę, zniszcz ją albo umieść na wierzchu stosu kart odrzuconych dowolnego gracza.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Piekielna Nawałnica',\n    id: 'MonstrousInferno',\n    cost: 8,\n    effect: `\n      <p>\n        To Zaklęcie musi być przygotowane na dwóch przylegających Bramach w taki sposób, aby karta dotykała obu Bram.<br/>\n        <b>Aktywacja:</b> Zadaj 7 obrażeń podzielonych w dowolny, wybrany przez ciebie sposób, pomiędzy Nemezis i dowolną liczbę Popleczników.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Pożerający Cień',\n    id: 'DevouringShadow',\n    cost: 6,\n    effect: `\n      <p>\n        Gdy przygotowane: raz na turę w trakcie swojej fazy głównej możesz zniszczyć kartę z ręki.<br/>\n        <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Depths',\n    name: 'Wypędzający Topaz',\n    id: 'BanishingTopaz',\n    cost: 5,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Możesz położyć dowolną kartę z ręki na wierzchu swojej talii. \n      Jeżeli to zrobisz, otrzymujesz dodatkowe 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Transmutator',\n    id: 'Transmogrifier',\n    cost: 4,\n    effect: `\n      <p>\n        Zniszcz kartę z ręki.<br/>\n        Możesz otrzymać kartę z dowolnego stosu zasobów, która kosztuje maksymalnie o \n        3 <span class=\"aether\">&AElig;</span> więcej niż zniszczona karta.\n      </p>\n        `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const legacyData: IExpansion = {\n  id: 'Legacy',\n  name: 'Legacy',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Legacy',\n    name: 'Z-Ostrzy-Zrodzony',\n    id: 'Bladius',\n    health: 40,\n    difficulty: 1,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Martwomyśl',\n    id: 'Deathmind',\n    health: 80,\n    difficulty: 6,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Pylak Amoku',\n    id: 'FungalMesh',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Odrodzone Wszechostrze',\n    id: 'MaelstromRisen',\n    health: 65,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: `\n        <p>\n          Podczas przygotowania, odejmij dwie podstawowe karty Nemezis każdego poziomu.\n        </p>\n      `,\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Patriarcha Kopca',\n    id: 'SpawningHorror',\n    health: 50,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Xaxos Przemieniony',\n    id: 'XaxosAscended',\n    health: 90,\n    difficulty: 9,\n    expeditionRating: 4,\n    additionalInfo: `\n        <p>\n          Podczas przygotowania, odejmij trzy podstawowe karty Nemezis każdego poziomu.\n        </p>\n      `,\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Green',\n    id: 'LegacyGreen',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    mageTitle: 'Custom',\n    uniqueStarters: [],\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Yellow',\n    id: 'LegacyYellow',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    uniqueStarters: [],\n    mageTitle: 'Custom',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Orange',\n    id: 'LegacyOrange',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    uniqueStarters: [],\n    mageTitle: 'Custom',\n  },\n  {\n    expansion: 'Legacy',\n    name: 'Legacy Blue',\n    id: 'LegacyBlue',\n    ability: 'Custom',\n    numberOfCharges: 'Custom',\n    uniqueStarters: [],\n    mageTitle: 'Custom',\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Promienny Radyt',\n    id: 'BranchingRadite',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. <br/>\n          Jeżeli masz 2 lub więcej przygotowanych Zaklęć, otrzymujesz dodatkowo 1 \n          <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Czakram Ognia',\n    id: 'FireChakram',\n    cost: 2,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Świetlisty Nóż',\n    id: 'BraneKnife',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 1 Ładunek. <br/>\n          Dowolny sojusznik wzmacnia swoją zamkniętą Bramę o najniższym koszcie wzmocnienia.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Tafla Pełni',\n    id: 'FulmiteSlab',\n    cost: 6,\n    effect: `\n        <p>\n          Otrzymujesz 1 <span class=\"aether\">&AElig;</span>. Otrzymujesz 2 Impulsy. <br/>\n          Do końca tury, możesz odrzucić 1 Impuls, aby otrzymać 1 <span class=\"aether\">&AElig;</span>. Możesz to zrobić dowolną liczbę razy.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Złocony Marmur',\n    id: 'GildedMarble',\n    cost: 6,\n    effect: `\n        <p>\n          Otrzymujesz 3 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Przekaźnik Napięcia',\n    id: 'VoltaicRelay',\n    cost: 4,\n    effect: `\n        <p>\n          Dowolny gracz otrzymuje 3 Impulsy. <br/>\n          Ten sam gracz może odrzucić 1 Impuls. Jeżeli to zrobi, niszczy kartę z ręki.\n        </p>\n      `,\n    keywords: ['strong', 'pulse'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Iskra Życia',\n    id: 'SparkingSiphon',\n    cost: 3,\n    effect: `\n        <p>\n          Gdy pozyskujesz tę kartę, otrzymujesz 2 Imulsy. <br/>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia. <br/>\n          Możesz odrzucić 1 Impuls. Jeżeli to zrobisz, dowolny gracz otrzymuje 1 punkt życia.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Jedność Bram',\n    id: 'BreachCommunion',\n    cost: 4,\n    effect: `\n        <p>\n          Gdy przygotowane: raz na turę, w swojej fazie głównej, możesz otrzymać 1 Impuls. <br/>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n          Możesz odrzucić 2 Impulsy. Jeżeli to zrobisz, zadaj 3 dodatkowe obrażenia.\n        </p>\n      `,\n    keywords: ['strong', 'pulse'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Piekielne Lustro',\n    id: 'InfernalMirror',\n    cost: 5,\n    effect: `\n        <p>\n          Dowolny sojusznik otrzymuje 1 Ładunek. Dowolny gracz otrzymuje 2 Impulsy.\n          Możesz odrzucić 2 Impulsy. Jeżeli to zrobisz, aktywuj przygotowane Zaklęcie dowolnego gracza. \n          To Zaklęcie zadaje 1 dodatkowe obrażenie.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Chowanica',\n    id: 'Geophage',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 1 <span class=\"aether\">&AElig;</span>. <br/>\n          Możesz zniszczyć Klejnot z ręki.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Transfuzja Mocy',\n    id: 'ForceTransfusion',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 3 obrażenia. <br/>\n          Jeżeli masz 3 lub więcej Ładunków, otrzymujesz 1 Ładunek.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Grys Przewodzący',\n    id: 'ConductiveGrit',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. Otrzymujesz 1 Impuls.\n          <span class=\"or\">ALBO</span>\n          Możesz odrzucić 1 Impuls. Jeżeli to zrobisz, otrzymujesz 3\n          <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Starożytny Cyjanolit',\n    id: 'AncientCyanolith',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Eteryczna Ręka',\n    id: 'EtherealHand',\n    cost: 6,\n    effect: `\n        <p>\n          Dowolny sojusznik dobiera dwie karty.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Zakrzywiony Promień',\n    id: 'BendingBeam',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Ąktywacja:</b> Zadaj 2 obrażenia. <br/>\n          Jeżeli to Zaklęcie zostało aktywowane na otwartej Bramie III, \n          zadaj 3 dodatkowe obrażenia.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Splątany Okruch',\n    id: 'EntangledShard',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. Jeżeli masz 3 lub więcej Ładunków,\n          otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Tajemna Salwa',\n    id: 'ArcaneSalvo',\n    cost: 5,\n    effect: `\n        <p>\n          Gdy przygotowane: raz na turę, w swojej fazie głównej,\n          możesz umieścić Artefakt zagrany w tej turze lub Artefakt z twojego stosu kart odrzuconych,\n          na wierzchu swojej talii. <br/>\n          <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Fasetkowy Portalit',\n    id: 'PhasedPortalite',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. Jeżeli\n          twoja Brama III jest otwarta otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Pyrowidmo',\n    id: 'PyroGeist',\n    cost: 6,\n    effect: `\n        <p>\n          Gdy przygotowujesz to Zaklęcie, zadaj 1 obrażenie. <br/>\n          <b>Aktywacja:</b> Zadaj 1 obrażenie. Zadaj 2 obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Rozbłysk Bram',\n    id: 'BreachFlare',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia. <br/>\n          Wzmocnij Bramę III dowolnego gracza.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Przysięga Grzmotu',\n    id: 'ThunderousOath',\n    cost: 8,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 6 obrażeń.<br/> \n          Otrzymujesz 1 Impuls.<br/>\n          Możesz odrzucić dowolną liczbę Impulsów. Jeżeli to zrobisz, \n          dowolny sojusznik dobiera karty w liczbie odrzuconych w ten sposób Impulsów.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Oszałamiający Torporen',\n    id: 'SoothingTorporene',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">ALBO</span>\n          Ucisz Poplecznika.\n        </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Krzemień Łukowy',\n    id: 'ArcingSilicate',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. Otrzymujesz 1 Impuls. <br/>\n          Możesz odrzucić dowolną liczbę Impulsów. Zadaj obrażenia w liczbie równej liczbie\n          odrzuconych w ten sposób Impulsów.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Mglisty Wir',\n    id: 'WarpingHaze',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia. <br/>\n          Jeżeli masz dwa lub więcej innych przygotowanych Zaklęć, zadaj 1 dodatkowe obrażenie.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Spopielająca Pięść',\n    id: 'IncineratingFist',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Stabilizator Rzeczywistości',\n    id: 'RealityStabilizer',\n    cost: 6,\n    effect: `\n        <p>\n          Otrzymujesz 2 Ładunki. <br/>\n          Ucisz Poplecznika.\n        </p>\n      `,\n    keywords: ['silence'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Koniunkcja Bram',\n    id: 'BreachCollision',\n    cost: 7,\n    effect: `\n        <p>\n          Gdy pozyskujesz to Zaklęcie, możesz umieścić je na wierzchu stosu kart odrzuconych dowolnego gracza. <br/>\n          <b>Aktywacja:</b> Zadaj 5 obrażeń. <br/>\n          Gravehold otrzymuje 1 żywotności.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Ogniste Rozstrzygnięcie',\n    id: 'FieryConclusion',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 4 obrażenia.<br/>\n          Jeżeli co najmniej trzy stosy na rynku zasobów są puste, zadaj 3 dodatkowe obrażenia.\n        </p>\n      `,\n    keywords: ['strong'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Gwiezdny Szał',\n    id: 'StarfireFrenzy',\n    cost: 6,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 4 obrażenia.<br/>\n          Możesz odrzucić Zaklęcie z ręki. Jeżeli to zrobisz, zadajesz 1 dodatkowe obrażenie oraz otrzymujesz 1 Ładunek.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Krzucha Mieszanka',\n    id: 'CrumblingCompound',\n    cost: 5,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. Możesz odrzucić\n          Klejnot z ręki. Jeżeli to zrobisz, otrzymujesz dodatkowo 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Prorocza Soczewka',\n    id: 'PropheticLens',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 1 Ładunek. <br/>\n          Odkryj wierzchnią kartę ze swojej talii. Możesz ją zniszczyć.\n          Jeżeli tego nie zrobisz, otrzymujesz 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['strong'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Akumulator Adrenalinowy',\n    id: 'AdrenalBatteries',\n    cost: 7,\n    effect: `\n        <p>\n          Otrzymujesz 2 Impulsy. Możesz odrzucić 4 Impulsy. Jeżeli to zrobisz, otwórz zamkniętą\n          Bramę dowolnego gracza. Następnie pozyskaj Zaklęcie z dowolnego stosu rynku zasobów o koszcie\n          5 <span class=\"aether\">&AElig;</span> lub mniejszym i przygotuj to Zaklęcie na otwartej Bramie dowolnego gracza.\n        </p>\n      `,\n    keywords: ['pulse', 'strong'],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Legacy',\n    name: 'Wytworny Lumen',\n    id: 'RefinedLumenium',\n    cost: 5,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>. <br/>\n          Dowolny sojusznik dobiera kartę.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Młyn Pustki',\n    id: 'VoidMill',\n    cost: 5,\n    effect: `\n        <p>\n          Wzmocnij Bramę dowolnego gracza. <br/>\n          Dwóch różnych graczy może zniszczyć wierzchnią kartę z własnych stosów kart odrzuconych.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Węzeł Grawitacyjny',\n    id: 'GravityNode',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Dowolny gracz odrzuca kartę z ręki. \n          Jeżeli to zrobi, zadaj 4 obrażenia.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Legacy',\n    name: 'Łącze neuronowe',\n    id: 'NeuralWreath',\n    cost: 4,\n    effect: `\n        <p>\n          Wzmocnij Bramę dowolnego gracza. Dowolny gracz może przygotować Zaklęcie z ręki.\n        </p>\n      `,\n    keywords: ['weak'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Legacy',\n    name: 'Sfera Inwersji',\n    id: 'SphereOfInversion',\n    cost: 9,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 7 obrażeń. <br/>\n          Dowolny sojusznik może zniszczyć kartę z ręki. Jeżeli to zrobi, otrzymuje 2 punkty życia.\n        </p>\n      `,\n    keywords: ['strong'],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Ambush-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Attack',\n    name: 'Zasadzka',\n    effect: `\n      <p>\n        Wyzwolenie. Gravehold otrzymuje 2 obrażenia. Dowolny gracz otrzymuje 1 obrażenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Conduct-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Attack',\n    name: 'Pułapka',\n    effect: `\n      <p>\n        Wyzwolenie. Gracz posiadający najwięcej Ładunków otrzymuje 2 obrażenia oraz Ładunek.\n      </p>\n    `,\n  },\n  {\n    id: 'CreepingCurse-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Power',\n    name: 'Pełzająca Klątwa',\n    power: 3,\n    effect: `\n      <p>\n        <b>Aby odrzucić:</b> Wydaj 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Moc 3:</b> Wyzwolenie. Dowolny gracz otrzymuje 2 obrażenia. Gracze wspólnie odrzucają dwie karty z ręki.\n      </p>\n    `,\n  },\n  {\n    id: 'Daze-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Attack',\n    name: 'Oszołomienie',\n    effect: `\n      <p>\n        Dowolny gracz otrzymuje 2 obrażenia oraz odrzuca kartę z ręki. Jeżeli odrzucona karta ma koszt 0 <span class=\"aether\">&AElig;</span>, Gravehold otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'EndlessChasm-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Power',\n    name: 'Nieskończona Przepaść',\n    power: 2,\n    effect: `\n      <p>\n        <b>Aby odrzucić:</b> Wydaj 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Moc 2:</b> Dwukrotne Wyzwolenie. Gravehold otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'AetherExtract-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Power',\n    name: 'Wyciąg z Eteru',\n    power: 2,\n    effect: `\n      <p>\n        <b>Moc 2:</b> Wyzwolenie. Dowolny gracz odrzuca dwa Klejnoty. Jeżeli obydwa z tych Klejnotów mają koszt 0 <span class=\"aether\">&AElig;</span>, następuje Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'RavenousLeviathan-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Minion',\n    name: 'Wygłodniały Lewiatan',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Trwały:</b> Gravehold otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'SpineThresher-Legacy',\n    expansion: 'Legacy',\n    tier: 1,\n    type: 'Minion',\n    name: 'Młocarniak',\n    shields: 3,\n    hp: 1,\n    effect: `\n      <p>\n        <b>Trwały:</b> Wyzwolenie. Dowolny gracz otrzymuje 1 obrażenie.\n      </p>\n    `,\n  },\n  {\n    id: 'CausticCocoon-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Minion',\n    name: 'Żrący Kokon',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Trwały:</b> Wyzwolenie. Gravehold otrzymuje 1 obrażenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Sap-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Attack',\n    name: 'Wycisk',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie. Dowolny gracz odrzuca 2 Ładunki.\n        <span class=\"or\">ALBO</span>\n        Dwukrotne Wyzwolenie. Dowolny gracz otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Tremor-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Power',\n    name: 'Wstrząsy',\n    power: 2,\n    effect: `\n      <p>\n        <b>Aby odrzucić:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Moc 2:</b> Dwukrotne Wyzwolenie. Gravehold otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Drain-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Attack',\n    name: 'Odsączenie',\n    effect: `\n      <p>\n        Wyzwolenie. Gravehold otrzymuje 2 obrażenia. Gracze wspólnie odrzucają dwa przygotowane Zaklęcia. Następnie, jeżeli którykolwiek gracz ma przygotowane Zaklęcie o koszcie 4 <span class=\"aether\">&AElig;</span> lub więcej, następuje Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'HummingHive-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Minion',\n    name: 'Buczący Ul',\n    shields: 3,\n    hp: 5,\n    effect: `\n      <p>\n        <b>Trwały:</b> Dowolny gracz otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Hunted-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Attack',\n    name: 'Wytropienie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie. Gracz z najmniejszą liczbą punktów życia otrzymuje 1 obrażenie.\n      </p>\n    `,\n  },\n  {\n    id: 'TemptingOffer-Legacy',\n    expansion: 'Legacy',\n    tier: 2,\n    type: 'Power',\n    name: 'Kusząca Propozycja',\n    power: 3,\n    effect: `\n      <p>\n        <b>Aby odrzucić:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Moc 3:</b> Dwukrotne Wyzwolenie. Gracz z najmniejszą liczbą punktów życia otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Annihilate-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Attack',\n    name: 'Anihilacja',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie. Gracz z najdroższą kartą na ręce odrzuca dwie karty z ręki. Następnie, za każdą kartę na ręce tego gracza, kosztującą 2 <span class=\"aether\">&AElig;</span> lub więcej, Gravehold otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'FacetOgre-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Minion',\n    name: 'Ludojad',\n    shields: 4,\n    hp: 1,\n    effect: `\n      <p>\n        <b>Trwały:</b> Gravehold otrzymuje tyle obrażeń, ile żetonów Tarcz ma na sobie ten Poplecznik. Jeżeli ten Poplecznik ma na sobie dwa lub mniej żetonów Tarcz, otrzymuje jeden żeton Tarczy.\n      </p>\n    `,\n  },\n  {\n    id: 'FlashofDecay-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Power',\n    name: 'Przebłysk Zgnilizny',\n    power: 2,\n    effect: `\n      <p>\n        <b>Moc 2:</b> Dwukrotne Wyzwolenie. Gracz z najdroższym przygotowanym Zaklęciem niszczy je. Jeżeli to zaklęcie kosztowało 4 <span class=\"aether\">&AElig;</span> lub mniej, lub żadne Zaklęcie nie zostało zniszczone, następuje Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'GatheringStorm-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Power',\n    name: 'Nadciągający Huragan',\n    power: 2,\n    effect: `\n      <p>\n        <b>Aby odrzucić:</b> Wydaj 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Moc 2:</b> Dwukrotne Wyzwolenie. Jeżeli na stosie odrzuconych kart tury znajdują się dwie karty Nemezis, dowolny gracz otrzymuje 4 obrażenia. W przeciwnym przypadku, Gravehold otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'MaddeningSpectre-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Minion',\n    name: 'Irytujące Widmo',\n    shields: 2,\n    hp: 7,\n    effect: `\n      <p>\n        <b>Trwały:</b> Dwukrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Scatter-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Attack',\n    name: 'Rozsianie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie. Dowolny gracz niszczy najdroższą kartę z ręki.\n      </p>\n    `,\n  },\n  {\n    id: 'Suffocate-Legacy',\n    expansion: 'Legacy',\n    tier: 3,\n    type: 'Attack',\n    name: 'Duszność',\n    effect: `\n      <p>\n        Trzykrotne Wyzwolenie.\n        <span class=\"or\">ALBO</span>\n        Gravehold otrzymuje 3 obrażenia oraz dowolny gracz otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theNamelessData: IExpansion = {\n  id: 'Nameless',\n  name: 'Bezimienni',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Władca Plagi',\n    id: 'BlightLord',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Nameless',\n    name: 'Marnotrawny',\n    id: 'WaywardOne',\n    health: 60,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Malastar',\n    id: 'Malastar',\n    mageTitle: 'Mentor Magów Bram',\n    ability: `\n        <h2>Dar Eteru</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Pozyskaj jedno Zaklęcie z dowolnego stosu zasobów. Możesz przygotować to Zaklęcie na otwartej Bramie dowolnego gracza.</p>\n      `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Samospalanie',\n        expansion: 'Nameless',\n        id: 'Immolate',\n        cost: 0,\n        effect: `\n            <p>\n              Gdy przygotowane: gdy otrzymujesz co najmniej 1 obrażenie, otrzymujesz 1 Ładunek.<br/>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Roztapiający Młot',\n    id: 'MoltenHammer',\n    cost: 5,\n    effect: `\n      <p>\n        Otrzymujesz 1 Ładunek.<br/>\n        Możesz zniszczyć kartę na ręce lub z wierzchu kart odrzuconych dowolnego gracza.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Luminacja',\n    id: 'Radiance',\n    cost: 8,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 5 obrażeń.<br/>\n      Każdy sojusznik dobiera kartę.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Płomień',\n    id: 'Blaze',\n    cost: 4,\n    effect: `\n      <p>\n        Gdy pozyskujesz tę kartę, możesz ją umieścić na wierzchu stosu kart odrzuconych dowolnego gracza.<br/>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n        Zadaj 1 dodatkowe obrażenie za każdą wcześniejszą swoją aktywację Płomienia w tej turze oraz za każdy inny Płomień, \n        który masz przygotowany.\n        </p>\n            `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Uderzenie Wróżby',\n    id: 'ScryingBolt',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 5 obrażeń.<br/>\n      Możesz stracić 1 Ładunek. Jeżeli się na to zdecydujesz, odkryj dwie wierzchnie karty z talii Nemezis. \n      Ułóż je z powrotem w dowolnej kolejności.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Piętno Mędrca',\n    id: 'SagesBrand',\n    cost: 7,\n    effect: `\n      <p>\n        To zaklęcie musi być przygotowane na dwóch przylegających Bramach w taki sposób, aby karta dotykała obu Bram. \n        Ta karta w pełni zajmuje obie Bramy.<br/>\n        Gdy przygotowane: podczas swojej fazy dobierania dobierz dodatkową kartę.<br/>\n        <b>Aktywacja:</b> Zadaj 6 obrażeń.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Nameless',\n    name: 'Wysysający Agat',\n    id: 'LeechingAgate',\n    cost: 3,\n    effect: `\n      <p>\n        Gdy pozyskujesz tę kartę, otrzymujesz 1 Ładunek.<br/>\n        Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Spirala Czasoprzestrzenna',\n    id: 'TemporalHelix',\n    cost: 7,\n    effect: `\n      <p>\n      Aktywuj przygotowane Zaklęcie dowolnego gracza bez odrzucania go.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const outerDarkData: IExpansion = {\n  id: 'OD',\n  name: 'Niezbadany Mrok',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'OD',\n    name: 'Trzykroć-Martwy Prorok',\n    id: 'ThriceDeadProphet',\n    health: 40,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'OD',\n    name: 'Snopijca',\n    id: 'Wraithmonger',\n    health: 70,\n    difficulty: 6,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'OD',\n    name: 'Indira',\n    id: 'Indira',\n    mageTitle: 'Pomocnik Magów Bram',\n    ability: `\n        <h2>Podstęp Piromanty</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Aktywuj dowolną liczbę Zaklęć z ręki. Każde z tych Zaklęć zadaje 1 dodatkowe obrażenie.</p>\n        <p>Możesz zniszczyć jedną kartę ze swojego stosu kart odrzuconych.</p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Bliźniaczy opal',\n        expansion: 'OD',\n        id: 'TwinOpal',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Możesz aktywować Zaklęcie z ręki.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'OD',\n    name: 'Remnant',\n    id: 'Remnant',\n    mageTitle: 'Stworzenie z Eteru',\n    ability: `\n        <h2>Efemeryczna Maska</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Dowolny sojusznik bierze z powrotem na rękę dwie karty ze swojego stosu kart odrzuconych.\n        <span class=\"or\">ALBO</span>\n        Gravehold otrzymuje 5 żywotności.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Otchłani',\n        expansion: 'OD',\n        id: 'VoidShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Otrzymujesz dodatkowy 1 <span class=\"aether\">&AElig;</span>, którego możesz użyć tylko do wzmocnienia \n              lub otwarcia Bramy.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Zwęglenie',\n    id: 'Char',\n    cost: 8,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 6 obrażeń.<br/>\n          Jeżeli te obrażenia spowodują odrzucenie Poplecznika, dowolny gracz otrzymuje 2 punkty życia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Obcy Pierwiastek',\n    id: 'AlienElement',\n    cost: 4,\n    effect: `\n        <p>\n          Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n          Za każdą twoją Bramę z przygotowanym na niej Zaklęciem otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Przypiekanie',\n    id: 'Scorch',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 4 obrażenia.<br/>\n          Jeżeli te obrażenia spowodują odrzucenie unikalnego Poplecznika z talii Nemezis, dowolny sojusznik otrzymuje 2 Ładunki.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Piromancja',\n    id: 'Pyromancy',\n    cost: 7,\n    effect: `\n        <b>Aktywacja:</b> Zadaj 1 obrażenie.<br/>\n        Sojusznicy mogą wspólnie odrzucić do dwóch kart z ręki. Za każdą odrzuconą w ten sposób kartę, zadaj 3 dodatkowe obrażenia.\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Aura Zwrotna',\n    id: 'FeedbackAura',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n          Jeżeli masz 4 lub więcej Ładunków, zadaj 3 dodatkowe obrażenia.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Katalizator',\n    id: 'Catalyst',\n    cost: 6,\n    effect: `\n        <p>\n          <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n          Jeżeli masz 2 lub mniej punktów życia, zadaj 5 dodatkowych obrażeń.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Kamień Bólu',\n    id: 'PainStone',\n    cost: 6,\n    effect: `\n        <p>\n          Otrzymaj 3 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">ALBO</span>\n          Otrzymaj 2 <span class=\"aether\">&AElig;</span> i zadaj 1 obrażenie.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'OD',\n    name: 'Astralny Sześcian',\n    id: 'AstralCube',\n    cost: 5,\n    effect: `\n        <p>\n          Weź z powrotem na rękę kartę Klejnotu, zagraną przez ciebie w tej turze.<br/>\n          Odkryj wierzchnią kartę z talii tur. Jeżeli odkryłeś kartę tury gracza, ten gracz otrzymuje 1 punkt życia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'OD',\n    name: 'Zagadkosfera',\n    id: 'RiddleSphere',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 1 Ładunek.\n          <span class=\"or\">ALBO</span>\n          Możesz stracić 2 Ładunki. Jeżeli to zrobisz, otrzymujesz 5 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Podziemna Więź',\n    id: 'NetherConduit',\n    cost: 7,\n    effect: `\n        <b>Aktywacja:</b> Odkryj kartę z ręki o koszcie 2 <span class=\"aether\">&AElig;</span> \n        lub więcej.<br/>\n        Jeżeli to zrobisz, zadaj tyle obrażeń, ile takich kart brakuje w ich stosie na rynku zasobów. \n        Następnie dowolny sojusznik może pozyskać kartę z tego stosu zasobów.<br/>\n        <span class=\"hint\">(Na początku gry stosy Klejnotów mają po 7 kart, a stosy Artefaktów i Zaklęć po 5 kart.)</span>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Skarabeusz w Bursztynie',\n    id: 'HauntedBerylite',\n    cost: 3,\n    effect: `\n        <p>\n          Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">ALBO</span>\n          Zniszcz kartę na swojej ręce.\n        </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'LabyrinthWisp-OD',\n    expansion: 'OD',\n    tier: 1,\n    type: 'Minion',\n    name: 'Kłąb Dymu',\n    hp: 5,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Dowolny gracz odrzuca przygotowane Zaklęcie.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Dowolny gracz traci 1 Ładunek.\n      </p>\n    `,\n  },\n  {\n    id: 'Assail-OD',\n    expansion: 'OD',\n    tier: 2,\n    type: 'Attack',\n    name: 'Napaść',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Gracz z najdroższym przygotowanym Zaklęciem odkłada to Zaklęcie na wierzch swojej talii.\n      </p>\n    `,\n  },\n  {\n    id: 'DireAbbatoir-OD',\n    expansion: 'OD',\n    tier: 3,\n    type: 'Power',\n    name: 'Straszliwa Rzeź',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Gracz z największą liczbą punktów życia otrzymuje obrażenia równe tej liczbie.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theVoidData: IExpansion = {\n  id: 'TV',\n  name: 'Otchłań',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'TV',\n    name: 'Rycerz Kajdan',\n    id: 'KnightOfShackles',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'TV',\n    name: 'Panna Cierni',\n    id: 'MaidenOfThorns',\n    health: 80,\n    difficulty: 4,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'TV',\n    name: 'Sparrow',\n    id: 'Sparrow',\n    mageTitle: 'Żołnierz Magów Bram',\n    ability: `\n        <h2>Niezwykła Więź</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Wzmocnij Bramę dowolnego gracza. Powtórz to jeszcze trzy razy.\n        <span class=\"or\">ALBO</span>\n        Dowolny sojusznik, który nie ma zamkniętych Bram, dobiera trzy karty, a następnie może przygotować do trzech Zaklęć ze swojej ręki.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Zarzewie',\n        expansion: 'TV',\n        id: 'Smolder',\n        cost: 0,\n        effect: `\n            <p>\n              To Zaklęcie może być przygotowane na zamkniętej bramie bez jej wzmocnienia.<br/>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'TV',\n    name: 'XaxosTV',\n    id: 'XaxosTV',\n    mageTitle: 'Siewca Pustki',\n    ability: `\n        <h2>Ochrona Poświata</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Dowolny sojusznik otrzymuje 1 Ładunek i odrzuca losową kartę z ręki. Wzmocnij jedną ze swoich Bram. Otrzymujesz 1 punkt życia. \n        Zniszcz kartę ze swojej ręki lub stosu kart odrzuconych.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Stos',\n        expansion: 'TV',\n        id: 'Pyre',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.<br/>\n              Dowolny sojusznik może odrzucić kartę z ręki. Jeżeli to zrobi, zadaj 2 dodatkowe obrażenia.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'TV',\n    name: 'Nawiedzony Beryl',\n    id: 'FossilizedScarab',\n    cost: 3,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">ALBO</span>\n      Odrzuć kartę z ręki. Jeżeli to zrobisz, otrzymujesz 2 Ładunki.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Termiczny Grot',\n    id: 'ThermalDart',\n    cost: 4,\n    effect: `\n      <p>\n      <b>WIĘŹ</b> <span class=\"hint\">(Dwa Zaklęcia z Więzią mogą być przygotowane na tej samej Bramie.)</span>\n      </p>\n      <p>\n      <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n      Jeżeli nie jest to pierwszy Termiczny Grot aktywowany przez ciebie w tej turze, otrzymujesz 1 Ładunek.\n        </p>\n      `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Rezonans',\n    id: 'Resonate',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 4 obrażenia.<br/>\n      Jeżeli w twoim stosie kart odrzuconych jest co najmniej 6 innych kart, zadaj 3 dodatkowe obrażenia.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Pożoga',\n    id: 'Conflagration',\n    cost: 3,\n    effect: `\n      <p>\n      <b>WIĘŹ</b> <span class=\"hint\">(Dwa Zaklęcia z Więzią mogą być przygotowane na tej samej Bramie.)</span>\n      </p>\n      <p>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n      Otrzymaj 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TV',\n    name: 'Klucz do Wymiarów',\n    id: 'DimensionalKey',\n    cost: 8,\n    effect: `\n      <p>\n      Dowolny sojusznik dobiera dwie karty.\n        <span class=\"or\">ALBO</span>\n      Zniszcz tę kartę. Otrzymujesz 1 obrażenie. Umieść kartę Nemezis, która jest w grze, na wierzchu talii Nemezis.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Wewnętrzny Żar',\n    id: 'InnerFire',\n    cost: 2,\n    effect: `\n      <p>\n        <b>WIĘŹ</b> <span class=\"hint\">(Dwa Zaklęcia z Więzią mogą być przygotowane na tej samej Bramie.)</span>\n      </p>\n      <p>\n        <b>Aktywacja:</b> Zadaj 1 obrażenie.<br/>\n        Jeżeli rząd kart Nemezis jest wyższy niż 1, zadaj 1 dodatkowe obrażenie.\n        </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Ognisty piorun',\n    id: 'Fulminate',\n    cost: 5,\n    effect: `\n      <p>\n      Gdy przygotowane: pozostałe aktywowane przez ciebie Zaklęcia zadają 1 dodatkowe obrażenie.\n      </p>\n      <p>\n      <b>WIĘŹ</b> <span class=\"hint\">(Dwa Zaklęcia z Więzią mogą być przygotowane na tej samej Bramie.)</span>\n      </p>  \n      <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TV',\n    name: 'Powab Wieczności',\n    id: 'EternityCharm',\n    cost: 3,\n    effect: `\n      <p>\n        Wzmocnij swoją zamkniętą Bramę o najniższym koszcie wzmocnienia. Odkryj trzy karty z wierzchu wojej talii. \n        Możesz przygotować jedno z odkrytych Zaklęć.\n      </p>\n        `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const warEternalData: IExpansion = {\n  id: 'WE',\n  name: 'Wieczna Wojna',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'WE',\n    name: 'Megiera Bram',\n    id: 'GateWitch',\n    health: 70,\n    difficulty: 7,\n    expeditionRating: 4,\n    additionalInfo: `\n        <p>\n          Gdy Megiera Bram przyspiesza przepływ czasu, \n          traci trzy żetony Nemezis zamiast czterech.\n        </p>\n      `,\n  },\n  {\n    expansion: 'WE',\n    name: 'Pani Pustej Korony',\n    id: 'HollowCrown',\n    health: 1,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Arcymag Zasłony',\n    id: 'MagusOfCloaks',\n    health: 35,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Mroczny Tytan',\n    id: 'UmbraTitan',\n    health: 70,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'WE',\n    name: 'Dezmodia',\n    id: 'Dezmodia',\n    mageTitle: 'Zrodzona z Otchłani',\n    ability: `\n        <h2>Runiczna Nawałnica</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Dowolny gracz niszczy swoją otwartą Bramę I lub II i bierze z powrotem na rękę Zaklęcie lub Zaklęcia, \n        jeżeli były na niej przygotowane. Ten gracz otrzymuje Bramę Runiczną i umieszcza ją w miejscu zniszczonej Bramy. \n        Następnie może przygotować na dowolnej Bramie Zaklęcie z ręki.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Strzęp Zapomnienia',\n        expansion: 'WE',\n        id: 'OblivionShared',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 2 <span class=\"aether\">&AElig;</span>który nie może zostać wykorzystany do pozyskania Artefaktu lub Zaklęcia.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Garu',\n    id: 'Garu',\n    mageTitle: 'Zaprzysiężony Obrońca',\n    ability: `\n        <h2>Kolosalna Siła</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Odrzuć do czterech ze swoich przygotowanych Zaklęć.</p>\n        <p>Zadaj 2 obrażenia plus dodatkowe 4 obrażenia za każde odrzucone Zaklęcie. \n        Rozdziel te obrażenia dowolnie pomiędzy Nemezis i Popleczników.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Pochodnia',\n        expansion: 'WE',\n        id: 'Torch',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.\n              <span class=\"or\">ALBO</span>\n              <b>Aktywacja:</b> Wzmocnij bramę dowolnego gracza.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Gex',\n    id: 'Gex',\n    mageTitle: 'Doradca Magów Bram',\n    ability: `\n        <h2>Rzemieślniczy etos</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Zniszcz do dwóch kart o koszcie 0 <span class=\"aether\">&AElig;</span> ze swojego stosu kart odrzuconych.</p>\n        <p>Dowolny sojusznik dobiera jedną kartę i otrzymuje 2 punkty życia.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Rozbita Geoda',\n        expansion: 'WE',\n        id: 'ShatteredGeode',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Możesz wziąć na rękę wierzchnią kartę ze stosu kart odrzuconych dowolnego sojusznika.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Mazahaedron',\n    id: 'Mazahaedron',\n    mageTitle: 'Mistyk Kamiennego Kręgu',\n    ability: `\n        <h2>Podziemna Mantra</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Możesz pozyskać Klejnot o koszcie 4 <span class=\"aether\">&AElig;</span> lub \n        mniejszym z dowolnego stosu zasobów.</p>\n        <p>Gravehold otrzymuje 4 żywotności.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Serca Świata',\n        expansion: 'WE',\n        id: 'WorldheartShard',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">ALBO</span>\n              Otrzymujesz 2 <span class=\"aether\">&AElig;</span>, który może zostać wykorzystany wyłącznie do pozyskania karty. \n              Umieść następną kartę, którą pozyskasz w tej turze, na wierzchu stosu kart odrzuconych dowolnego sojusznika.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'MistWE',\n    id: 'MistWE',\n    mageTitle: 'Krocząca Przez Otchłań',\n    ability: `\n        <h2>Piętno odmienności</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Aktywuj do trzech różnych Zaklęć przygotowanych przez dowolnych graczy. \n        Każde z tych aktywowanych Zaklęć umieść na ręce dowolnego sojusznika lub sojuszników.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Ametystowa Perfekcja',\n        expansion: 'WE',\n        id: 'AmethystParagon',\n        cost: 0,\n        effect: `\n            <p>\n              Otrzymujesz 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Dowolny sojusznik może przygotować Zaklęcie z ręki na swojej otwartej lub zamkniętej Bramie/Bramach.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Quilius',\n    id: 'Quilius',\n    mageTitle: 'Zabójczyni Magów Bram',\n    ability: `\n        <h2>Śmiercionośna Przysięga</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Zadaj 2 obrażenia za każdy żeton Trofeum, który posiadasz.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Wygaszenie',\n        expansion: 'WE',\n        id: 'Extinguish',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.<br/>\n              Jeżeli to obrażenie spowoduje, że Poplecznik z talii Nemezis zostanie odrzucony, Quilius otrzymuje żeton Trofeum.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Ulgimor',\n    id: 'Ulgimor',\n    mageTitle: 'Cienista Bestia',\n    ability: `\n        <h2>Upiorny Całun</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Odzyskujesz 6 punktów życia.</p>\n        <p>Jeżeli jesteś wyczerpany, zamiast ciebie dowolny sojusznik odzyskuje 5 punktów życia.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Odłamek Węgla',\n        expansion: 'WE',\n        id: 'CoalShard',\n        cost: 0,\n        effect: `\n            <p>\n              Jeżeli masz co najwyżej 2 punkty życia, zniszcz tę kartę. W przeciwnym wypadku, otrzymujesz  \n              3 <span class=\"aether\">&AElig;</span>, 1 Ładunek i 2 obrażenia.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Yan Magda',\n    id: 'YanMagda',\n    mageTitle: 'Oświecony Wygnaniec',\n    ability: `\n        <h2>Cesarski Rytuał</h2>\n        <p class=\"ability-activation\">Użyj podczas swojej fazy głównej:</p>\n        <p>Pozyskaj kartę z dowolnego stosu zasobów. Jeżeli masz cztery otwarte Bramy, dowolny sojusznik pozyskuje kartę \n        z dowolnego stosu zasobów i umieszcza ją na wierzchu swojej talii.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Rozblask',\n        expansion: 'WE',\n        id: 'Illuminate',\n        cost: 0,\n        effect: `\n            <p>\n              Gdy przygotowane: za każdym razem gdy wzmacniasz lub otwierasz jedną ze swoich Bram w trakcie swojej tury, zadaj 1 obrażenie.<br/>\n              <b>Aktywacja:</b> Zadaj 1 obrażenie.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Nieregularny Monokryształ',\n    id: 'ErraticIngot',\n    cost: 5,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Otrzymujesz dodatkowe 2 <span class=\"aether\">&AElig;</span> jeżeli w stosie odrzuconych kart tur \n      jest przynajmniej jedna karta tury Nemezis.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Spopielające Cienie',\n    id: 'ReduceToAsh',\n    cost: 7,\n    effect: `\n      <p>\n      Gdy przygotowane: na początku swojej fazy aktywacji odkryj wierzchnią kartę swojej talii. \n      Możesz zniszczyć odkrytą kartę.<br/>\n        <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Rękawica Wiru Magii',\n    id: 'VortexGauntlet',\n    cost: 6,\n    effect: `\n      <p>\n      Aktywuj przygotowane Zaklęcie dowolnego gracza.<br/>\n      Zwróć to Zaklęcie na rękę tego gracza.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Zwęglenie',\n    id: 'Carbonize',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n      Odkryj wierzchnią kartę talii tur. Możesz umieścić tę kartę na spodzie talii tur.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Equilibrium',\n    id: 'Equilibrium',\n    cost: 7,\n    effect: `\n      <p>\n      Gdy przygotowane: za każdym razem gdy otrzymujesz obrażenia obniżasz je o 1 (do minimum 1).<br/>\n        <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Szkło Wulkaniczne',\n    id: 'VolcanicGlass',\n    cost: 3,\n    effect: `\n      <p>\n      Kiedy pozyskujesz tę kartę w swojej turze, możesz wydać 2 <span class=\"aether\">&AElig;</span>. \n      Jeżeli to zrobisz, dowolny sojusznik także pozyskuje Szkło Wulkaniczne i umieszcza je na wierzchu swojej talii.<br/>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Sfera Konwekcji',\n    id: 'ConvectionField',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        <span class=\"or\">ALBO</span>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia. Dowolny sojusznik może zniszczyć kartę z ręki.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Postrzępiona Błyskawica',\n    id: 'JaggedLightning',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n      Możesz odrzucić kartę z ręki. Jeżeli to zrobisz, dowolny gracz wzmacnia swoją zamkniętą Bramę o najniższym koszcie.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Krwawy Klejnot',\n    id: 'BloodstoneJewel',\n    cost: 6,\n    effect: `\n      <p>\n      Kiedy pozyskujesz Krwawy Klejnot po raz PIERWSZY w swojej turze, otrzymujesz 3 <span class=\"aether\">&AElig;</span>. <br/>\n      Otrzymujesz 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Iskrzenie',\n    id: 'Kindle',\n    cost: 4,\n    effect: `\n      <p>\n      Gdy przygotowane: podczas swojej fazy głównej możesz także przygotować jedną Iskrę na Bramie, na której to Iskrzenie.<br/>\n        <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Myślokształtny Chowaniec',\n    id: 'ThoughtformFamiliar',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n      Zadaj 1 dodatkowe obrażenie za każde inne twoje przygotowane Zaklęcie.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Krystalizacja',\n    id: 'Crystallize',\n    cost: 8,\n    effect: `\n      <p>\n      To Zaklęcie musi być przygotowane na dwóch sąsiadujących Bramach w taki sposób, \n      aby karta dotykała obu Bram. Ta karta w pełni zajmuje obie Bramy.<br/>\n      <b>Aktywacja:</b> Dowolny sojusznik odkrywa swoje karty na ręku.<br/>\n      Zadaj 2 obrażenia za każdy Klejnot na ręce tego sojusznika.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Ognisty Szturm',\n    id: 'FieryTorrent',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n      Zadaj dodatkowe 2 obrażenia za każdy inny Ognisty Szturm przygotowany przez dowolnego gracza.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Iglica Świętego Ognia',\n    id: 'CelestialSpire',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 3 obrażenia.<br/>\n      Jeżeli stos zasobów tej karty jest pusty, dowolny sojusznik dobiera kartę.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Przywołanie Zagubionych Dusz',\n    id: 'ConjureTheLost',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 5 obrażeń.<br/>\n      Możesz zniszczyć tę kartę. Jeżeli to zrobisz, Gravehold otrzymuje 4 żywotności.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Kuźnia Energetyczna',\n    id: 'NovaForge',\n    cost: 6,\n    effect: `\n      <p>\n      Gdy przygotowane: raz na turę podczas swojej fazy głównej możesz otrzymać 2 \n      <span class=\"aether\">&AElig;</span>, które możesz użyć tylko, aby pozyskać Zaklęcie.<br/>\n        <b>Aktywacja:</b> Zadaj 4 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Brylant Grozy',\n    id: 'DreadDiamond',\n    cost: 3,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Możesz odrzucić przygotowane zaklęcie. Jeżeli to zrobisz otrzymujesz dodatkowy 1  \n      <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Kompas z Kamiennego Kręgu',\n    id: 'CairnCompass',\n    cost: 4,\n    effect: `\n      <p>\n      Dowolny sojusznik może przygotować Zaklęcie ze swojego stosu kart odrzuconych na swojej otwartej \n      lub zamkniętej Bramie/Bramach.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Szlaka Skorii',\n    id: 'ScoriaSlag',\n    cost: 4,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Jeżeli rząd kart Nemezis jest wyższy niż 1, otrzymujesz dodatkowo 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Ruda Bram',\n    id: 'BreachOre',\n    cost: 4,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      <span class=\"or\">ALBO</span>\n      Wzmocnij swoją zamkniętą bramę o najniższym koszcie wzmocnienia.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Bestiołap',\n    id: 'FiendCatcher',\n    cost: 3,\n    effect: `\n      <p>\n      Możesz zniszczyć jedną kartę ze swojej ręki lub stosu kart odrzuconych.<br/>\n      Odkryj wierzchnią kartę talii tur. Jeżeli odkryłeś kartę tury Nemezis, możesz umieścić tę kartę na spodzie talii tur.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Fala Pirotechniczna',\n    id: 'PyrotechnicSurge',\n    cost: 4,\n    effect: `\n      <p>\n      To Zaklęcie musi być przygotowane na dwóch sąsiadujących Bramach w taki sposób, \n      aby karta dotykała obu Bram. Ta karta w pełni zajmuje obie Bramy.<br/>\n      <b>Aktywacja:</b> Zadaj 4 obrażenia.<br/>\n      Możesz zniszczyć kartę ze swojego stosu kart odrzuconych.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Zorza',\n    id: 'Aurora',\n    cost: 5,\n    effect: `\n      <p>\n      Gdy przygotowane: raz na turę w trakcie swojej fazy głównej możesz otrzymać 1 Ładunek.<br/>\n        <b>Aktywacja:</b> Zadaj 3 obrażenia.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Zwój Konklawe',\n    id: 'ConclaveScroll',\n    cost: 3,\n    effect: `\n      <p>\n      Otrzymujesz 1 Ładunek.<br/>\n      Jeżeli stos zasobów tej kart jest pusty, możesz zniszczyć wierzchnią kartę stosu kart odrzuconych dowolnego sojusznika.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Pierwotny Fetysz',\n    id: 'PrimordialFetish',\n    cost: 4,\n    effect: `\n      <p>\n      Wzmocnij Bramę dowolnego gracza.\n        <span class=\"or\">ALBO</span>\n      Zniszcz tę kartę. Otrzymujesz 3 punkty życia.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Zamarznięty Melafir',\n    id: 'FrozenMagmite',\n    cost: 3,\n    effect: `\n      <p>\n      Otrzymujesz 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Następną kartę, którą pozyskasz w tej turze, możesz położyć na wierzchu swojej talii.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Totem Maga',\n    id: 'MagesTotem',\n    cost: 2,\n    effect: `\n      <p>\n      Zniszcz Klejnot lub Artefakt, który zagrałeś w tej turze.\n        <span class=\"or\">ALBO</span>\n      Zniszcz tę kartę. Gravehold otrzymuje 1 żywotności.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Afflict-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Dokuczliwy Dotyk',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Dowolny gracz otrzymuje 3 obrażenia i może dobrać na rękę kartę ze swojego stosu kart odrzuconych.\n      </p>\n    `,\n  },\n  {\n    id: 'CatacombDrone-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Robotnica z Katakumb',\n    hp: 5,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Wyzwolenie. Gravehold otrzymuje 1 obrażenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Encroach-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Wtargnięcie',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Odkryj wierzchnią kartę talii tur. Jeżeli odkryta została karta tury gracza, ten gracz otrzymuje 2 obrażenia. W innym przypadku, \n        Gravehold otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'HeartofNothing-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Serce Nicości',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Odrzuć cztery karty z ręki.<br />\n        <br />\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Dowolny gracz otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'HowlingSpinners-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Wijący Tkacze',\n    hp: 5,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Dowolny gracz otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'NightUnending-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Niekończąca się noc',\n    power: 3,\n    effect: `\n      <p>\n        <b>MOC 3:</b> Gravehold otrzymuje 2 obrażenia za każde Zaklęcie przygotowane przez gracza, który ma najwięcej przygotowanych Zaklęć.\n      </p>\n    `,\n  },\n  {\n    id: 'Nix-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Wykończenie',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Dowolny gracz otrzymuje 1 obrażenie i odrzuca z ręki kartę o najwyższej wartości.\n      </p>\n    `,\n  },\n  {\n    id: 'PlanarCollision-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Kolizja Planarna',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Odrzuć dwa przygotowane Zaklęcia.<br />\n        <br />\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Thrash-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Młócka',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Gracze wspólnie odrzucają 2 karty z ręki.\n      </p>\n    `,\n  },\n  {\n    id: 'AphoticSun-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Posępne Słońce',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Wyzwolenie. Gracz posiadający najwięcej Ładunków otrzymuje 3 obrażenia i traci wszystkie swoje Ładunki.\n      </p>\n    `,\n  },\n  {\n    id: 'ChaosFlail-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Kiścień Chaosu',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie. Dowolny gracz umieszcza swój stos kart odrzuconych na wierzchu swojej talii po czym ją tasuje.\n        Następnie ten gracz odkrywa dwie wierzchnie karty swojej talii i niszczy najdroższą z odkrytych kart.\n      </p>\n    `,\n  },\n  {\n    id: 'MageEnder-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Zabójca Magów',\n    hp: 9,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Gracz z największą liczbą otwartych Bram otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Mangleroot-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Rozrywokrzew',\n    hp: 12,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Gravehold otrzymuje 3 obrażenia. Ten Poplecznik otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'MorbidGyre-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Makabryczny Wir',\n    power: 1,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 1:</b> Dwukrotne Wyzwolenie. Gracze wspólnie odrzucają 3 karty z ręki.\n      </p>\n    `,\n  },\n  {\n    id: 'Mutilate-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Okaleczenie',\n    effect: `\n      <p>\n        Wyzwolenie.<br />\n        <br />\n        Gracze wspólnie odrzucają 2 przygotowane Zaklęcia. Dowolny gracz otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'NullScion-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Potomek Nicości',\n    hp: 11,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Smite-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Porażenie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Gravehold otrzymuje 2 obrażenia.\n      </p>\n    `,\n  },\n\n  {\n    id: 'ApocalypseRitual-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Rytuał Apokalipsy',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Gravehold otrzymuje 5 obrażeń za każdą kartę tury Nemezis w stosie odrzuconych kart tur.\n      </p>\n    `,\n  },\n  {\n    id: 'Banish-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Wygnanie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Gracz z największą liczbą przygotowanych Zaklęć otrzymuje po 1 obrażeniu za każde z nich.\n      </p>\n    `,\n  },\n  {\n    id: 'CataclysmicFate-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Skazanie na Zagładę',\n    power: 1,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Zniszcz przygotowane Zaklęcie o koszcie 5 lub więcej <span class=\"aether\">&AElig;</span> oraz Bramę, \n        na której było ono przygotowane.<br />\n        <br />\n        <b>MOC 1:</b> Gracz z najmniejszą liczbą punktów życia otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'MonstrosityofOmens-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Abominacja Omenów',\n    shields: 5,\n    hp: 0,\n    effect: `\n      <p>\n        Wartość obrażeń zadawanych temu Poplecznikowi jest obniżana do 1 obrażenia.<br />\n        <br />\n        <b>TRWAŁY:</b> Gravehold otrzymuje obrażenia w liczbie równej aktualnej liczbie punktów życia tego Poplecznika.\n      </p>\n    `,\n  },\n  {\n    id: 'Engulf-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Przytłoczenie',\n    effect: `\n      <p>\n        Rozpatrz ponownie ostatnią odrzuconą kartę Ataku ze stosu kart odrzuconych Nemezis.\n      </p>\n    `,\n  },\n  {\n    id: 'Quell-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Stłamszenie',\n    effect: `\n      <p>\n        Gravehold otrzymuje 7 obrażeń.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Trzykrotne Wyzwolenie.\n      </p>\n    `,\n  },\n  {\n    id: 'Throttle-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Przyduszenie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Dowolny gracz niszczy trzy karty o najwyższej wartości, które ma na ręce.\n      </p>\n    `,\n  },\n  {\n    id: 'WitheringBeam-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Promień Uwiądu',\n    power: 2,\n    effect: `\n      <p>\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie. Gracze wspólnie niszczą 2 przygotowane Zaklęcia o najwyższej wartości.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const promosData: IExpansion = {\n  id: 'promos',\n  name: 'Promos',\n  type: 'promo',\n  mages,\n  nemeses,\n  cards,\n  treasures,\n  basicNemesisCards,\n}\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Utonięcie w Płomieniach',\n    id: 'DrownInFlames',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 4 obrażenia Poplecznikowi lub Nemezis.<br/>\n        Możesz odrzucić 2 Ładunki, aby wykonać to ponownie.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Przelotna Wizja',\n    id: 'FleetingVision',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 2 obrażenia.<br/>\n      Każdy gracz może odkryć 2 karty z wierzchu swojej talii i odrzucić lub odłożyć z powrotem każdą z nich.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Magiczny Pocisk',\n    id: 'SplinterMissile',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Aktywacja:</b> Zadaj 4 obrażenia.<br/>\n      Dowolny sojusznik może odrzucić kartę z ręki. Jeżeli to zrobi, podziel te obrażenia dowolnie pomiędzy\n      Nemezis i dowolną liczbę Popleczników.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Echo Kryształ',\n    id: 'EchoStone',\n    cost: 4,\n    effect: `\n      <p>\n      Otrzymaj 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Jeżeli zagrałeś inny Echo Kryształ w tej turze, otrzymujesz dodatkowo\n      1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Thieving Spirit',\n    id: 'ThievingSpirit',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br/>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Fractured Quartz',\n    id: 'FracturedQuartz',\n    cost: 4,\n    effect: `\n      <p>\n      Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n      You may destroy two cards in this card's supply pile. If you do, \n      gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Rock Launcher',\n    id: 'RockLauncher',\n    cost: 3,\n    effect: `\n      <p>\n      Discard or destroy a card in hand. If you do, deal damage equal to its cost.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Abacus of Ignition',\n    id: 'AbacusOfIgnition',\n    cost: 4,\n    effect: `\n      <p>\n      You may casdt any ally's prepped spell.<br/>\n      Any ally draws a card.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Illuminating Flame',\n    id: 'IlluminatingFlame',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 5 damage.<br/>\n      If this was cast from an opened III or IV breach, you may destroy this.\n        If you do, gain 3 charges.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Chronal Arc',\n    id: 'ChronalArc',\n    cost: 7,\n    effect: `\n      <p>\n        This spell must be prepped to two adjacent breaches so that this card \n        touches both breaches. This fully occupies both breaches.<br/>\n        <b>Cast:</b> Deal 4 damage.<br/>\n        You may place this card into your hand.\n        </p>\n        `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'ReevesRavenShard',\n    name: \"Reeve's RavenShard\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n      Gain 1 <span class=\"aether\">&AElig;</span>. You may discard a card in \n      hand. If you do, gain and additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'NymsVision',\n    name: \"Nym's Vision\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Reveal the top card of the nemesis deck. If you revealed an attack, gain \n      2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n  },\n  {\n    id: 'SparrowsAid',\n    name: \"Sparrow's Aid\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n      <b>Cast:</b> Deal 1 damage.<br/>\n      Any ally may prep a spell in hand to their opened or closed breach(es).\n      </p>\n      `,\n  },\n  {\n    id: 'WraithsEssence',\n    name: \"Wraith's Essence\",\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n      When a player becomse exhausted, do not resolve any on-exhaust effects.<br/>\n      <br/>\n      The players do not lose when all players are exhausted.\n      </p>\n      `,\n  },\n  {\n    id: 'VolatileClasp',\n    name: 'Volatile Clasp',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n      When you play a relic that costs 4 <span class=\"aether\">&AElig;</span> \n      or more, any ally gains 1 charge.\n      </p>\n      `,\n  },\n  {\n    id: 'BreachStabilizer',\n    name: 'Breach Stabilizer',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n      Any number of Sparks mya be prepped to your I breach.\n      </p>\n      `,\n  },\n  {\n    id: 'FangedChoker',\n    name: 'Fanged Choker',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n      At the end of your draw phase, if the total cost of spells in your hand \n      is 6 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n      `,\n  },\n  {\n    id: 'EndlessBandolier',\n    name: 'Endless Bandolier',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n      Once per turn during your main phase you may discard a card in hand. \n      If you do, deal 1 damage and gain 1 charge.\n      </p>\n      `,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Menace-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Zmora',\n    effect: `\n      <p>\n        Gracze wspólnie odrzucają cztery karty.\n      </p>\n    `,\n  },\n  {\n    id: 'GlyphEnigma-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Glif-Pułapka',\n    hp: 7,\n    effect: `\n      <p>\n        <b>TRWAŁY:</b> Gravehod otrzymuje 1 obrażenie. Jeżeli ostatnia dobrana karta Nemezis była drugiego rzędu, lub wyższego, \n        Gravehold otrzymuje dodatkowo 2 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'GravitySplinter-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Ułamek Grawitacji',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie. Gracz z najmniejszą liczbą otwartych Bram otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'WorldPurge-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Power',\n    name: 'Oczyszczenie Świata',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Wydaj 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>MOC 2:</b> Trzykrotne wyzwolenie.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Gravehold otrzymuje 7 obrażeń.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Bane Sire',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'Decimate-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Zdziesiątkowanie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie. Dowolny gracz otrzymuje 2 Ładunki.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Gravehold otrzymuje 4 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'SpiritCage-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    name: 'Cela Duszy',\n    power: 3,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Odrzuć z ręki kartę kosztującą 5 <span class=\"aether\">&AElig;</span> lub więcej.<br />\n        <br />\n        <b>MOC 3:</b> Dwukrotne Wyzwolenie. Dowolny gracz odrzuca z ręki kartę Zaklęcia.\n      </p>\n    `,\n  },\n  {\n    id: 'BanefulCrux-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Sedno Zguby',\n    power: 2,\n    effect: `\n      <p>\n        <b>ABY ODRZUCIĆ:</b> Odrzuć z ręki dwie karty, z których każda kosztuje 4 <span class=\"aether\">&AElig;</span> lub więcej.<br />\n        <br />\n        <b>MOC 2:</b> Dwukrotne Wyzwolenie. Gravehold otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Negate-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    name: 'Negacja',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Dowolny gracz niszczy najdroższą kartę na ręce.<br />\n        <br />\n        <span class=\"or\">ALBO</span><br />\n        <br />\n        Dwukrotne Wyzwolenie. Gravehold otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Gallowskulk-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Minion',\n    name: 'Skrytoszkielet',\n    hp: 10,\n    effect: `\n      <p>\n      <b>TRWAŁY:</b> Gracz z najmniejszą liczbą punktów życia otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n  {\n    id: 'Unmake-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Attack',\n    name: 'Zniszczenie',\n    effect: `\n      <p>\n        Dwukrotne Wyzwolenie.<br />\n        <br />\n        Dowolny gracz niszczy trzy wierzchnie karty ze swojej talii i otrzymuje 3 obrażenia.\n      </p>\n    `,\n  },\n]\n","import { IExpansionData } from '../../../aer-types/types'\n\nimport { aeonsEndData } from './aeonsEnd'\nimport { outerDarkData } from './outerDark'\nimport { promosData } from './promos'\nimport { theDepthsData } from './theDepths'\nimport { theNamelessData } from './theNameless'\nimport { theVoidData } from './theVoid'\nimport { warEternalData } from './warEternal'\n\nconst DE: IExpansionData = {\n  AE: aeonsEndData,\n  Depths: theDepthsData,\n  Nameless: theNamelessData,\n  OD: outerDarkData,\n  TV: theVoidData,\n  WE: warEternalData,\n  promos: promosData,\n}\n\nexport default DE\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const aeonsEndData: IExpansion = {\n  id: 'AE',\n  name: 'Aeons End',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'AE',\n    name: 'Carapax-Königin',\n    id: 'CarapaceQueen',\n    health: 60,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'König der Masken',\n    id: 'CrookedMask',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Der Unersättliche',\n    id: 'PrinceOfGluttons',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Hassgeburt',\n    id: 'Rageborne',\n    health: 70,\n    difficulty: 2,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'AE',\n    name: 'Adelheim',\n    id: 'Adelheim',\n    mageTitle: 'Riss-Magier-Waffenschmied',\n    ability: `\n        <h2>Aetherium Schutzwall</h2>\n        <p class=\"ability-activation\">Im ERZFEIND-ZUG während der <i>Erzfeind-Aktion</i>:</p>\n        <p>Zieht ihr einen ANGRIFF oder PLAN? Wirf ihn ab. Er wird nicht ausgeführt und ihr zieht keinen Ersatz.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Amethyst-Scherbe',\n        expansion: 'AE',\n        id: 'AmethystShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Wähle 1 anderen Spieler.<br />\n              Dieser Spieler darf 1 Karte ziehen und \n              dann 1 Karte seiner Wahl von der Hand abwerfen.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Brama',\n    id: 'Brama',\n    mageTitle: 'Riss-Magier-Älteste',\n    ability: `\n        <h2>Den Abgrund Abschöpfen</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 1 Spieler, der 4 Leben heilt.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Verschüttetes Licht',\n        expansion: 'AE',\n        id: 'BuriedLight',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Wirken:</b> Füge 1 Schaden zu.<br/>\n              Erhalte 1 <span class=\"aether\">&AElig;</span> im Schritt <i>Aktionen ausführen</i>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Jian',\n    id: 'Jian',\n    mageTitle: 'Riss-Magier-Waise',\n    ability: `\n        <h2>Schwarzer Spiegel</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 1 Spieler und wirke 1 seiner gebundenen Zauber. Der Zauber bleibt gebunden.</p>\n        <p>Dann wirke diesen Zauber erneut\n        <span class=\"hint\">(und er wird abgelegt, wie üblich).</span></p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Mondstein-Scherbe',\n        expansion: 'AE',\n        id: 'MoonstoneShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>, aber nur zum Erwerb von Kristallen.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Kadir',\n    id: 'Kadir',\n    mageTitle: 'Riss-Magier-Forscherin',\n    ability: `\n        <h2>Tor ins Anderseits</h2>\n        <p class=\"ability-activation\">Im SPIELER-ZUG DEINER WAHL während <i>Aktionen ausführen</i>:</p>\n        <p>Der Spieler darf bis zu 3 Zauber aus seinem Ablagestapel zurück auf die Hand \n          nehmen. Dann darf er bis zu 2 Zauber an jeden seiner \n          aktiven Risse binden.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Smaragd-Scherbe',\n        expansion: 'AE',\n        id: 'EmeraldShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">ODER</span>\n              Wähle 1 Spieler, der 1 Leben heilt.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Lash',\n    id: 'Lash',\n    mageTitle: 'Riss-Magier-Späher',\n    ability: `\n        <h2>Blitzschnell Reagieren</h2>\n        <p class=\"ability-activation\">Im SPIELER-ZUG DEINER WAHL während <i>Aktionen ausführen</i>:</p>\n        <p>Mische die Spieler-Reihenfolgekarte 1 Spielers deiner \n          Wahl zurück in das Reihenfolgedeck und füge diesem \n          Spieler 1 Schaden zu.\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Quartz-Scherbe',\n        expansion: 'AE',\n        id: 'QuartzShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Sieh dir die oberste Karte des Reihenfolgedecks an. Siehst du eine \n              Spieler-Reihenfolgekarte? Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Dann darfst du die angesehene Karte unter das Deck schieben.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Mist',\n    id: 'Mist',\n    mageTitle: 'Kapitänin der Dolchspitze',\n    ability: `\n        <h2>Rat der Zukunft</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 1 anderen Spieler, der 4 Karten zieht.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Granatium-Scherbe',\n        expansion: 'AE',\n        id: 'Garnet Shard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">ODER</span>\n              Wähle 1 Spieler und wirke 1 seiner gebundenen Zauber.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Phaedraxa',\n    id: 'Phaedraxa',\n    mageTitle: 'Riss-Magier-Seherin',\n    ability: `\n        <h2>Rune der Vorsicht</h2>\n        <p class=\"ability-activation\">Direkt nachdem ihr eine REIHENFOLGEKARTE GEZOGEN habt:</p>\n        <p>Verhindere in diesem Zug allen Schaden, der den Spielern \n          wie auch der <i>Feste der letzten Ruhe</i> zugefügt wird.\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Turmalin-Scherbe',\n        expansion: 'AE',\n        id: 'TourmalineShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Wähle 1 anderen Spieler. Dieser Spieler darf 1 Schaden erleiden, \n              um 1 Karte seiner Wahl auf seiner Hand zu zerstören.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Xaxos',\n    id: 'Xaxos',\n    mageTitle: 'Riss-Magier-Adept',\n    ability: `\n        <h2>Metaphysische Verbindung</h2>\n        <p class=\"ability-activation\">Im SPIELER-ZUG DEINER WAHL während <i>Aktionen ausführen</i>:</p>\n        <p>Erhalte insgesamt 4 Energie und verteile sie auf andere Spieler deiner Wahl. \n          Decke alle noch verdeckten Reihenfolgekarten auf und lege sie in einer Reihenfolge \n          deiner Wahl verdeckt zurück.\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Leuchtfeuer',\n        expansion: 'AE',\n        id: 'Flare',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Wirken:</b> Füge 1 Schaden zu.<br />\n              Sieh dir die oberste Karte des Reihenfolgedecks an. Siehst du eine Spieler-Reihenfolgekarte?<br />\n              +2 Schaden.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Rohdiamant',\n    id: 'DiamondCluster',\n    cost: 4,\n    effect: `\n      <p>\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.<br />\n        Ist dies dein genau zweiter gerade ausgespielter Rohdiamant?<br />\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Chaosbogen',\n    id: 'ChaosArc',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 3 Schaden zu.<br />\n        +2 Schaden für jeden gebundenen Zauber, der an diesen Riss direkt angrenzt.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Entzünden',\n    id: 'Ignite',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        Wähle 1 anderen Spieler, der 1 Energie erhält.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Essenz-Diebstahl',\n    id: 'EssenceTheft',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 3 Schaden zu.<br />\n        Wirfst du jetzt 1 Karte deiner Wahl von der Hand ab? Wähle 1 Spieler, der 1 Leben heilt.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Flammen-Rubin',\n    id: 'SearingRuby',\n    cost: 4,\n    effect: `\n      <p>\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.<br />\n        Erhalte 1 <span class=\"aether\">&AElig;</span>, aber nur zum Erwerb von Zaubern.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Blitzsturm',\n    id: 'FeralLightning',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Dauerhaft:</b> Darf an einen dunklen Riss gebunden werden (ohne ihn gebündelt zu haben).<br />\n        <b>Wirken:</b> Füge 3 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Einblick ins Nichts',\n    id: 'PlanarInsight',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        +1 Schaden für jeden deiner aktiven Risse.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Spektrales Echo',\n    id: 'SpectralEcho',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        Wähle bis zu 1 Karte auf deiner Hand. Zerstöre sie.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Glühender Opal',\n    id: 'BurningOpal',\n    cost: 5,\n    effect: `\n      <p>\n        Erhalte 3 <span class=\"aether\">&AElig;</span>.<br />\n        Wirfst du jetzt 1 Karte deiner Wahl von deiner Hand ab? Wähle 1 anderen Spieler, der 1 Karte zieht.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Fressende Leere',\n    id: 'ConsumingVoid',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Wirken:</b> Zerstöre bis zu 2 Karten deiner Wahl auf deiner Hand.<br />\n        Füge X Schaden zu.<br />\n        X = 0/3/6 für 0/1/2 zerstörte Karten.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Instabiles Prisma',\n    id: 'UnstablePrism',\n    cost: 3,\n    effect: `\n      <p>\n        Spiele 1 Kristall von deiner Hand sofort 2x aus. Dann zerstöre ihn.\n        <span class=\"or\">ODER</span>\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Getrübter Saphir',\n    id: 'CloudedSapphire',\n    cost: 6,\n    effect: `\n      <p>\n        Erhalte 3 <span class=\"aether\">&AElig;</span>.<br />\n        Ist dies dein genau erster gerade ausgespielter Getrübter Saphir? \n        Wähle 1 anderen Spieler, der 1 Energie erhält.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Talisman der Magier',\n    id: 'MagesTalisman',\n    cost: 5,\n    effect: `\n      <p>\n        Erhalte 1 Energie.<br />\n        Wähle 1 anderen Spieler, der 1 Energie erhält.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Gebogener Dolch',\n    id: 'FlexingDagger',\n    cost: 2,\n    effect: `\n      <p>\n        Für den nächsten Riss, den du in deinem Zug bündelst oder aktivierst, zahle 3 \n        <span class=\"aether\">&AElig;</span> weniger.\n        <span class=\"or\">ODER</span>\n        Zerstöre diese Karte und füge 1 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Lava-Takeln',\n    id: 'LavaTendril',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Gebunden:</b> Am Ende von <i>Zauber wirken</i>: Füge 1 Schaden zu.<br />\n        <b>Wirken:</b> Füge 3 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Vortex in Flaschen',\n    id: 'BottledVortex',\n    cost: 3,\n    effect: `\n      <p>\n        Wähle bis zu 2 Karten auf deiner Hand/Ablagestapel. Zerstöre sie.<br />\n        Ziehe 1 Karte.<br />\n        Zerstöre Vortex in Flaschen.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Arkaner Nexus',\n    id: 'ArcaneNexus',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Gebunden:</b> Du darfst 1 gerade gespielten Kristall zurück auf die Hand nehmen.<br />\n        <b>Wirken:</b> Füge 4 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Dunkles Feuer',\n    id: 'DarkFire',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Wirken:</b> Wirf bis zu 2 Karten deiner Wahl von deiner Hand ab.<br />\n        Füge X Schaden zu.<br />\n        X = 0/3/6 für 0/1/2 abgeworfene Karten.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Phoenix-Flamme',\n    id: 'PhoenixFlame',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        Wirfst du jetzt 1 Energie ab? +2 Schaden.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Jade',\n    id: 'Jade',\n    cost: 2,\n    effect: `\n      <p>\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Erweiterter Blick',\n    id: 'AmplifyVision',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Wirken:</b> Bündele 1 deiner dunklen Risse mit den geringsten <span class=\"aether\">&AElig;</span>-Kosten.<br />\n        Füge 2 Schaden zu.<br />\n        Sind alle deine Risse aktiv? +1 Schaden.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: \"V'Riswood Bernstein\",\n    id: 'VriswoodAmber',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Einmalig bei Erwerb:</b><br />\n        Du darfst diesen Kristall auf dein Deck legen.<br />\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Sprengstab',\n    id: 'BlastingStaff',\n    cost: 4,\n    effect: `\n      <p>\n        Wähle 1 Zauber, den du gerade gebunden hat. Wirke ihn und füge +2 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Sieber-Perle',\n    id: 'SiftersPearl',\n    cost: 3,\n    effect: `\n      <p>\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.<br />\n        Du und jeder andere Spieler:<br />\n        Sieh dir die oberste Karte deines Decks an. Du darfst sie abwerfen.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Feuer-Peitsche',\n    id: 'WildfireWhip',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Gebunden:</b> In deinem Schritt <i>Aktionen ausführen</i> darfst du 2 <span class=\"aether\">&AElig;</span> bezahlen, um 1 Spieler zu wählen:<br />\n        Wirke 1 seiner gebundenden Zauber.<br />\n        <b>Wirken:</br> Füge 4 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Orb der Bündelung',\n    id: 'FocusingOrb',\n    cost: 4,\n    effect: `\n      <p>\n        Bündele 1 Riss deiner Wahl (bei 1 Spieler deiner Wahl).\n        <span class=\"or\">ODER</span>\n        Zerstöre diese Karte und die <i>Feste</i> heilt 3 Leben.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Bann-Welle',\n    id: 'OblivionSwell',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Gebunden (1x pro Zug):</b> Erhalte 1 <span class=\"aether\">&AElig;</span> im Schritt <i>Aktionen ausführen</i>.<br />\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        Wirfst du jetzt 1 Kristall ab? +X Schaden.<br />\n        X = <span class=\"aether\">&AElig;</span>-Kosten des Kristalls.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'AgonyField-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Feld der Qualen',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Zerstöre 1 Karte deiner Wahl auf deiner Hand, die 2 <span class=\"aether\">&AElig;</span> oder mehr kostet.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 1. Wählt 1 Spieler, der 3 Karten seiner Wahl von der Hand abwirft und 1 Karte zieht.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Unheilbringer',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Ansturm:</b> SPEZIAL 1.\n      </p>\n    `,\n  },\n  {\n    id: 'BleedStatic-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Laufendes Blut',\n    power: 3,\n    effect: `\n      <p>\n        <b>Zeit 3:</b> Wählt den Spieler mit den meisten Zaubern auf seinen Rissen: Erleide 2 Schaden für jeden Zauber auf deinen Rissen.\n      </p>\n    `,\n  },\n  {\n    id: 'EyeofNothing-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Auge des Nichts',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 2.\n      </p>\n    `,\n  },\n  {\n    id: 'HazeSpewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Dunstspeier',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Fügt der <i>Feste</i> Schaden in Höhe des übrigen Lebens dieses Monsters zu. Dieses Monster erleidet 1 Schaden.\n      </p>\n    `,\n  },\n  {\n    id: 'Skewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Aufspiessen',\n    effect: `\n      <p>\n        SPEZIAL 1.<br />\n        Fügt 1 Spieler eurer Wahl 3 Schaden zu. Dieser Spieler zieht 1 Karte.\n      </p>\n    `,\n  },\n  {\n    id: 'Slaughter-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Abschlachten',\n    effect: `\n      <p>\n        SPEZIAL 1.<br />\n        Fügt der <i>Feste der letzten Ruhe</i> 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'WovenSky-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Verwobener Himmel',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Wirf 3 Karten deiner Wahl von deiner Hand ab.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 1. Fügt 1 Spieler eurer Wahl 4 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Awaken-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Erwachen',\n    effect: `\n      <p>\n        SPEZIAL 2. Fügt der <i>Feste der letzten Ruhe</i> 3 Schaden zu. \n        <span class=\"or\">ODER</span>\n        Bringt das zuletzt getötete Monster vom Ablagestapel zurück ins Spiel.\n      </p>\n    `,\n  },\n  {\n    id: 'Cauterizer-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Veröder',\n    shields: 3,\n    hp: 0,\n    effect: `\n      <p>\n        <b>Dauerhaft:</b> Wenn du diesem Monster Schaden zufügst, fügst du nur 1 Schaden zu.<br />\n        <br />\n        <b>Ansturm:</br> Wählt 1 Spieler und fügt ihm Schaden in Höhe des aktuellen Lebens dieses Monsters zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Dispel-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Verbannen',\n    effect: `\n      <p>\n        SPEZIAL 2.<br />\n        Der Spieler mit den meisten gebundenen Zaubern, wählt seinen gebundenen Zauber mit den höchsten \n        <span class=\"aether\">&AElig;</span>-Kosten und wirft ihn ab.\n      </p>\n    `,\n  },\n  {\n    id: 'Needlemaw-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Nadelmaul',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Fügt der <i>Feste der letzten Ruhe</i> 2 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'LayWaste-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Lay Waste',\n    effect: `\n      <p>\n        SPEZIAL 2.<br />\n        Fügt 1 Spieler eurer Wahl 2 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'PulverizingRay-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Power',\n    name: 'Pulverisierungsstrahl',\n    power: 1,\n    effect: `\n      <p>\n        <b>Zeit 1:</b> Entscheidet 6x:<br />\n        Fügt der <i>Feste</i> der letzten Ruhe 3 Schaden zu.\n        <span class=\"or\">ODER</span>\n        Wählt 1 Spieler, der 1 Kristall von seiner Hand abwirft.\n      </p>\n    `,\n  },\n  {\n    id: 'Venomite-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Giftmilbe',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Fügt dem Spieler eurer Wahl mit dem geringsten übrigen Leben 2 Schaden zu.\n        <span class=\"or\">ODER</span>\n        Wählt 1 Spieler, der 1 seiner gebundenen Zauber abwirft, der 3 <span class=\"aether\">&AElig;</span> oder mehr kostet.\n      </p>\n    `,\n  },\n  {\n    id: 'DoomAegis-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Mantel des Untergangs',\n    power: 1,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 1:</b> Fügt dem Spieler mit der meisten Energie 4 Schaden zu. Dieser Spieler wirft all seine Energie ab.\n      </p>\n    `,\n  },\n  {\n    id: 'GatherDarkness-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Aufziehende Dunkelheit',\n    effect: `\n      <p>\n        Wählt 1 Spieler, der seinen Ablagestapel auf sein Deck legt und es mischt. Dann zerstört dieser Spieler die 4 obersten Karten seines Decks.<br />\n        SPEZIAL 2.\n      </p>\n    `,\n  },\n  {\n    id: 'JaggedOne-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Splitterwesen',\n    hp: 14,\n    effect: `\n      <p>\n        <b>Ansturm:</b> SPEZIAL 2.\n      </p>\n    `,\n  },\n  {\n    id: 'Obliterate-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Auslöschen',\n    effect: `\n      <p>\n        SPEZIAL 2.<br />\n        Der Spieler mit den meisten aktiven Rissen: Zerstört 4 Karten auf seiner Hand\n        <span class=\"or\">ODER</span>\n        erleidet 4 Schaden.\n      </p>\n    `,\n  },\n  {\n    id: 'RealityRupture-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Realitätsbruch',\n    power: 1,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Zerstöre 2 deiner gebundenen Zauber mit \n        <span class=\"aether\">&AElig;</span>-Kosten von jeweils 3 oder mehr.<br />\n        <br />\n        <b>Zeit 1:</b> SPEZIAL 3.\n      </p>\n    `,\n  },\n  {\n    id: 'Sunder-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Entzweien',\n    effect: `\n      <p>\n        Fügt der <i>Feste</i> 4 Schaden zu. Fügt dem Spieler eurer Wahl mit dem geringsten übrigen Leben 4 Schaden zu.\n        <span class=\"or\">ODER</span>\n        Mischt alle Erzfeind-Reihenfolgekarten im Ablagestapel zurück in das Reihenfolgedeck.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Topple',\n    effect: `\n      <p>\n        SPEZIAL 2.<br />\n        Fügt der <i>Feste der letzten Ruhe</i> 4 Schaden zu.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theDepthsData: IExpansion = {\n  id: 'Depths',\n  name: 'Aus den Tiefen',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Depths',\n    name: 'Horden-Muhme',\n    id: 'HordeCrone',\n    health: 60,\n    difficulty: 6,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Depths',\n    name: 'Nym',\n    id: 'Nym',\n    mageTitle: 'Riss-Magier-Lehrling',\n    ability: `\n        <h2>Barriere</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Sieh dir die oberste Erzfeind-Karte an und wirf sie ab.</p>\n        <p>Hast du einen ANGRIFF gesehen, wiederhole das (1x).</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Zunder',\n        expansion: 'Depths',\n        id: 'Cinder',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Wirken:</b> Füge 1 Schaden zu.\n            <span class=\"or\">ODER</span>\n            <b>Wirken:</b> Erhalte 2 <span class=\"aether\">&AElig;</span>.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: 'Reeve',\n    id: 'Reeve',\n    mageTitle: 'Riss-Magier-Elite',\n    ability: `\n        <h2>Quelling Blade</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Füge 1 Monster 5 Schaden zu.</p>\n        <p>Füge 1 anderen Monster 3 Schaden zu.</p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Obsidian-Scherbe',\n        expansion: 'Depths',\n        id: 'ObsidianShard',\n        cost: 0,\n        effect: `\n          <p>\n            Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Fügst du dir jetzt 1 Schaden zu? Erhalte 2 <span class=\"aether\">&AElig;</span>.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'Depths',\n    name: \"Z'hana\",\n    id: 'Zhana',\n    mageTitle: 'Abtrünnige Riss-Magierin',\n    ability: `\n        <h2>Das Licht Der Welt, Die War</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Die <i>Feste der letzten Ruhe</i> heilt 7 Leben.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Ewige Glut',\n        expansion: 'Depths',\n        id: 'EternalEmber',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Wirken:</b> Füge 1 Schaden zu.\n            <span class=\"or\">ODER</span>\n            <b>Wirken:</b> Wirke 1 anderen deiner gebundenen Zauber. Der Zauber bleibt gebunden.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Verbindung mit der Leere',\n    id: 'VoidBond',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 3 Schaden zu.<br />\n        Wähle 1 Spieler und wirke 1 seiner gebundenen Zauber.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Flammenmeer',\n    id: 'Combustion',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 1 Monster deiner Wahl 2 Schaden zu.<br />\n        Füge 1 anderem Monster oder dem Erzfeind 2 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Vim-Generator',\n    id: 'VimDynamo',\n    cost: 4,\n    effect: `\n      <p>\n        Erleide 1 Schaden und wähle 1 Spieler, der 2 Karten zieht.\n        <span class=\"or\">ODER</span>\n        Zerstöre diese Karte und wähle 1 Spieler, der 2 Leben heilt und 1 Energie erhält.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Zersetzende Sense',\n    id: 'DisintegratingScythe',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 8 Schaden zu.<br />\n        Erleide 1 Schaden. Anstatt diesen Zauber abzuwerfen, zerstöre ihn oder lege ihn auf den Ablagestapel 1 Spielers deiner Wahl.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Ungeheures Inferno',\n    id: 'MonstrousInferno',\n    cost: 8,\n    effect: `\n      <p>\n        <b>Dauerhaft:</b> Dieser Zauber muss auf 2 aneinandergrenzende Risse gebunden werden. Beide Risse sind damit nicht mehr frei.<br />\n        <b>Wirken:</b> Füge 7 Schaden zu. Dieser Schaden ist aufteilbar.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Depths',\n    name: 'Verschlingender Schatten',\n    id: 'DevouringShadow',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Gebunden:</b> In deinem Schritt <i>Aktionen ausführen</i> wähle 1 Karte auf deiner Hand und zerstöre sie.<br />\n        <b>Wirken:</b> Füge 3 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Depths',\n    name: 'Topas der Verbannung',\n    id: 'BanishingTopaz',\n    cost: 5,\n    effect: `\n      <p>\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.<br />\n        Legst du jetzt 1 Karte deiner Wahl von deiner Hand auf dein Deck? Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Depths',\n    name: 'Verwandler',\n    id: 'Transmogrifier',\n    cost: 4,\n    effect: `\n      <p>\n        Zerstöre 1 Karte deiner Wahl auf deiner Hand.<br />\n        Erwirb 1 Karte gratis, die bis zu 3 <span class=\"aether\">&AElig;</span> mehr kostet als die zerstörte Karte.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theNamelessData: IExpansion = {\n  id: 'Nameless',\n  name: 'Das Namenlose',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Lord des Verderbens',\n    id: 'BlightLord',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'Nameless',\n    name: 'Der Wegbereiter',\n    id: 'WaywardOne',\n    health: 60,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'Nameless',\n    name: 'Malastar',\n    id: 'Malastar',\n    mageTitle: 'Riss-Magier-Mentor',\n    ability: `\n        <h2>Aetherium-Geschenk</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>\n          Erwirb 1 Zauber deiner Wahl gratis. Du darfst diesen Zauber sofort an den aktiven \n          Riss 1 Spielers deiner Wahl binden.\n        </p>\n      `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Brennende Luft',\n        expansion: 'Nameless',\n        id: 'Immolate',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Gebunden:</b> mmer wenn du 1 oder mehr Leben verlierst, erhalte 1 Energie.<br />\n            <b>Wirken:</b> Füge 1 Schaden zu.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Flüssig-Hammer',\n    id: 'MoltenHammer',\n    cost: 5,\n    effect: `\n      <p>\n        Erhalte 1 Energie.<br />\n        Wähle 1 Spieler. Dieser Spieler darf 1 Karte seiner Wahl auf seiner Hand \n        oder die oberste Karte seines Ablagestapels zerstören.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Ausstrahlung',\n    id: 'Radiance',\n    cost: 8,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 5 Schaden zu.<br />\n        Jeder andere Spieler zieht 1 Karte.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Feuerbrunst',\n    id: 'Blaze',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Einmalig bei Erwerb:</b><br />\n        Wähle 1 Spieler und lege diesen Zauber auf seinen Ablagestapel.<br />\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        +1 Schaden für jeden anderen deiner gebundenen und gerade gewirkten Feuersbrunst-Zauber.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Blitz der Vorsehung',\n    id: 'ScryingBolt',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 5 Schaden zu.<br />\n        Wirfst du jetzt 1 Energie ab? Sieh dir die obersten 2 Karten des Erzfeind- Stapels an \n        und lege sie in einer Reihenfolge deiner Wahl zurück.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'Nameless',\n    name: 'Mal des Weisen',\n    id: 'SagesBrand',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Dauerhaft:</b> Dieser Zauber muss auf 2 an einandergrenzende Risse gebunden werden. Beide Risse sind damit nicht mehr frei.<br />\n        <b>Gebunden:</b> Ziehe in deinem Schritt <i>Karten ziehen</i> 1 Karte mehr.<br />\n        <b>Wirken:</b> Füge 6 Schaden zu.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'Nameless',\n    name: 'Blutsauger-Achat',\n    id: 'LeechingAgate',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Einmalig bei Erwerb:</b><br />\n        Erhalte 1 Energie.<br />\n        Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'Nameless',\n    name: 'Zeitspirale',\n    id: 'TemporalHelix',\n    cost: 7,\n    effect: `\n      <p>\n        Wähle 1 Spieler und wirke 1 seiner gebundenen Zauber. Der Zauber bleibt gebunden.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const outerDarkData: IExpansion = {\n  id: 'OD',\n  name: 'Hinter der Finsternis',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'OD',\n    name: 'Dreimaltoter Prophet',\n    id: 'ThriceDeadProphet',\n    health: 40,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'OD',\n    name: 'Traum-Händler',\n    id: 'Wraithmonger',\n    health: 70,\n    difficulty: 6,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'OD',\n    name: 'Indira',\n    id: 'Indira',\n    mageTitle: 'Riss-Magier-Lehrling',\n    ability: `\n        <h2>List der Pyromanen</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Zauber wirken</i>:</p>\n        <p>Wirke eine Anzahl Zauber deiner Wahl direkt von deiner Hand. +1 Schaden für jeden so gewirkten\n        Zauber. Dann darfst du 1 Karte deiner Wahl in deinem Ablagestapel zerstören.</p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Zwillings-Opal',\n        expansion: 'OD',\n        id: 'TwinOpal',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Du darfst 1 Zauber deiner Wahl von der Hand wirken.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'OD',\n    name: 'Reliquior',\n    id: 'Remnant',\n    mageTitle: 'Ätherisches Wesen',\n    ability: `\n        <h2>Hauch des Nichts</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 1 anderen Spieler, der 2 Karten von seinem Ablagestapel zurück auf die Hand nimmt.\n        <span class=\"or\">ODER</span>\n        Die <i>Feste der letzten Ruhe</i> heilt 5 Leben.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Leere-Scherbe',\n        expansion: 'OD',\n        id: 'VoidShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>, aber nur zum Bündeln oder Aktivieren\n              eines Risses.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Karbonisieren (1. Auflage: Verkohlen)',\n    id: 'Char',\n    cost: 8,\n    effect: `\n        <p>\n          <b>Wirken:</b> Füge 6 Schaden zu.<br/>\n          Wird dadurch ein MONSTER getötet? Wähle 1 Spieler, der 2 Leben heilt.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Fremdkörper',\n    id: 'AlienElement',\n    cost: 4,\n    effect: `\n        <p>\n          Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n          Erhalte 1 <span class=\"aether\">&AElig;</span> für jeden deiner Risse mit einem\n          gebundenen Zauber.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Versengen',\n    id: 'Scorch',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Wirken:</b> Füge 4 Schaden zu.<br/>\n          Wird dadurch ein MONSTER aus dem Erzfeind-Stapel getötet? Wähle 1 anderen Spieler, der 2\n          Energie erhält.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Pyromantie',\n    id: 'Pyromancy',\n    cost: 7,\n    effect: `\n        <b>Wirken:</b> Füge 1 Schaden zu.<br/>\n        Werfen die anderen Spieler jetzt insgesamt bis zu 2 Karten ab? +X Schaden.\n        X = 0/3/6 für 0/1/2 abgeworfene Karten.\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Blitz-Aura',\n    id: 'FeedbackAura',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Wirken:</b> Füge 3 Schaden zu.<br/>\n          Hast du 4 oder mehr Energie? +3 Schaden.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Vernichtung',\n    id: 'Catalyst',\n    cost: 6,\n    effect: `\n        <p>\n          <b>Wirken:</b> Füge 2 Schaden zu.<br/>\n          Hast du 2 oder weniger übriges Leben? +5 Schaden.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Schmerzstein',\n    id: 'PainStone',\n    cost: 6,\n    effect: `\n        <p>\n          Erhalte 3 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">ODER</span>\n          Erhalte 2 <span class=\"aether\">&AElig;</span>. Füge 1 Schaden zu.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'OD',\n    name: 'Astral-Würfel',\n    id: 'AstralCube',\n    cost: 5,\n    effect: `\n        <p>\n          Hast du gerade 1 Kristall gespielt? Nimm ihn zurück auf deine Hand.<br/>\n          Sieh dir die oberste Karte des Reihenfolgedecks an. Siehst du eine Spieler-\n          Reihenfolgekarte? Dieser Spieler heilt 1 Leben.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'OD',\n    name: 'Mystische Sphäre',\n    id: 'RiddleSphere',\n    cost: 3,\n    effect: `\n        <p>\n          Erhalte 1 Energie.\n          <span class=\"or\">ODER</span>\n          Wirfst du jetzt 2 Energie ab? Erhalte 5 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'OD',\n    name: 'Verbindung zum Nichts',\n    id: 'NetherConduit',\n    cost: 7,\n    effect: `\n        <b>Wirken:</b> Wähle 1 Karte auf der Hand mit <span class=\"aether\">&AElig;</span>-Kosten\n        von 2 oder mehr.<br/>\n        Füge X Schaden zu. X = Anzahl fehlender Karten im Vorrat dieser Karte.<br/>\n        1 anderer Spieler deiner Wahl erwirbt gratis 1 Karte dieses Vorrats.<br/>\n        <span class=\"hint\">(Hilfe: Kristall-Vorräte haben 7 Karten. Artefakte und Zauber 5.)</span>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'OD',\n    name: 'Verfluchter Beryllit',\n    id: 'HauntedBerylite',\n    cost: 3,\n    effect: `\n        <p>\n          Erhalte 2 <span class=\"aether\">&AElig;</span>.\n          <span class=\"or\">ODER</span>\n          Wirfst du jetzt 1 Karte deiner Wahl von der Hand ab? Erhalte 2 Energie.\n        </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'LabyrinthWisp-OD',\n    expansion: 'OD',\n    tier: 1,\n    type: 'Minion',\n    name: 'Nebel-Irrlicht',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Wählt 1 Spieler, der 1 gebundenen Zauber abwirft.\n        <span class=\"or\">ODER</span>\n        Wählt 1 Spieler, der 1 Energie abwirft.\n      </p>\n    `,\n  },\n  {\n    id: 'Assail-OD',\n    expansion: 'OD',\n    tier: 2,\n    type: 'Attack',\n    name: 'Überfall',\n    effect: `\n      <p>\n        SPEZIAL 2.<br/>\n        Wähle 1 Spieler mit dem gebundenen Zauber mit den höchsten <span class=\"aether\">&AElig;</span>-Kosten. Diesen Zauber\n        legt er oben auf sein Deck.\n      </p>\n    `,\n  },\n  {\n    id: 'DireAbbatoir-OD',\n    expansion: 'OD',\n    tier: 3,\n    type: 'Power',\n    name: 'Schlachthof',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 8 <span class=\"aether\">&AElig;</span>.<br/>\n        <br/>\n        <b>Zeit 2:</b> Fügt dem Spieler mit dem meisten Leben Schaden in Höhe des aktuellen Lebens dieses Spielers zu.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const theVoidData: IExpansion = {\n  id: 'TV',\n  name: 'Die Leere',\n  type: 'mini',\n  nemeses,\n  mages,\n  cards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'TV',\n    name: 'Ritter des Schreckens',\n    id: 'KnightOfShackles',\n    health: 70,\n    difficulty: 4,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'TV',\n    name: 'Dornen-Maid',\n    id: 'MaidenOfThorns',\n    health: 80,\n    difficulty: 4,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'TV',\n    name: 'Sparrow',\n    id: 'Sparrow',\n    mageTitle: 'Riss-Magier-Soldatin',\n    ability: `\n        <h2>Arkane Verbindung</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 4x je 1 Spieler und bündele 1 seiner Risse.\n        <span class=\"or\">ODER</span>\n        Wähle 1 anderen Spieler ohne dunkle Risse. Dieser Spieler zieht 3 Karten und bindet dann bis zu\n        3 Zauber seiner Wahl von der Hand an seine Risse.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Schwelbrand',\n        expansion: 'TV',\n        id: 'Smolder',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Dauerhaft:</b> Darf an einen dunklen Riss gebunden werden (<i>ohne ihn gebündelt zu haben</i>).<br/>\n              <b>Wirken:</b> Füge 1 Schaden zu.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'TV',\n    name: 'Xaxos (DL)',\n    id: 'XaxosTV',\n    mageTitle: 'Herold der Leere',\n    ability: `\n        <h2>Schein der Praetorianer</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 1 anderen Spieler, der 1 Energie erhält und 1 zufällige Karte von seiner Hand abwirft.\n        Bündele 1 deiner Risse. Heile 1 Leben. Zerstöre 1 Karte deiner Wahl auf deiner Hand oder in deinem\n        Ablagestapel.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Scheiterhaufen',\n        expansion: 'TV',\n        id: 'Pyre',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Wirken:</b> Füge 1 Schaden zu.<br/>\n              Wirft 1 anderer Spieler 1 Karte seiner Wahl von der Hand? +2 Schaden.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'TV',\n    name: 'Bernstein-Skarabäus',\n    id: 'FossilizedScarab',\n    cost: 3,\n    effect: `\n      <p>\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">ODER</span>\n      Wähle 1 Karte auf deiner Hand und zerstöre sie.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Thermalpfeil',\n    id: 'ThermalDart',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Verknüpfbar.</b> <span class=\"hint\">(Bis zu 2 verknüpfbare Zauber dürfen gleichzeitig an 1 Riss gebunden sein.)</span>\n      </p>\n      <p>\n      <b>Wirken:</b> Füge 3 Schaden zu.<br/>\n      Ist dies dein mindestens 2. gerade gewirkter Thermalpfeil? Erhalte 1 Energie.\n      </p>\n      `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Widerhall',\n    id: 'Resonate',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 4 Schaden zu.<br/>\n      Sind 6 oder mehr Karten in deinem Ablagestapel? +3 Schaden.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Feuersbrunst',\n    id: 'Conflagration',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Verknüpfbar.</b> <span class=\"hint\">(Bis zu 2 verknüpfbare Zauber dürfen gleichzeitig an 1 Riss gebunden sein.)</span>\n      </p>\n      <p>\n      <b>Wirken:</b> Füge 2 Schaden zu.<br/>\n      Erhalte 1 <span class=\"aether\">&AElig;</span> für <i>Aktionen ausführen</i>.\n      </p>\n      `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TV',\n    name: 'Dimensions-Schlüssel',\n    id: 'DimensionalKey',\n    cost: 8,\n    effect: `\n      <p>\n      Wähle 1 anderen Spieler, der 2 Karten zieht.\n        <span class=\"or\">ODER</span>\n      Zerstöre diese Karte. Erleide 1 Schaden. Lege 1 Erzfeind-Karte in der Auslage zurück auf den Erzfeind-Stapel.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Inneres Feuer',\n    id: 'InnerFire',\n    cost: 2,\n    effect: `\n      <p>\n      <b>Verknüpfbar.</b> <span class=\"hint\">(Bis zu 2 verknüpfbare Zauber dürfen gleichzeitig an 1 Riss gebunden sein.)</span>\n      </p>\n      <p>\n        <b>Wirken:</b> Füge 1 Schaden zu.<br/>\n        Ist das Erzfeind-Level 2 oder höher? +1 Schaden.\n      </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Spell',\n    expansion: 'TV',\n    name: 'Feuerstoss',\n    id: 'Fulminate',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Verknüpfbar.</b> <span class=\"hint\">(Bis zu 2 verknüpfbare Zauber dürfen gleichzeitig an 1 Riss gebunden sein.)</span>\n      </p>  \n      <p>\n      <b>Gebunden:</b> Deine anderen Zauber fügen +1 Schaden zu.\n      </p>\n      <b>Wirken:</b> Füge 3 Schaden zu.\n      </p>\n        `,\n    keywords: ['link'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'TV',\n    name: 'Amulett der Ewigkeit',\n    id: 'EternityCharm',\n    cost: 3,\n    effect: `\n      <p>\n        Bündele 1 deiner dunklen Risse mit den geringsten <span class=\"aether\">&AElig;</span>-Kosten. \n        Sieh dir die 3 obersten Karten deines Decks an. Siehst du Zauber? 1 davon darfst du an deine \n        aktiven/gerade gebündelten Risse binden.\n      </p>\n        `,\n    keywords: [],\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const warEternalData: IExpansion = {\n  id: 'WE',\n  name: 'Für die Ewigkeit',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'WE',\n    name: 'Riss-Furie',\n    id: 'GateWitch',\n    health: 70,\n    difficulty: 7,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Krone der Leere',\n    id: 'HollowCrown',\n    health: 1,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Schattenmantel-Magus',\n    id: 'MagusOfCloaks',\n    health: 35,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'WE',\n    name: 'Schatten-Titan',\n    id: 'UmbraTitan',\n    health: 70,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'WE',\n    name: 'Dezmodia',\n    id: 'Dezmodia',\n    mageTitle: 'Wunderkind der Leere',\n    ability: `\n        <h2>Sturmwind-Sigille</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle 1 Spieler, der 1 seiner aktiven Risse I oder II mit 1 deiner entsprechenden\n        Sigillen-Risse ersetzt. Gebundene Zauber kommen zurück auf die Hand. Dann darf dieser Spieler\n        sofort 1 Zauber seiner Wahl von der Hand an seine Risse binden.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Nihil-Scherbe',\n        expansion: 'WE',\n        id: 'OblivionShared',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 2 <span class=\"aether\">&AElig;</span>, aber nicht zum Erwerb von Artefakten oder\n              Zaubern.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Garu',\n    id: 'Garu',\n    mageTitle: 'Vereidigter Beschützer',\n    ability: `\n        <h2>Kolossale Kraft</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wirf bis zu 4 deiner gebundenen Zauber ab.</p>\n        <p>Füge 2 Schaden zu. +X Schaden. X = 4 pro gerade abgeworfenem Zauber. Dieser Schaden ist aufteilbar.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Fackel',\n        expansion: 'WE',\n        id: 'Torch',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Wirken:</b> Füge 1 Schaden zu.\n              <span class=\"or\">ODER</span>\n              <b>Wirken:</b> Bündele 1 Riss deiner Wahl (bei 1 Spieler deiner Wahl).\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Gex',\n    id: 'Gex',\n    mageTitle: 'Riss-Magier-Beraterin',\n    ability: `\n        <h2>Vimkunst-Schwur</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Wähle bis zu 2 Karten in deinem Ablagestapel mit <span class=\"aether\">&AElig;</span>-Kosten von 0. Zerstöre sie.</p>\n        <p>Wähle 1 anderen Spieler, der 1 Karte zieht und 2 Leben heilt.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Bruchgeoden-Scherbe',\n        expansion: 'WE',\n        id: 'ShatteredGeode',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Wähle 1 anderen Spieler. Du darfst die oberste Karte seines Ablagestapels auf die Hand nehmen.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Mazahaedron',\n    id: 'Mazahaedron',\n    mageTitle: 'Steinkreis-Mystiker',\n    ability: `\n        <h2>Untererde-Mantra</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Du darfst gratis 1 Kristall mit <span class=\"aether\">&AElig;</span>-Kosten von 4 oder weniger\n        erwerben.</p>\n        <p>Die <i>Feste der letzten Ruhe</i> heilt 4 Leben.</p>`,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Weltherz-Scherbe',\n        expansion: 'WE',\n        id: 'WorldheartShard',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">ODER</span>\n              Erhalte 2 <span class=\"aether\">&AElig;</span>, aber nur zum Erwerb einer Karte. Die nächste Karte, die du\n              erwirbst, legst du auf den Ablagestapel 1 anderen Spielers deiner Wahl.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Mist (FdE)',\n    id: 'MistWE',\n    mageTitle: 'Leeren-Schreiter',\n    ability: `\n        <h2>Gesegnetes Brandmal</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Zauber wirken</i>:</p>\n        <p>Wähle bis zu 3 gebundene Zauber auf den Rissen der Spieler. Wirke sie. Nach jedem Wirken\n        dieser Zauber: Wähle 1 anderen Spieler, der diesen Zauber auf die Hand nimmt (das muss\n        nicht der Spieler sein, bei dem er gebunden war).</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Makellose Amethyst-Scherbe',\n        expansion: 'WE',\n        id: 'AmethystParagon',\n        cost: 0,\n        effect: `\n            <p>\n              Erhalte 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Wähle 1 anderen Spieler. Dieser Spieler darf 1 Zauber seiner Wahl von der Hand an seine\n              (auch dunklen) Risse binden.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Quilius',\n    id: 'Quilius',\n    mageTitle: 'Riss-Magier-Assassine',\n    ability: `\n        <h2>Quietus-Gelübde</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Füge X Schaden zu. X = 2 pro Trophäe.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Auslöschen',\n        expansion: 'WE',\n        id: 'Extinguish',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Wirken:</b> Füge 1 Schaden zu.<br/>\n              Tötest du damit ein MONSTER vom Erzfeind Stapel? Quilius erhält 1 Trophäe.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Ulgimor',\n    id: 'Ulgimor',\n    mageTitle: 'Schattenhaut-Biest',\n    ability: `\n        <h2>Eidolon-Schleier</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Heile 6 Leben.</p>\n        <p>Bist du ERSCHÖPFT? Wähle stattdessen 1 anderen Spieler, der 5 Leben heilt.</p>`,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Kohlen-Scherbe',\n        expansion: 'WE',\n        id: 'CoalShard',\n        cost: 0,\n        effect: `\n            <p>\n              Hast du 3 oder mehr Leben? Erhalte 3 <span class=\"aether\">&AElig;</span>, 1 Energie und\n              erleide 2 Schaden.<br />\n              <b>Andernfalls:</b> Zerstöre diese Karte.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'WE',\n    name: 'Yan Magda',\n    id: 'YanMagda',\n    mageTitle: 'Erleuchtete im Exil',\n    ability: `\n        <h2>Kaiserliches Ritual</h2>\n        <p class=\"ability-activation\">In DEINEM SPIELER-ZUG während <i>Aktionen ausführen</i>:</p>\n        <p>Erwirb gratis 1 Karte von 1 Vorrat deiner Wahl. Hast du 4 aktive Risse? Wähle 1 anderen Spieler.\n        Dieser Spieler erwirbt gratis 1 Karte von 1 Vorrat seiner Wahl, die er oben auf sein Deck legt.</p>`,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Erleuchtung',\n        expansion: 'WE',\n        id: 'Illuminate',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Gebunden:</b> Aktivierst oder bündelst du 1 deiner Risee in diesem Zug? Füge 1 Schaden zu.<br/>\n              <b>Wirken:</b> Füge 1 Schaden zu.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Unreiner Opal',\n    id: 'ErraticIngot',\n    cost: 5,\n    effect: `\n      <p>\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Sieh dir den Ablagestapel des Reihenfolgedecks an. Ist dort mindestens 1 Erzfeind-Reihenfolgekarte?\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Einäschern',\n    id: 'ReduceToAsh',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Gebunden:</b> Zu Beginn von <i>Zauber wirken</i>: Sieh dir die oberste Karte deines Decks an.\n      Du darfst sie zerstören.\n      <b>Wirken:</b> Füge 4 Schaden zu.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Vortex-Handschuh',\n    id: 'VortexGauntlet',\n    cost: 6,\n    effect: `\n      <p>\n      Wähle 1 Spieler und wirke 1 seiner gebundenen Zauber.<br/>\n      Den gewirkten Zauber erhält dieser Spieler zurück auf die Hand (statt auf den\n      Ablagestapel).\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Verkohlen',\n    id: 'Carbonize',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 3 Schaden zu.<br/>\n      Sieh dir die oberste Karte des Reihenfolgedecks an. Du darfst diese Karte unter das\n      Reihenfolgedeck schieben.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Equilibrium',\n    id: 'Equilibrium',\n    cost: 7,\n    effect: `\n      <p>\n      <b>Gebunden:</b> Erleidest du Schaden? Reduziere den Schaden um 1 (Minimum: 1 Schaden).<br/>\n      <b>Wirken:</b> Füge 4 Schaden zu.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Vulkan-Glas',\n    id: 'VolcanicGlass',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Einmalig bei Erwerb:</b> Bezahlst du jetzt 2 <span class=\"aether\">&AElig;</span>? Wähle 1 anderen Spieler,\n      der 1 <i>Vulkan-Glas</i> erhält und oben auf sein Deck legt. Dieser Spieler kann diesen Effekt nicht auslösen.<br />\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Konvektions-Feld',\n    id: 'ConvectionField',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 4 Schaden zu.\n        <span class=\"or\">ODER</span>\n      <b>Wirken:</b> Füge 2 Schaden zu. Wähle 1 anderen Spieler, der 1 Karte seiner Wahl auf der Hand zerstören darf.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Blitz-Kaskade',\n    id: 'JaggedLightning',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 3 Schaden zu.<br/>\n      Wirfst du jetzt 1 Karte deiner Wahl von der Hand ab? Wähle 1 Spieler, der 1 seiner Risse mit den niedrigsten\n      <span class=\"aether\">&AElig;</span>-Kosten bündelt.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Blut-Diamant',\n    id: 'BloodstoneJewel',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Einmalig bei Erwerb:</b> Ist dies dein genau erster gerade erworbener Blut-Diamant? Erhalte 3 <span class=\"aether\">&AElig;</span>.<br/>\n      Erhalte 3 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Entfachen',\n    id: 'Kindle',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Gebunden:</b> In deinem Schritt <i>Aktionen ausführen</i> darfst du hier auch noch 1 <i>Funken</i> binden (max. 1).<br/>\n      <b>Wirken:</b> Füge 3 Schaden zu.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Gedankenvertrauter',\n    id: 'ThoughtformFamiliar',\n    cost: 3,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 2 Schaden zu. +X Schaden.<br/>\n      X = Anzahl deiner anderen gebundenen Zauber.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Kristallisieren',\n    id: 'Crystallize',\n    cost: 8,\n    effect: `\n      <p>\n      <b>Dauerhaft:</b> Dieser Zauber muss auf 2 aneinandergrenzende Risse gebunden werden. Beide Risse sind damit nicht mehr frei.<br/>\n      <b>Wirken:</b> Füge X Schaden zu.<br/>\n      X = 2 für jeden Kristall auf der Hand 1 anderen Spielers deiner Wahl.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Feuerflut',\n    id: 'FieryTorrent',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 2 Schaden zu.<br/>\n      +2 Schaden für jede weitere gebundene <i>Feuerflut</i> im Spiel.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Himmelsfeuer',\n    id: 'CelestialSpire',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 3 Schaden zu.<br/>\n      Ist der Vorrat dieser Karte leer? Wähle 1 anderen Spieler, der 1 Karte von seinem Deck zieht.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Rückkehrer beschwören',\n    id: 'ConjureTheLost',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Wirken:</b> Füge 5 Schaden zu.<br/>\n      Zerstörst du jetzt diese Karte? Die <i>Feste</i> heilt 4 Leben.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Sternenschmiede',\n    id: 'NovaForge',\n    cost: 6,\n    effect: `\n      <p>\n      <b>Gebunden (1x pro Zug):</b> Erhalte 2 <span class=\"aether\">&AElig;</span> im Schritt\n      <i>Aktionen ausführen</i>, aber nur zum Erwerb von Zaubern.<br/>\n      <b>Wirken:</b> Füge 4 Schaden zu.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Terror-Diamant',\n    id: 'DreadDiamond',\n    cost: 3,\n    effect: `\n      <p>\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Wirfst du jetzt 1 deiner gebundenen Zauber deiner Wahl ab? \n      Erhalte 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Stein-Kompass',\n    id: 'CairnCompass',\n    cost: 4,\n    effect: `\n      <p>\n      Wähle 1 anderen Spieler. Dieser Spieler darf 1 Zauber aus seinem Ablagestapel wählen und\n      an seine aktiven oder dunklen Risse binden.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Vulkan-Schlacke',\n    id: 'ScoriaSlag',\n    cost: 4,\n    effect: `\n      <p>\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Ist das Erzfeind-Level 2 oder höher? Erhalte 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Riss-Erz',\n    id: 'BreachOre',\n    cost: 4,\n    effect: `\n      <p>\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.<br/>\n      <span class=\"or\">ODER</span>\n      Bündele 1 deiner dunklen Risse mit den geringsten <span class=\"aether\">&AElig;</span>-Kosten.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Teufelschnapper',\n    id: 'FiendCatcher',\n    cost: 3,\n    effect: `\n      <p>\n      Du darfst 1 Karte deiner Wahl auf deiner Hand oder deinem Ablagestapel zerstören.<br/>\n      Sieh dir die oberste Karte des Reihenfolgedecks an. Ist es eine Erzfeind-Reihenfolgekarte?\n      Du darfst sie unter das Reihenfolgedeck schieben.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Pyrotechnische Woge',\n    id: 'PyrotechnicSurge',\n    cost: 4,\n    effect: `\n      <p>\n      <b>Dauerhaft:</b> Dieser Zauber muss auf 2 aneinandergrenzende Risse gebunden werden. Beide Risse sind damit nicht mehr frei.<br/>\n      <b>Wirken:</b> Füge 4 Schaden zu.<br/>\n      Du darst 1 Karte deiner Wahl in deinem Ablagestapel zerstören.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'WE',\n    name: 'Aurora',\n    id: 'Aurora',\n    cost: 5,\n    effect: `\n      <p>\n      <b>Gebunden (1x pro Zug):</b> Im Schritt <i>Aktionen ausführen</i>: Erhalte 1 Energie.<br/>\n      <b>Wirken:</b> Füge 3 Schaden zu.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Kodex der Konklave',\n    id: 'ConclaveScroll',\n    cost: 3,\n    effect: `\n      <p>\n      Erhalte 1 Energie.<br/>\n      Ist der Vorrat dieser Karte leer? Wähle 1 anderen Spieler, der die oberste Karte\n      seines Ablagestapels zerstören darf.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Urzeitlicher Götze',\n    id: 'PrimordialFetish',\n    cost: 4,\n    effect: `\n      <p>\n      Bündele 1 Riss deiner Wahl (bei 1 Spieler deiner Wahl).\n        <span class=\"or\">ODER</span>\n      Zerstöre diese Karte und heile 3 Leben.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'WE',\n    name: 'Geforener Magmit',\n    id: 'FrozenMagmite',\n    cost: 3,\n    effect: `\n      <p>\n      Erhalte 2 <span class=\"aether\">&AElig;</span>.<br/>\n      Die nächste Karte, die du in deinem Zug erwirbst, darfst du oben auf dein\n      Deck legen.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'WE',\n    name: 'Magier-Totem',\n    id: 'MagesTotem',\n    cost: 2,\n    effect: `\n      <p>\n      Wähle und zerstöre 1 Artefakt oder 1 Kristall, den du gerade gespielt hast.\n        <span class=\"or\">ODER</span>\n      Zerstöre diese Karte. Die <i>Feste</i> heilt 1 Leben.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Afflict-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Heimsuchung',\n    effect: `\n      <p>\n        SPEZIAL 1.<br/>\n        Fügt 1 Spieler eurer Wahl 3 Schaden zu. Dieser Spieler darf 1 Karte seiner Wahl aus seinem\n        Ablagestapel zurück auf die Hand nehmen.\n      </p>\n    `,\n  },\n  {\n    id: 'CatacombDrone-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Katakomben-Drohne',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Ansturm:</b> SPEZIAL 1.<br/>\n        Fügt der <i>Feste der letzten Ruhe</i> 1 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Encroach-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Eindringen',\n    effect: `\n      <p>\n        SPEZIAL 1.<br/> \n        Seht euch die oberste Karte des Reihenfolgedecks an. Ist es eine Spieler-Reihenfolgekarte? Fügt genau diesem Spieler\n        2 Schaden zu.<br/>\n        <b>Andernfalls:</b> Fügt der <i>Feste der letzten Ruhe</i> 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'HeartofNothing-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Herz des Nichts',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Wirf 4 Karten deiner Wahl von der Hand ab.<br />\n        <br/>\n        <b>Zeit 2:</b> SPEZIAL 2.\n        <span class=\"or\">ODER</span>\n        Fügt 1 Spieler eurer Wahl 4 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'HowlingSpinners-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Jaulendes Gebein',\n    hp: 5,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Fügt 1 Spieler eurer Wahl 2 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'NightUnending-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Endlose Nacht',\n    power: 3,\n    effect: `\n      <p>\n        <b>Zeit 3:</b> Wählt den Spieler mit den meisten gebundenen Zaubern. Fügt der Feste X Schaden zu.\n        X = 2 je gebundenen Zauber dieses Spielers.\n      </p>\n    `,\n  },\n  {\n    id: 'Nix-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Ins Nichts',\n    effect: `\n      <p>\n        SPEZIAL 1.<br/>\n        Wählt einen Spieler. Fügt diesem Spieler 1 Schaden zu. Dann wählt dieser Spieler 1 Karte auf seiner\n        Hand mit den höchsten <span class=\"aether\">&AElig;</span>-Kosten und wirft sie ab.\n      </p>\n    `,\n  },\n  {\n    id: 'PlanarCollision-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Power',\n    name: 'Kollision der Ebenen',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Wähle 2 deiner gebundenen Zauber. Wirf sie ab.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 2.\n      </p>\n    `,\n  },\n  {\n    id: 'Thrash-WE',\n    expansion: 'WE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Zerschmettern',\n    effect: `\n      <p>\n        SPEZIAL 1. Werft insgesamt 2 Karten eurer Wahl von der Hand ab.\n      </p>\n    `,\n  },\n  {\n    id: 'AphoticSun-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Lichtlose Sonne',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 1. Wählt den Spieler mit der meisten Energie und werft alle seine Energie ab.\n        Fügt diesem Spieler 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'ChaosFlail-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Wüstes Chaos',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 2. Wählt 1 Spieler. Dieser legt seinen Ablagestapel auf sein Deck und mischt es. Dann sieht er\n        sich die 2 obersten Karten seines Decks an und zerstört die Karte mit den höchsten <span class=\"aether\">&AElig;</span>-Kosten\n        davon.\n      </p>\n    `,\n  },\n  {\n    id: 'MageEnder-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Magier-Vernichter',\n    hp: 9,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Wählt den Spieler mit den meisten aktiven Rissen. Fügt diesem Spieler 2 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Mangleroot-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Wurzel der Zerstörung',\n    hp: 12,\n    effect: `\n      <p>\n        <b>Ansturm:</b> Fügt der <i>Feste der letzten Ruhe</i> 3 Schaden zu. Dieses Monster erleidet 2 Schaden.\n      </p>\n    `,\n  },\n  {\n    id: 'MorbidGyre-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Power',\n    name: 'Tödlicher Mahlstrom',\n    power: 1,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 1:</b> SPEZIAL 2. Werft insgesamt 3 Karten eurer Wahl von der Hand ab.\n      </p>\n    `,\n  },\n  {\n    id: 'Mutilate-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Verstümmeln',\n    effect: `\n      <p>\n        SPEZIAL 1.<br/>\n        Wählt insgesamt 2 gebundene Zauber und werft sie ab. Fügt 1 Spieler eurer Wahl 2 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'NullScion-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Abkömmling der Leere',\n    hp: 11,\n    effect: `\n      <p>\n        <b>Ansturm:</b> SPEZIAL 1.\n      </p>\n    `,\n  },\n  {\n    id: 'Smite-WE',\n    expansion: 'WE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Niederschmettern',\n    effect: `\n      <p>\n        SPEZIAL 2.<br/>\n        Fügt der <i>Feste der letzten Ruhe</i> 2 Schaden zu.\n      </p>\n    `,\n  },\n\n  {\n    id: 'ApocalypseRitual-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Apokalyptisches Ritual',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 2:</b> Fügt der <i>Feste</i> 5 Schaden für jede Erzfeind-Reihenfolgekarte im Ablagestapel zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Banish-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Verbannen',\n    effect: `\n      <p>\n        SPEZIAL 2.<br/>\n        Wählt den Spieler mit den meisten gebundenen Zaubern. Fügt diesem Spieler X Schaden zu.\n        X = Anzahl gebundene Zauber dieses Spielers.\n      </p>\n    `,\n  },\n  {\n    id: 'CataclysmicFate-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Verheerendes Schicksal',\n    power: 1,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Wähle 1 deiner gebundenen Zauber mit <span class=\"aether\">&AElig;</span>-Kosten von 5 oder mehr. Zerstöre ihn und 1 Riss,\n        an den er gebunden ist.<br/>\n        <br/>\n        <b>Zeit 1:</b> Fügt dem Spieler mit dem geringsten übrigen Leben 4 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'MonstrosityofOmens-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Das Omen',\n    shields: 5,\n    hp: 0,\n    effect: `\n      <p>\n        <b>Dauerhaft:</b> Wenn du diesem MONSTER Schaden zufügst, fügst du nur 1 Schaden zu.<br />\n        <br />\n        <b>Ansturm:</b> Fügr der <i>Feste</i> Schaden in Höhe des aktuellen Lebens dieses MONSTERS zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Engulf-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Verschlingen',\n    effect: `\n      <p>\n        Nehmt den zuletzt abgelegten ANGRIFF im Erzfeind-Ablagestapel und führt ihn erneut aus.\n      </p>\n    `,\n  },\n  {\n    id: 'Quell-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Bändigen',\n    effect: `\n      <p>\n        Fügt der <i>Feste der letzten Ruhe</i> 7 Schaden zu.\n        <span class=\"or\">ODER</span>\n        SPEZIAL 3.\n      </p>\n    `,\n  },\n  {\n    id: 'Throttle-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Erdrosseln',\n    effect: `\n      <p>\n        SPEZIAL 2.<br/>\n        Wählt 1 Spieler. Dieser Spieler zerstört 3 Karten seiner Wahl auf der Hand mit den höchsten <span class=\"aether\">&AElig;</span>-Kosten.\n      </p>\n    `,\n  },\n  {\n    id: 'WitheringBeam-WE',\n    expansion: 'WE',\n    tier: 3,\n    type: 'Power',\n    name: 'Vernichtender Strahl',\n    power: 2,\n    effect: `\n      <p>\n        <b>Zeit 2:</b> SPEZIAL 2. Wählt die ingesamt 2 gebundenen Zauber mit den höchsten <span class=\"aether\">&AElig;</span>-Kosten. Zerstört sie.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { basicNemesisCards } from './basicNemesisCards'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const promosData: IExpansion = {\n  id: 'promos',\n  name: 'Promos',\n  type: 'promo',\n  mages,\n  nemeses,\n  cards,\n  treasures,\n  basicNemesisCards,\n  upgradedBasicNemesisCards,\n}\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'In Flammen ertrinken',\n    id: 'DrownInFlames',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 4 Schaden zu.<br />\n        Wiederhole das, wenn du 2 Energie abwirfst.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Flüchtiger Blick',\n    id: 'FleetingVision',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 2 Schaden zu.<br />\n        <b>Jeder Spieler:</b> Sieh dir die 2 obersten Karten deines\n\t\tDecks an. Du darfst sie jeweils abwerfen.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Splitter-Geschoss',\n    id: 'SplinterMissile',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Wirken:</b> Füge 4 Schaden zu.<br />\n        Wirft 1 anderer Spieler deiner Wahl 1 Karte\n\t\tvon seiner Hand ab?\n\t\tDer Schaden ist nun aufteilbar.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Echo Stone',\n    id: 'EchoStone',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        If you have played another Echo Stone this turn, gain an additional \n        1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Thieving Spirit',\n    id: 'ThievingSpirit',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br />\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Fractured Quartz',\n    id: 'FracturedQuartz',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may destroy two cards in this card's supply pile. If you do, \n        gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Rock Launcher',\n    id: 'RockLauncher',\n    cost: 3,\n    effect: `\n      <p>\n        Discard or destroy a card in hand. If you do, deal damage equal to its cost.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Abacus of Ignition',\n    id: 'AbacusOfIgnition',\n    cost: 4,\n    effect: `\n      <p>\n        You may casdt any ally's prepped spell.<br />\n        Any ally draws a card.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Illuminating Flame',\n    id: 'IlluminatingFlame',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br/>\n        If this was cast from an opened III or IV breach, you may destroy this.\n        If you do, gain 3 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Chronal Arc',\n    id: 'ChronalArc',\n    cost: 7,\n    effect: `\n      <p>\n        This spell must be prepped to two adjacent breaches so that this card \n        touches both breaches. This fully occupies both breaches.<br />\n        <b>Cast:</b> Deal 4 damage.<br />\n        You may place this card into your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Coruscating Sapal',\n    id: 'CoruscatingSapal',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may lose 1 charge. If you do, \n        gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Humming Shell',\n    id: 'HummingShell',\n    cost: 7,\n    effect: `\n      <p>\n        Destroy up to two cards in hand or discard pile.\n        <span class=\"or\">OR</span>\n        Gain 2 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Force Catalyst',\n    id: 'ForceCatalyst',\n    cost: 4,\n    effect: `\n      <p>\n        While prepped, during you main phase you may spend 3 <span class=\"aether\">&AElig;</span> \n        to cast any player's prepped spell.<br />\n        <b>Cast:</b> Deal 3 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'ReevesRavenShard',\n    name: \"Reeve's Raven Shard\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>. You may discard a card in \n        hand. If you do, gain and additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'NymsVision',\n    name: \"Nym's Vision\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Reveal the top card of the nemesis deck. If you revealed an attack, gain \n        2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'SparrowsAid',\n    name: \"Sparrow's Aid\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Any ally may prep a spell in hand to their opened or closed breach(es).\n      </p>\n    `,\n  },\n  {\n    id: 'WraithsEssence',\n    name: \"Wraith's Essence\",\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        When a player becomes exhausted, do not resolve any on-exhaust effects.<br />\n        <br />\n        The players do not lose when all players are exhausted.\n      </p>\n    `,\n  },\n  {\n    id: 'VolatileClasp',\n    name: 'Volatile Clasp',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        When you play a relic that costs 4 <span class=\"aether\">&AElig;</span> \n        or more, any ally gains 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'BreachStabilizer',\n    name: 'Breach Stabilizer',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        Any number of Sparks may be prepped to your I breach.\n      </p>\n    `,\n  },\n  {\n    id: 'FangedChoker',\n    name: 'Fanged Choker',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the end of your draw phase, if the total cost of spells in your hand \n        is 6 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n    `,\n  },\n  {\n    id: 'EndlessBandolier',\n    name: 'Endless Bandolier',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        Once per turn during your main phase you may discard a card in hand. \n        If you do, deal 1 damage and gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'SahalasBlackMeteorite',\n    name: \"Sahala's Black Meteorite\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to focus \n        or open your IV breach.\n      </p>\n    `,\n  },\n  {\n    id: 'NooksMysticFlourish',\n    name: \"Nook's Mystic Flourish\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        Cast a spell in your hand. If that spell costs 1 <span class=\"aether\">&AElig;</span> \n        or more, return that spell to its supply pile, gain a spell from any supply pile that \n        costs less than the cast spell, and gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'RitualStaff',\n    name: 'Ritual Staff',\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        When a player gains a card that costs 7 <span class=\"aether\">&AElig;</span> or more, \n        add a power token to this card.<br />\n        <br />\n        At the start of the nemesis turn if the nemesis has exactly one turn order card \n        in the turn order discard pile, the nemesis suffers damage equal to the number \n        of tokens on this card.\n      </p>\n    `,\n  },\n  {\n    id: 'CrownOfFangs',\n    name: 'Crown Of Fangs',\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        At the start of the game, set this next to a spell supply pile that costs \n        6 <span class=\"aether\">&AElig;</span> or more. These cards cost player's 1 less \n        <span class=\"aether\">&AElig;</span> to gain.\n      </p>\n    `,\n  },\n  {\n    id: 'EverfullPurse',\n    name: 'Everfull Purse',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the end of your draw phase, if the total cost of gems and relics in your hand \n        is 7 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n    `,\n  },\n  {\n    id: 'ArcaneTimepiece',\n    name: 'Arcane Timepiece',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain 2 charges.<br />\n        <br />\n        Once per game when the nemesis turn order card is drawn, you may lose 4 charges. \n        If you do, skip the nemesis turn.\n      </p>\n    `,\n  },\n  {\n    id: 'BootsOfArcaneQuickening',\n    name: 'Boots Of Arcane Quickening',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain 4 <span class=\"aether\">&AElig;</span> \n        that can only be used to gain a spell.\n      </p>\n    `,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Menace-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Dunkle Bedrohung',\n    effect: `\n      <p>\n        Werft insgesamt 4 Karten eurer Wahl von der Hand ab.\n      </p>\n    `,\n  },\n  {\n    id: 'GlyphEnigma-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Glyph Enigma',\n    hp: 7,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehod suffers 1 damage. If the nemesis tier is 2 or higher, Gravehold suffers 2 additional damage.\n      </p>\n    `,\n  },\n  {\n    id: 'GravitySplinter-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Schwerefeld-Splitter',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 2. Wählt den Spieler mit den wenigsten aktiven Rissen und fügt ihm 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'WorldPurge-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Power',\n    name: 'Schleier der Welt',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Bezahle 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 3.\n        <span class=\"or\">ODER</span>\n        Fügt der <i>Feste der letzten Ruhe</i> 7 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Bane Sire',\n    hp: 6,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'Decimate-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Hinraffen',\n    effect: `\n      <p>\n        SPEZIAL 2 und wählt 1 Spieler der 2 Energie erhält.\n        <span class=\"or\">ODER</span>\n        Fügt der <i>Feste der letzten Ruhe</i> 4 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'SpiritCage-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    name: 'Eingekerkerte Seele',\n    power: 3,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Wirf 1 Karte deiner Wahl mit <span class=\"aether\">&AElig;</span>-Kosten von 5 oder mehr von deiner Hand ab.<br />\n        <br />\n        <b>Power 3:</b> SPEZIAL 2. Wählt 1 Spieler, der 1 Zauber seiner Wahl von seiner Hand abwirft.\n      </p>\n    `,\n  },\n  {\n    id: 'BanefulCrux-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Verheerende Rache',\n    power: 2,\n    effect: `\n      <p>\n        <b>Verhindern:</b> Wirf 2 Karten deiner Wahl mit <span class=\"aether\">&AElig;</span>-Kosten von 4 oder mehr von deiner Hand ab.<br />\n        <br />\n        <b>Zeit 2:</b> SPEZIAL 2. Fügt der <i>Feste der letzten Ruhe</i> 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Negate-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    name: 'Zunichte machen',\n    effect: `\n      <p>\n        SPEZIAL 2.<br />\n        Wählt 1 Spieler, der 1 Karte auf seiner Hand mit den höchsten <span class=\"aether\">&AElig;</span>-Kosten zerstört.\n        <span class=\"or\">ODER</span>\n        SPEZIAL 2. Fügt der <i>Feste der letzten Ruhe</i> 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Gallowskulk-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Minion',\n    name: 'Knochennager',\n    hp: 10,\n    effect: `\n      <p>\n        Fügt dem Spieler mit dem geringsten übrigen Leben 3 Schaden zu.\n      </p>\n    `,\n  },\n  {\n    id: 'Unmake-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Attack',\n    name: 'Aus den Welten bannen',\n    effect: `\n      <p>\n        SPEZIAL 2.<br />\n        Wählt 1 Spieler, der die 3 obersten Karten seines Decks zerstört. Fügt diesem Spieler 3 Schaden zu.\n      </p>\n    `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'Writhe',\n    name: 'Writhe',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Any player suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BubblingRuin',\n    name: 'Bubbling Ruin',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash. Any player discards three cards in hand. \n        Gravehold suffers 2 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SweepingBlackness',\n    name: 'Sweeping Blackness',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Gravehold suffers 4 damage.<br />\n        <br />\n        Any player loses 2 charges and discards two cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'TwistingFlesh',\n    name: 'Twisting Flesh',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. Any player suffers 3 damage. That player gains \n        a Cursed Manacles from the Curse deck and places it on top of their deck.\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { IExpansionData } from '../../../aer-types/types'\n\nimport { aeonsEndData } from './aeonsEnd'\nimport { promosData } from './promos'\n\nconst RU: IExpansionData = {\n  AE: aeonsEndData,\n  // Depths: theDepthsData,\n  // Nameless: theNamelessData,\n  // OD: outerDarkData,\n  // TV: theVoidData,\n  // WE: warEternalData,\n  promos: promosData,\n}\n\nexport default RU\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\n\nexport const aeonsEndData: IExpansion = {\n  id: 'AE',\n  name: 'Конец вечности',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'AE',\n    name: 'Панцирная королева',\n    id: 'CarapaceQueen',\n    health: 60,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Кривая маска',\n    id: 'CrookedMask',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Князь пожирателей',\n    id: 'PrinceOfGluttons',\n    health: 70,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'AE',\n    name: 'Гневородье',\n    id: 'Rageborne',\n    health: 70,\n    difficulty: 2,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'AE',\n    name: 'Адельхейм',\n    id: 'Adelheim',\n    mageTitle: 'Маг разломов, оружейник',\n    ability: `\n        <h2>Эфирный страж</h2>\n        <p class=\"ability-activation\">Активируется в фазе добора исчадия.</p>\n        <p>\n            Когда из колоды исчадия берётся карта атаки или силы, вы можете\n            сбросить её до применения эффектов.\n            <span class=\"hint\">(Другую карту взамен брать не нужно.)</span>\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Осколок аметиста',\n        expansion: 'AE',\n        id: 'AmethystShard',\n        cost: 0,\n        effect: `\n            <p>\n              Получите 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Любой союзник может взять 1 карту из своей колоды, а затем\n              сбросить 1 карту из руки.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Брама',\n    id: 'Brama',\n    mageTitle: 'Маг разломов, старейшина',\n    ability: `\n        <h2>Полная чаша</h2>\n        <p class=\"ability-activation\">Активируется в вашей основной фазе.</p>\n        <p>Любой игрок получает 4 жизни.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Погребённый свет',\n        expansion: 'AE',\n        id: 'BuriedLight',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Произнесение:</b> нанесите 1 урон.<br/>\n              Получите 1 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Цзянь',\n    id: 'Jian',\n    mageTitle: 'Маг разломов, сирота',\n    ability: `\n        <h2>Чёрное зеркало</h2>\n        <p class=\"ability-activation\">Активируется в вашей основной фазе.</p>\n        <p>Произнесите подготовленное заклинание любого игрока, не сбрасывая его.</p>\n        <p>Затем произнесите его снова.\n        <span class=\"hint\">(И сбросьте его как обычно.)</span></p>\n      `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Осколок лунного камня',\n        expansion: 'AE',\n        id: 'MoonstoneShard',\n        cost: 0,\n        effect: `\n            <p>\n              Получите 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Получите ещё 1 <span class=\"aether\">&AElig;</span> который можно\n              потратить только на получение самоцвета.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Кадир',\n    id: 'Kadir',\n    mageTitle: 'Маг разломов, исследовательница',\n    ability: `\n        <h2>Потусторонние врата</h2>\n        <p class=\"ability-activation\">Активируется в основной фазе любого игрока.</p>\n        <p>\n            Этот игрок может вернуть до 3 заклинаний из своей стопки сброса в\n            руку. На текущем ходу этот игрок может подготовить в каждом своём\n            открытом разломе до 2 заклинаний.\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Осколок изумруда',\n        expansion: 'AE',\n        id: 'EmeraldShard',\n        cost: 0,\n        effect: `\n            <p>\n              Получите 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">или</span>\n              Любой игрок получает 1 жизнь.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Лэш',\n    id: 'Lash',\n    mageTitle: 'Маг разломов, разведчик',\n    ability: `\n        <h2>Быстрый ум</h2>\n        <p class=\"ability-activation\">Активируется в основной фазе любого игрока.</p>\n        <p>\n            Замешайте карту очерёдности хода любого игрока в колоду очерёдности\n            хода. Этот игрок получает 1 урон.\n            <span class=\"hint\">(Нельзя выбрать карту очерёдности хода \"Любой игрок\".)</span>\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Осколок кварца',\n        expansion: 'AE',\n        id: 'QuartzShard',\n        cost: 0,\n        effect: `\n            <p>\n              Получите 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Откройте верхнюю карту колоды очерёдности хода. Можете положить её\n              на верх или под низ колоды очерёдности хода. Если это была карта\n              игрока, получите ещё 1 <span class=\"aether\">&AElig;</span>.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Дымка',\n    id: 'Mist',\n    mageTitle: 'Маг разломов, кинжальный капитан',\n    ability: `\n        <h2>Divine Augury</h2>\n        <p class=\"ability-activation\">Активируется в вашей основной фазе.</p>\n        <p>Любой союзник берёт 4 карты из своей колоды.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Осколок граната',\n        expansion: 'AE',\n        id: 'Garnet Shard',\n        cost: 0,\n        effect: `\n            <p>\n              Получите 1 <span class=\"aether\">&AElig;</span>.\n              <span class=\"or\">или</span>\n              Произнесите подготовленное заклинание любого игрока.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Фаэдракса',\n    id: 'Phaedraxa',\n    mageTitle: 'Маг разломов, провидица',\n    ability: `\n        <h2>Руна прорицателя</h2>\n        <p class=\"ability-activation\">Активируется сразу после взятия карты очерёдности хода.</p>\n        <p>Отмените весь урон, который в течении этого хода должны получить игроки и Грейвхолд.</p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Осколок турмалина',\n        expansion: 'AE',\n        id: 'TourmalineShard',\n        cost: 0,\n        effect: `\n            <p>\n              Получите 1 <span class=\"aether\">&AElig;</span>.<br/>\n              Любой союзник может получить 1 урон. Если он делает это, то\n              уничтожает 1 карту из руки.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n  {\n    expansion: 'AE',\n    name: 'Заксос',\n    id: 'Xaxos',\n    mageTitle: 'Маг разломов, адепт',\n    ability: `\n        <h2>Метафизическая связь</h2>\n        <p class=\"ability-activation\">Активируется в основной фазе любого игрока.</p>\n        <p>\n            Союзники совместно получают 4 энергии. Откройте оставшиеся карты из\n            колоды очерёдности хода и верните их обратно в любом порядке.\n        </p>\n      `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Вспышка',\n        expansion: 'AE',\n        id: 'Flare',\n        cost: 0,\n        effect: `\n            <p>\n              <b>Произношение:</b> откройте верхнюю карту колоды очерёдности\n              хода и верните её на верх колоды очерёдности хода. Если это была\n              карта игрока, нанесите 3 урона. Если нет, нанесите 1 урон.\n            </p>\n          `,\n        keywords: [],\n      },\n    ],\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Скопление алмазов',\n    id: 'DiamondCluster',\n    cost: 4,\n    effect: `\n        <p>\n          Получите 2 <span class=\"aether\">&AElig;</span>.<br/>\n          Если на этом ходу вы второй раз разыгрываете \"Скопление алмазов\",\n          получите ещё 2 <span class=\"aether\">&AElig;</span>.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Дуга хаоса',\n    id: 'ChaosArc',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Произнесение:</b> нанесите 3 урона.<br/>\n        Нанесите ещё по 2 урона за каждое подготовленное заклинание в соседних разломах.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Воспламенение',\n    id: 'Ignite',\n    cost: 4,\n    effect: `\n        <p>\n          <b>Произнесение:</b> нанесите 2 урона.<br/>\n          Любой союзник получает 1 энергию.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Кража духа',\n    id: 'EssenceTheft',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Произнесение:</b> нанесите 3 урона.<br/>\n          Можете сбросить 1 карту из руки. Если вы делаете это, любой игрок\n          получает 1 жизнь.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Жгучий рубин',\n    id: 'SearingRuby',\n    cost: 4,\n    effect: `\n      <p>\n        Получите 2 <span class=\"aether\">&AElig;</span>.<br/>\n        Получите ещё 1 <span class=\"aether\">&AElig;</span>, который можно\n        потратить только на получение заклинания.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Хищная молния',\n    id: 'FeralLightning',\n    cost: 5,\n    effect: `\n        <p>\n          Это заклинание можно подготовить в закрытом разломе, не настраивая его.<br/>\n          <b>Произнесение:</b> нанесите 3 урона.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Планарное озарение',\n    id: 'PlanarInsight',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Произнесение:</b> нанесите 2 урона.<br/>\n        Нанесите ещё по 1 урону за каждый ваш открытый разлом.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Спектральное эхо',\n    id: 'SpectralEcho',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Произнесение:</b> нанесите 2 урона.<br/>\n          Можете уничтожить 1 карту из руки.\n        </p>\n          `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Горящий опал',\n    id: 'BurningOpal',\n    cost: 5,\n    effect: `\n      <p>\n        Получите 3 <span class=\"aether\">&AElig;</span>.<br/>\n        Можете сбросить 1 карту из руки. Если вы делаете это, любой союзник берёт\n        1 карту из своей колоды.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Поглощающая пустота',\n    id: 'ConsumingVoid',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Произнесение:</b> уничтожьте до 2 карт из руки.<br/>\n        Нанесите по 3 урона за каждую уничтоженную таким образом карту.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Нестабильная призма',\n    id: 'UnstablePrism',\n    cost: 3,\n    effect: `\n      <p>\n        Разыграйте самоцвет из руки 2 раза и уничтожьте его.\n        <span class=\"or\">или</span>\n        Получите 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Дымчатый сапфир',\n    id: 'CloudedSapphire',\n    cost: 6,\n    effect: `\n      <p>\n        Получите 3 <span class=\"aether\">&AElig;</span>.<br/>\n        Если на этом ходу вы впервые разыгрываете \"Дымчатый сапфир\", любой союзник\n        получает 1 энергию.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Талисман мага',\n    id: 'MagesTalisman',\n    cost: 5,\n    effect: `\n      <p>\n        Получите 1 энергию.<br/>\n        Любой союзник получает 1 энергию.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Изменчивый кинжал',\n    id: 'FlexingDagger',\n    cost: 2,\n    effect: `\n      <p>\n        Следующая настройка или открытие разлома на этом ходу будет стоить вам\n        на 3 <span class=\"aether\">&AElig;</span> меньше.\n        <span class=\"or\">или</span>\n        Уничтожьте эту карту. Нанесите 1 урон.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Лавовый узор',\n    id: 'LavaTendril',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Подготовка:</b> в конце вашей фазы заклинаний нанесите 1 урон.<br/>\n        <b>Произнесение:</b> нанесите 3 урона.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Закупоренный вихрь',\n    id: 'BottledVortex',\n    cost: 3,\n    effect: `\n      <p>\n        Уничтожьте эту карту.<br/>\n        Уничтожьте до 2 карт из руки или стопки сброса.<br/>\n        Возьмите 1 карту из вашей колоды.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Мистические узы',\n    id: 'ArcaneNexus',\n    cost: 7,\n    effect: `\n      <p>\n        <b>Подготовка:</b> один раз в основной фазе вашего хода можете вернуть\n        в руку самоцвет, разыгранный на этом ходу.<br/>\n        <b>Произнесение:</b> нанесите 4 урона.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Тёмный огонь',\n    id: 'DarkFire',\n    cost: 5,\n    effect: `\n        <p>\n          <b>Произнесение:</b> сбросьте до 2 карт из руки.<br/>\n          Нанесите по 3 урона за каждую сброшенную таким образом карту.\n        </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Пламя феникса',\n    id: 'PhoenixFlame',\n    cost: 3,\n    effect: `\n        <p>\n          <b>Произнесение:</b> нанесите 2 урона.<br/>\n          Можете потерять 1 энергию, чтобы нанести ещё 2 урона.\n        </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Нефрит',\n    id: 'Jade',\n    cost: 2,\n    effect: `\n      <p>\n        Получите 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Усиление видения',\n    id: 'AmplifyVision',\n    cost: 4,\n    effect: `\n      <p>\n        <b>Произнесение:</b> настройте ваш закрытый разлом с наименьшей\n        стоимостью настройки.<br/>\n        Нанесите 2 урона. Если все ваши разломы открыты, нанесите ещё 1 урон.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Врисвудский янтарь',\n    id: 'VriswoodAmber',\n    cost: 3,\n    effect: `\n      <p>\n        Получив эту карту, можете положить её на верх вашей колоды.<br/>\n        Получите 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Взрывной посох',\n    id: 'BlastingStaff',\n    cost: 4,\n    effect: `\n      <p>\n        Можете произнести заклинание, подготовленное на этом ходу.<br />\n        Если вы делаете это, оно наносит на 2 урона больше.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'AE',\n    name: 'Очищающая жемчужина',\n    id: 'SiftersPearl',\n    cost: 3,\n    effect: `\n      <p>\n        Получите 2 <span class=\"aether\">&AElig;</span>.<br/>\n        Каждый игрок открывает верхнюю карту своей колоды и либо сбрасывает её,\n        либо возвращает на верх своей колоды.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Огненный хлыст',\n    id: 'WildfireWhip',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Подготовка:</b> в основной фазе вашего хода можете потратить 2 <span class=\"aether\">&AElig;</span>,\n        чтобы произнести подготовленное заклинание любого игрока.<br/>\n        <b>Произнесение:</b> нанесите 4 урона.\n      </p>\n      `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'AE',\n    name: 'Шар концентрации',\n    id: 'FocusingOrb',\n    cost: 4,\n    effect: `\n      <p>\n        Настройте разлом любого игрока.\n        <span class=\"or\">или</span>\n        Уничтожьте эту карту, при этом Грейвхолд получает 3 жизни.\n      </p>\n        `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'AE',\n    name: 'Полёт забвения',\n    id: 'OblivionSwell',\n    cost: 5,\n    effect: `\n      <p>\n        один раз в основной фазе вашего хода можете получить 1 <span class=\"aether\">&AElig;</span>.<br/>\n        <b>Произнесение:</b> нанесите 2 урона.<br/>\n        Можете сбросить самоцвет из руки. Если вы делаете это, нанесите\n        дополнительный урон, равный стоимости самоцвета.\n      </p>\n      `,\n    keywords: [],\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'AgonyField-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Поле агонии',\n    power: 2,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b> уничтожьте 1 карту из руки стоимостью 2 <span class=\"aether\">&AElig;</span> или более.<br />\n        <br />\n        <b>СИЛА 2:</b> натиск. Любой игрок сбрасывает 3 карты из руки, а затем берёт 1 карту из своей колоды.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Гибельный властитель',\n    hp: 6,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b> натиск.\n      </p>\n    `,\n  },\n  {\n    id: 'BleedStatic-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Кровоточащая неподвижность',\n    power: 3,\n    effect: `\n      <p>\n        <b>СИЛА 3:</b> игрок с наибольшим числом подготовленных заклинаний\n        получает по 2 урона за каждое из них.\n      </p>\n    `,\n  },\n  {\n    id: 'EyeofNothing-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Око небытия',\n    power: 2,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b> потратьте 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>СИЛА 2:</b> натиск 2 раза.\n      </p>\n    `,\n  },\n  {\n    id: 'HazeSpewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Minion',\n    name: 'Туманный изрыгатель',\n    hp: 5,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b>\n        Грейвхолд получает столько урона, сколько жизней сейчас у этого\n        приспешника. Затем этот приспешник получает 1 урон.\n      </p>\n    `,\n  },\n  {\n    id: 'Skewer-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Резня',\n    effect: `\n      <p>\n        Натиск. Любой игрок получает 3 урона и берёт 1 карту из своей колоды.\n      </p>\n    `,\n  },\n  {\n    id: 'Slaughter-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Attack',\n    name: 'Бойня',\n    effect: `\n      <p>\n        Натиск. Грейвхолд получает 3 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'WovenSky-AE',\n    expansion: 'AE',\n    tier: 1,\n    type: 'Power',\n    name: 'Сотканное небо',\n    power: 2,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b> сбросьте 3 карты с руки.<br />\n        <br />\n        <b>СИЛА 2:</b> натиск. Любой игрок получает 4 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'Awaken-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Пробуждение',\n    effect: `\n      <p>\n        Натиск 2 раза, и Грейвхолд получает 3 урона. \n        <span class=\"or\">или</span>\n        Верните последнего сброшенного приспешника из стопки сброса исчадия\n        обратно в игру.\n      </p>\n    `,\n  },\n  {\n    id: 'Cauterizer-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Прижигатель',\n    shields: 3,\n    hp: 0,\n    effect: `\n      <p>\n        Нанося урон этому приспешнику, уменьшайте этот урон до 1.<br />\n        <br />\n        <b>ПОСТОЯННО:</b> Любой игрок получает столько урона, сколько жизней\n        сейчас у этого приспешника.\n      </p>\n    `,\n  },\n  {\n    id: 'Dispel-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Рассеивание чар',\n    effect: `\n      <p>\n        Натиск 2 раза. Игрок с наибольшим числом подготовленных заклинаний\n        сбрасывает самое дорогое из них.\n      </p>\n    `,\n  },\n  {\n    id: 'Needlemaw-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Иглозуб',\n    hp: 11,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b> Грейвхолд получает 2 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'LayWaste-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Attack',\n    name: 'Опустошение',\n    effect: `\n      <p>\n        Натиск 2 раза. Любой игрок получает 2 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'PulverizingRay-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Power',\n    name: 'Распыляющий луч',\n    power: 1,\n    effect: `\n      <p>\n        <b>СИЛА 1:</b> Грейвхолд получает 3 урона.<br />\n        <br />\n        <span class=\"or\">или</span><br />\n        <br />\n        Любой игрок сбрасывает самоцвет с руки.<br />\n        <br />\n        Разыграйте этот эффект ещё 5 раз.\n      </p>\n    `,\n  },\n  {\n    id: 'Venomite-AE',\n    expansion: 'AE',\n    tier: 2,\n    type: 'Minion',\n    name: 'Отрава',\n    hp: 9,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b> игрок с наименьшим числом жизней получает 2 урона. \n        <span class=\"or\">или</span>\n        Любой игрок сбрасывает подготовленное заклинание стоимостью 3 <span class=\"aether\">&AElig;</span> или более.\n      </p>\n    `,\n  },\n  {\n    id: 'DoomAegis-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Роковая эгида',\n    power: 1,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b> потратьте 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>СИЛА 1:</b> игрок с наибольшим числом энергии получает 4 урона и\n        теряет всю энергию.\n      </p>\n    `,\n  },\n  {\n    id: 'GatherDarkness-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Скопление темноты',\n    effect: `\n      <p>\n        Любой игрок кладёт свою стопку сброса на верх своей колоды, перемешивает\n        её и уничтожает 4 верхние карты из своей колоды.<br />\n        Натиск 2 раза.\n      </p>\n    `,\n  },\n  {\n    id: 'JaggedOne-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Minion',\n    name: 'Изломанный',\n    hp: 14,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b> натиск 2 раза.\n      </p>\n    `,\n  },\n  {\n    id: 'Obliterate-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Уничтожение',\n    effect: `\n      <p>\n        Натиск 2 раза. Игрок с наибольшим числом открытых разломов уничтожает\n        4 карты из руки или получает 4 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'RealityRupture-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Power',\n    name: 'Разрыв реальности',\n    power: 1,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b> уничтожьте 2 подготовленных заклинания стоимостью 3 <span class=\"aether\">&AElig;</span> или более каждое.<br />\n        <br />\n        <b>СИЛА 1:</b> натиск 3 раза.\n      </p>\n    `,\n  },\n  {\n    id: 'Sunder-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Раскол',\n    effect: `\n      <p>\n        Грейвхолд и игрок с наименьшим числом жизней получают по 4 урона.\n        <span class=\"or\">или</span>\n        Замешайте все карты очерёдности хода \"Исчадие\" в колоду очерёдности хода.\n      </p>\n    `,\n  },\n  {\n    id: 'Topple-AE',\n    expansion: 'AE',\n    tier: 3,\n    type: 'Attack',\n    name: 'Наскок',\n    effect: `\n      <p>\n        Натиск 2 раза. Грейвхолд получает 4 урона.\n      </p>\n    `,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { treasures } from './treasures'\nimport { basicNemesisCards } from './basicNemesisCards'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const promosData: IExpansion = {\n  id: 'promos',\n  name: 'Промонабор',\n  type: 'promo',\n  mages,\n  nemeses,\n  cards,\n  treasures,\n  basicNemesisCards,\n  upgradedBasicNemesisCards,\n}\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = []\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = [\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Море огня',\n    id: 'DrownInFlames',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Произнесение:</b> нанесите 4 урона приспешнику или исчадию.<br />\n        Можете потерять 2 энергии, чтобы повторить этот эффект.<br />\n        <span class=\"hint\">\n            (Эффекты, модифицирующие урон, влияют на каждое применение этого заклинания.)\n        </span>\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Мимолётное видение',\n    id: 'FleetingVision',\n    cost: 3,\n    effect: `\n      <p>\n        <b>Произнесение:</b> нанесите 2 урона.<br />\n        Каждый игрок может открыть 2 верхние карты своей колоды\n        и сбросить любое число из них.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Веер осколков',\n    id: 'SplinterMissile',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Произнесение:</b> нанесите 4 урона.<br />\n        Любой союзник может сбросить 1 карту из руки. Если он делает это, можете\n        распределить этот урон между исчадием и любым количеством приспешников в\n        любом сочетании.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Камень эхо',\n    id: 'EchoStone',\n    cost: 4,\n    effect: `\n      <p>\n        Получите 2 <span class=\"aether\">&AElig;</span>.<br />\n        Если на этом ходу вы уже играли другой \"Камень эхо\", получите ещё \n        1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Thieving Spirit',\n    id: 'ThievingSpirit',\n    cost: 5,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 4 damage.<br />\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Fractured Quartz',\n    id: 'FracturedQuartz',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may destroy two cards in this card's supply pile. If you do, \n        gain an additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Rock Launcher',\n    id: 'RockLauncher',\n    cost: 3,\n    effect: `\n      <p>\n        Discard or destroy a card in hand. If you do, deal damage equal to its cost.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Abacus of Ignition',\n    id: 'AbacusOfIgnition',\n    cost: 4,\n    effect: `\n      <p>\n        You may casdt any ally's prepped spell.<br />\n        Any ally draws a card.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Illuminating Flame',\n    id: 'IlluminatingFlame',\n    cost: 6,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 5 damage.<br/>\n        If this was cast from an opened III or IV breach, you may destroy this.\n        If you do, gain 3 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Chronal Arc',\n    id: 'ChronalArc',\n    cost: 7,\n    effect: `\n      <p>\n        This spell must be prepped to two adjacent breaches so that this card \n        touches both breaches. This fully occupies both breaches.<br />\n        <b>Cast:</b> Deal 4 damage.<br />\n        You may place this card into your hand.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Coruscating Sapal',\n    id: 'CoruscatingSapal',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.<br />\n        You may lose 1 charge. If you do, \n        gain an additional 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Humming Shell',\n    id: 'HummingShell',\n    cost: 7,\n    effect: `\n      <p>\n        Destroy up to two cards in hand or discard pile.\n        <span class=\"or\">OR</span>\n        Gain 2 charges.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Force Catalyst',\n    id: 'ForceCatalyst',\n    cost: 4,\n    effect: `\n      <p>\n        While prepped, during you main phase you may spend 3 <span class=\"aether\">&AElig;</span> \n        to cast any player's prepped spell.<br />\n        <b>Cast:</b> Deal 3 damage.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Gem',\n    expansion: 'promos',\n    name: 'Talusoid Clod',\n    id: 'TalusoidClod',\n    cost: 4,\n    effect: `\n      <p>\n        Gain 2 <span class=\"aether\">&AElig;</span>.\n      </p>\n      <p>\n\t<b>Recall:</b> You may suffer 2 damage to return this to your hand.\n      </p>\n    `,\n    keywords: ['recall'],\n  },\n  {\n    type: 'Relic',\n    expansion: 'promos',\n    name: 'Chronophage Coil',\n    id: 'ChronophageCoil',\n    cost: 8,\n    effect: `\n      <p>\n        Destroy this.<br />\n\tShuffle any player's turn order card into the turn order deck.\n      </p>\n    `,\n    keywords: [],\n  },\n  {\n    type: 'Spell',\n    expansion: 'promos',\n    name: 'Parasitic Force',\n    id: 'ParasiticForce',\n    cost: 8,\n    effect: `\n      <p>\n        You may prep this to any player's opened breach.<br />\n\t<b>Cast:</b> Deal 6 damage.<br />\n\tYou may destroy up to two cards in your hand or discard pile.\n      </p>\n    `,\n    keywords: [],\n  },\n]\n","import { Treasure } from '../../../../aer-types/types'\n\nexport const treasures: Treasure[] = [\n  {\n    id: 'ReevesRavenShard',\n    name: \"Reeve's Raven Shard\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>. You may discard a card in \n        hand. If you do, gain and additional 1 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'NymsVision',\n    name: \"Nym's Vision\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Spell',\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Reveal the top card of the nemesis deck. If you revealed an attack, gain \n        2 <span class=\"aether\">&AElig;</span>.\n      </p>\n    `,\n  },\n  {\n    id: 'SparrowsAid',\n    name: \"Sparrow's Aid\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.<br />\n        Any ally may prep a spell in hand to their opened or closed breach(es).\n      </p>\n    `,\n  },\n  {\n    id: 'WraithsEssence',\n    name: \"Wraith's Essence\",\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        When a player becomes exhausted, do not resolve any on-exhaust effects.<br />\n        <br />\n        The players do not lose when all players are exhausted.\n      </p>\n    `,\n  },\n  {\n    id: 'VolatileClasp',\n    name: 'Volatile Clasp',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        When you play a relic that costs 4 <span class=\"aether\">&AElig;</span> \n        or more, any ally gains 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'BreachStabilizer',\n    name: 'Breach Stabilizer',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        Any number of Sparks may be prepped to your I breach.\n      </p>\n    `,\n  },\n  {\n    id: 'FangedChoker',\n    name: 'Fanged Choker',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the end of your draw phase, if the total cost of spells in your hand \n        is 6 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n    `,\n  },\n  {\n    id: 'EndlessBandolier',\n    name: 'Endless Bandolier',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        Once per turn during your main phase you may discard a card in hand. \n        If you do, deal 1 damage and gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'SahalasBlackMeteorite',\n    name: \"Sahala's Black Meteorite\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to focus \n        or open your IV breach.\n      </p>\n    `,\n  },\n  {\n    id: 'NooksMysticFlourish',\n    name: \"Nook's Mystic Flourish\",\n    expansion: 'promos',\n    level: 1,\n    subtype: 'Gem',\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n        Cast a spell in your hand. If that spell costs 1 <span class=\"aether\">&AElig;</span> \n        or more, return that spell to its supply pile, gain a spell from any supply pile that \n        costs less than the cast spell, and gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'RitualStaff',\n    name: 'Ritual Staff',\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        When a player gains a card that costs 7 <span class=\"aether\">&AElig;</span> or more, \n        add a power token to this card.<br />\n        <br />\n        At the start of the nemesis turn if the nemesis has exactly one turn order card \n        in the turn order discard pile, the nemesis suffers damage equal to the number \n        of tokens on this card.\n      </p>\n    `,\n  },\n  {\n    id: 'CrownOfFangs',\n    name: 'Crown Of Fangs',\n    expansion: 'promos',\n    level: 2,\n    effect: `\n      <p>\n        At the start of the game, set this next to a spell supply pile that costs \n        6 <span class=\"aether\">&AElig;</span> or more. These cards cost player's 1 less \n        <span class=\"aether\">&AElig;</span> to gain.\n      </p>\n    `,\n  },\n  {\n    id: 'EverfullPurse',\n    name: 'Everfull Purse',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the end of your draw phase, if the total cost of gems and relics in your hand \n        is 7 <span class=\"aether\">&AElig;</span> or more, draw a card.\n      </p>\n    `,\n  },\n  {\n    id: 'ArcaneTimepiece',\n    name: 'Arcane Timepiece',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain 2 charges.<br />\n        <br />\n        Once per game when the nemesis turn order card is drawn, you may lose 4 charges. \n        If you do, skip the nemesis turn.\n      </p>\n    `,\n  },\n  {\n    id: 'BootsOfArcaneQuickening',\n    name: 'Boots Of Arcane Quickening',\n    expansion: 'promos',\n    level: 3,\n    effect: `\n      <p>\n        At the start of your first turn of the game, gain 4 <span class=\"aether\">&AElig;</span> \n        that can only be used to gain a spell.\n      </p>\n    `,\n  },\n  {\n    id: 'IlyasTruliteOfForce',\n    name: \"Ilya's Trulite of Force\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span><br />\n\tAny ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that can only be used to gain a spell or to focus or open a breach.\n      </p>\n    `,\n  },\n  {\n    id: 'KelsTruliteOfEnergy',\n    name: \"Kel's Trulite of Energy\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span><br />\n\tAny ally may discard a card in hand. If they do, gain 1 <span class=\"aether\">&AElig;</span> that can only be used to gain a spell or to gain a gem or relic.\n      </p>\n    `,\n  },\n  {\n    id: 'QusCallOfTheVoid',\n    name: \"Qu's Call of the Void\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        While prepped, the first time you play a gem or relic that costs 1 <span class=\"aether\">&AElig;</span> or more each turn, play that card twice and then return it to the supply.\n      </p>\n      <p>\n\t<b>Cast:</b> Deal 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ThraxirsNamelessSiphon',\n    name: \"Thraxir's Nameless Siphon\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n\tAny ally may discard a card in hand. If they do, focus one of your breaches.\n      </p>\n    `,\n  },\n  {\n    id: 'CairnasInvigorate',\n    name: \"Cairna's Invigorate\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Return a spell in your discarad pile to your hand.\n      </p>\n    `,\n  },\n  {\n    id: 'DezmodiasEternalDarkness',\n    name: \"Dezmodia's Eternal Darkness\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        This may be prepped to closed breaches. <br />\n        <b>Cast:</b> Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to focus or open a breach.\n      </p>\n    `,\n  },\n  {\n    id: 'OhatsShowerOfCoals',\n    name: \"Ohat's Shower of Coals\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Suffer 1 damage and gain 2 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Deal 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'LuciensSunShard',\n    name: \"Lucien's Sun Shard\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.\n        <span class=\"or\">OR</span>\n        Gain 3 <span class=\"aether\">&AElig;</span> that can only be used to open a breach.\n      </p>\n    `,\n  },\n  {\n    id: 'RethsFossilizedRoze',\n    name: \"Reth's Fossilized Rose\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage.\n        <span class=\"or\">OR</span>\n        <b>Cast:</b> Discard a card in hand. If you do, gain a spell that costs 5 <span class=\"aether\">&AElig;</span> or less from any supply pile.\n      </p>\n    `,\n  },\n  {\n    id: 'TaqrensDefenseGlyphs',\n    name: \"Taqren's Defense Glyphs\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>.<br />\n\tYou may suffer 1 damge. If you do, gain 1 charge.\n      </p>\n    `,\n  },\n  {\n    id: 'ZhanasScimitar',\n    name: \"Z'hana's Scimitar\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        Gain 1 <span class=\"aether\">&AElig;</span>\n        <span class=\"or\">OR</span>\n        Place 2 <span class=\"aether\">&AElig;</span> tokens on top of any card in the supply. When any player gains that card, they gain the <span class=\"aether\">&AElig;</span> tokens on it.\n      </p>\n    `,\n  },\n  {\n    id: 'ArachnosSpellbook',\n    name: \"Arachnos's Speelbook\",\n    expansion: 'promos',\n    level: 1,\n    effect: `\n      <p>\n        <b>Cast:</b> Deal 1 damage. <br />\n\tIf you have two or more cards in hand that cost 4 <span class=\"aether\">&AElig;</span> or more, gain 1 charge.\n      </p>\n    `,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'Menace-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Угроза',\n    effect: `\n      <p>\n        Игроки совместно сбрасывают 4 карты.\n      </p>\n    `,\n  },\n  {\n    id: 'GlyphEnigma-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Энигма',\n    hp: 7,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b><br />\n        Грейвхолд получает 1 урон.<br />\n        Если ранг исчадия 2 или выше, грейвхолд получает ещё 2 урона.\n        <span class=\"hint\">\n            (Ранг исчадия равен рангу последней взятой карты исчадия.)\n        </span>\n      </p>\n    `,\n  },\n  {\n    id: 'GravitySplinter-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Расщеплённая гравитация',\n    power: 2,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b><br />\n        потратьте 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>СИЛА 2:</b><br />\n        натиск 2 раза.<br />\n        Игрок с наименьшим числом открытых разломов получает 3 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'WorldPurge-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Power',\n    name: 'Всемирное истребление',\n    power: 2,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b><br />\n        потратьте 8 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>СИЛА 2:</b><br />\n        натиск 3 раза.\n        <span class=\"or\">или</span>\n        Грейвхолд получает 7 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'BaneSire-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Minion',\n    name: 'Гибельный властитель',\n    hp: 6,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b><br />\n        натиск.\n      </p>\n    `,\n  },\n  {\n    id: 'Decimate-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    name: 'Казнь',\n    effect: `\n      <p>\n        Натиск 2 раза, и любой игрок получает 2 энергии.\n        <span class=\"or\">или</span>\n        Грейвхолд получает 4 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'SpiritCage-promos',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    name: 'Клетка духа',\n    power: 3,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b><br />\n        сбросьте карту из руки, которая стоит 5 <span class=\"aether\">&AElig;</span> или более.<br />\n        <br />\n        <b>СИЛА 3:</b><br />\n        натиск 2 раза. Любой игрок сбрасывает заклинание с руки.\n      </p>\n    `,\n  },\n  {\n    id: 'BanefulCrux-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    name: 'Гибельная суть',\n    power: 2,\n    effect: `\n      <p>\n        <b>ДЛЯ СБРОСА:</b><br />\n        сбросьте 2 карты из руки, каждая из которых стоит 4 <span class=\"aether\">&AElig;</span> или более.<br />\n        <br />\n        <b>СИЛА 2:</b><br />\n        натиск 2 раза. Грейвхолд получает 3 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'Negate-promos',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    name: 'Отрицание',\n    effect: `\n      <p>\n        Натиск 2 раза,<br />\n        и любой игрок уничтожает самую дорогую карту из руки.\n        <span class=\"or\">или</span>\n        Натиск 2 раза,<br />\n        и Грейвхолд получает 3 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'Gallowskulk-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Minion',\n    name: 'Скрытень',\n    hp: 10,\n    effect: `\n      <p>\n        <b>ПОСТОЯННО:</b><br />\n        игрок с наименьшим числом жизней получает 3 урона.\n      </p>\n    `,\n  },\n  {\n    id: 'Unmake-promos',\n    expansion: 'promos',\n    tier: 3,\n    type: 'Attack',\n    name: 'Стирание',\n    effect: `\n      <p>\n        Натиск 2 раза.<br />\n        Любой игрок уничтожает 3 верхние карты из своей колоды и получает 3 урона.\n      </p>\n    `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'Writhe',\n    name: 'Writhe',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice.<br />\n        <br />\n        Any player suffers 1 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BubblingRuin',\n    name: 'Bubbling Ruin',\n    expansion: 'promos',\n    tier: 1,\n    type: 'Power',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 3:</b> Unleash. Any player discards three cards in hand. \n        Gravehold suffers 2 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SweepingBlackness',\n    name: 'Sweeping Blackness',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Gravehold suffers 4 damage.<br />\n        <br />\n        Any player loses 2 charges and discards two cards in hand.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'TwistingFlesh',\n    name: 'Twisting Flesh',\n    expansion: 'promos',\n    tier: 2,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br />\n        <br />\n        <b>Power 1:</b> Unleash twice. Any player suffers 3 damage. That player gains \n        a Cursed Manacles from the Curse deck and places it on top of their deck.\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { ITurnOrderSetups, ITurnOrderCard } from '../../aer-types/types'\n\nexport const TURNORDERCARDS: { [key: string]: ITurnOrderCard } = {\n  'player1-1': { id: 'player1-1', name: 'Player 1', type: 'player1' },\n  'player1-2': { id: 'player1-2', name: 'Player 1', type: 'player1' },\n  'player1-3': { id: 'player1-3', name: 'Player 1', type: 'player1' },\n  'player1-4': { id: 'player1-4', name: 'Player 1', type: 'player1' },\n  'player1-alternating': {\n    id: 'player1-alternating',\n    name: 'Player 1 (alternate)',\n    type: 'player1',\n    alternate: true,\n  },\n\n  'player2-1': { id: 'player2-1', name: 'Player 2', type: 'player2' },\n  'player2-2': { id: 'player2-2', name: 'Player 2', type: 'player2' },\n\n  'player3-1': { id: 'player3-1', name: 'Player 3', type: 'player3' },\n  'player4-1': { id: 'player4-1', name: 'Player 4', type: 'player4' },\n\n  'player12-1': { id: 'player12-1', name: 'Player 1/2', type: 'player12' },\n  'player12-2': { id: 'player12-2', name: 'Player 1/2', type: 'player12' },\n  'player34-1': { id: 'player34-1', name: 'Player 3/4', type: 'player34' },\n  'player34-2': { id: 'player34-2', name: 'Player 3/4', type: 'player34' },\n\n  wild: { id: 'wild', name: 'Wild', type: 'wild' },\n  wildToken: { id: 'wildToken', name: 'Wild Token', type: 'wild-token' },\n\n  'nemesis-1': { id: 'nemesis-1', name: 'Nemesis', type: 'nemesis' },\n  'nemesis-2': { id: 'nemesis-2', name: 'Nemesis', type: 'nemesis' },\n\n  maelstrom: {\n    id: 'maelstrom',\n    name: 'Maelstrom Assault',\n    type: 'maelstrom',\n  },\n\n  blitz: {\n    id: 'blitz',\n    name: 'Blitz',\n    type: 'blitz',\n  },\n\n  thiefOfDreams: {\n    id: 'thiefOfDreams',\n    name: 'Thief Of Dreams Delirium',\n    type: 'thief-of-dreams',\n  },\n\n  myth: {\n    id: 'myth',\n    name: 'Myth',\n    type: 'myth',\n  },\n\n  bone: {\n    id: 'bone',\n    name: 'Bone',\n    type: 'bone',\n  },\n}\n\nexport const TURNORDERSETUPS: ITurnOrderSetups = {\n  onePlayer: {\n    id: 'onePlayer',\n    name: '1',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default (3 ToC)',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      '4toc': {\n        id: '4toc',\n        name: '4 ToC',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['player1-4'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      '34alternating': {\n        id: '34alternating',\n        name: '3/4 Cards alternating',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['player1-alternating'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  twoPlayers: {\n    id: 'twoPlayers',\n    name: '2',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player2-2'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  threePlayers: {\n    id: 'threePlayers',\n    name: '3',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['wild'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      wildToken: {\n        id: 'wildToken',\n        name: 'Wild Token',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['wildToken'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  fourPlayers: {\n    id: 'fourPlayers',\n    name: '4',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['player4-1'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      splitPlayers: {\n        id: 'splitPlayers',\n        name: 'Split Player Cards (1/2, 3/4)',\n        turnOrderCards: [\n          TURNORDERCARDS['player12-1'],\n          TURNORDERCARDS['player12-2'],\n          TURNORDERCARDS['player34-1'],\n          TURNORDERCARDS['player34-2'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n}\n","import * as types from '../../aer-types/types'\n\nexport const createNormalizedData = (\n  data: types.IExpansionData\n): types.NormalizedData => {\n  const expansions = Object.keys(data)\n\n  const normalize = (array: Array<any>) =>\n    array.reduce(\n      (acc, entity) => ({\n        entities: {\n          ...acc.entities,\n          [entity.id]: entity,\n        },\n        ids: [...acc.ids, entity.id],\n      }),\n      {\n        entities: {},\n        ids: [],\n      } as {\n        entities: { [key: string]: Object }\n        ids: string[]\n      }\n    )\n\n  return expansions.reduce(\n    (acc: types.NormalizedData, id: string) => {\n      const expansion = data[id]\n      const nemeses = normalize(expansion.nemeses)\n      const mages = normalize(expansion.mages)\n      const cards = normalize(expansion.cards)\n      const treasures = normalize(expansion.treasures || [])\n      const basicNemesisCards = normalize(expansion.basicNemesisCards || [])\n      const upgradedBasicNemesisCards = normalize(\n        expansion.upgradedBasicNemesisCards || []\n      )\n\n      return {\n        expansions: {\n          ...acc.expansions,\n          [id]: {\n            id,\n            name: expansion.name,\n            type: expansion.type,\n          },\n        },\n        nemeses: {\n          ...acc.nemeses,\n          ...nemeses.entities,\n        },\n        mages: {\n          ...acc.mages,\n          ...mages.entities,\n        },\n        cards: {\n          ...acc.cards,\n          ...cards.entities,\n        },\n        treasures: {\n          ...acc.treasures,\n          ...treasures.entities,\n        },\n        basicNemesisCards: {\n          ...acc.basicNemesisCards,\n          ...basicNemesisCards.entities,\n        },\n        upgradedBasicNemesisCards: {\n          ...acc.upgradedBasicNemesisCards,\n          ...upgradedBasicNemesisCards.entities,\n        },\n        expansionIds: [...acc.expansionIds, id],\n        nemesisIds: [...acc.nemesisIds, ...nemeses.ids],\n        mageIds: [...acc.mageIds, ...mages.ids],\n        cardIds: [...acc.cardIds, ...cards.ids],\n        treasureIds: [...acc.treasureIds, ...treasures.ids],\n        basicNemesisCardIds: [\n          ...acc.basicNemesisCardIds,\n          ...basicNemesisCards.ids,\n        ],\n        upgradedBasicNemesisCardIds: [\n          ...acc.upgradedBasicNemesisCardIds,\n          ...upgradedBasicNemesisCards.ids,\n        ],\n      }\n    },\n    {\n      expansions: {},\n      nemeses: {},\n      mages: {},\n      cards: {},\n      treasures: {},\n      basicNemesisCards: {},\n      upgradedBasicNemesisCards: {},\n      expansionIds: [],\n      nemesisIds: [],\n      mageIds: [],\n      cardIds: [],\n      treasureIds: [],\n      basicNemesisCardIds: [],\n      upgradedBasicNemesisCardIds: [],\n    }\n  )\n}\n","import ENG from './ENG'\nimport FR from './FR'\nimport PL from './PL'\nimport DE from './DE'\nimport RU from './RU'\n\nimport { MARKETSETUPS } from './marketSetups'\nimport { TURNORDERSETUPS, TURNORDERCARDS } from './turnOrderSetups'\n\nimport { createNormalizedData } from './createNormalizedData'\n\nconst DEFAULTSUPPLYCOUNT = 9\n\nconst aerData = {\n  normalizedData: {\n    ENG: createNormalizedData(ENG),\n    FR: createNormalizedData(FR),\n    PL: createNormalizedData(PL),\n    DE: createNormalizedData(DE),\n    RU: createNormalizedData(RU),\n  },\n  defaultSupplyCount: DEFAULTSUPPLYCOUNT,\n  marketsetups: MARKETSETUPS,\n  turnordersetups: TURNORDERSETUPS,\n  turnordercards: TURNORDERCARDS,\n}\n\nexport default aerData\n","import { IExpansionData } from '../../../aer-types/types'\n\nimport { aeonsEndData } from './aeonsEnd'\nimport { buriedSecretsData } from './buriedSecrets'\nimport { intoTheWildData } from './intoTheWild'\nimport { legacyData } from './legacy'\nimport { newAgeData } from './theNewAge'\nimport { outerDarkData } from './outerDark'\nimport { promosData } from './promos'\nimport { shatteredDreamsData } from './shatteredDreams'\nimport { theAncientsData } from './theAncients'\nimport { theDepthsData } from './theDepths'\nimport { theNamelessData } from './theNameless'\nimport { theVoidData } from './theVoid'\nimport { warEternalData } from './warEternal'\nimport { outcastsData } from './outcasts'\nimport { returnToGraveholdData } from './returnToGravehold'\nimport { southernVillageData } from './southernVillage'\nimport { theRuinsData } from './theRuins'\nimport { legacyOfGraveholdData } from './legacyOfGravehold'\nimport { communityData } from './community'\n\nconst ENG: IExpansionData = {\n  AE: aeonsEndData,\n  BS: buriedSecretsData,\n  Depths: theDepthsData,\n  IW: intoTheWildData,\n  Legacy: legacyData,\n  NA: newAgeData,\n  Nameless: theNamelessData,\n  OD: outerDarkData,\n  SD: shatteredDreamsData,\n  TA: theAncientsData,\n  TV: theVoidData,\n  WE: warEternalData,\n  O: outcastsData,\n  RTG: returnToGraveholdData,\n  SV: southernVillageData,\n  RU: theRuinsData,\n  LOG: legacyOfGraveholdData,\n  promos: promosData,\n  community: communityData,\n}\n\nexport default ENG\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\nimport { basicNemesisCards } from './basicNemesisCards'\nimport { upgradedBasicNemesisCards } from './upgradedBasicNemesisCards'\n\nexport const legacyOfGraveholdData: IExpansion = {\n  id: 'LOG',\n  name: 'Legacy of Gravehold',\n  type: 'standalone',\n  nemeses,\n  mages,\n  cards,\n  basicNemesisCards,\n  upgradedBasicNemesisCards,\n}\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'LOG',\n    name: 'Bishop of Scrolls',\n    id: 'BishopOfScrolls',\n    health: 50,\n    difficulty: 2,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Bishop: Returned',\n    id: 'BishopReturned',\n    health: 60,\n    difficulty: 7,\n    expeditionRating: 3,\n    additionalInfo: `\n      <p>\n        Switch the minions in the nemesis deck with the minions you named during the campaign.\n        You may name and include more minions to make the game harder.\n      </p>\n    `,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Fate Shepherd',\n    id: 'FateShepherd',\n    health: 70,\n    difficulty: 3,\n    expeditionRating: 1,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Griefweaver',\n    id: 'Griefweaver',\n    health: 60,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Mist Revealed',\n    id: 'MistRevealed',\n    health: 80,\n    difficulty: 10,\n    expeditionRating: 4,\n    additionalInfo: `\n      <p>\n        When playing outside of the legacy campaign, use three random tier 3\n        Mist Revealed cards when constructing the nemesis deck.\n      </p>\n    `,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Mother of Rust',\n    id: 'MotherOfRust',\n    health: '*',\n    difficulty: 4,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Paradox of Bone',\n    id: 'ParadoxOfBone',\n    health: 80,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Paradox of Myth',\n    id: 'ParadoxOfMyth',\n    health: 50,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Paradox of Myth and Bone',\n    id: 'ParadoxOfMythAndBone',\n    health: 40,\n    difficulty: 5,\n    expeditionRating: 3,\n    additionalInfo: `\n      <p>\n        Replace the nemesis turn order cards in the turn order deck with\n        the Myth and Bone turn order cards.\n      </p>\n    `,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Rust Amalgam',\n    id: 'RustAmalgam',\n    health: 50,\n    difficulty: 6,\n    expeditionRating: 3,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Paradox of Bone',\n    id: 'ParadoxOfBone',\n    health: 80,\n    difficulty: 8,\n    expeditionRating: 4,\n    additionalInfo: '',\n  },\n  {\n    expansion: 'LOG',\n    name: 'Rust Superion',\n    id: 'RustSuperion',\n    health: 50,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: '',\n  },\n]\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = [\n  {\n    expansion: 'LOG',\n    name: 'Arachnos',\n    id: 'ArachnosLOG',\n    mageTitle: 'Void Weaver',\n    ability: `\n      <h2>Weaver's Web</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Return up to three cards that cost 4 <span class=\"aether\">&AElig;</span> or\n        less from your discard pile to your hand.\n        <span class=\"or\">OR</span>\n        Any player gains 3 life.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Gossamer Web',\n        expansion: 'LOG',\n        id: 'GossamerWeb',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, when you gain a card from a supply pile,\n            gain 1 charge.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 7,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Claudia',\n    id: 'ClaudiaLOG',\n    mageTitle: 'Visionary',\n    ability: `\n      <h2>Aetherial Echo</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Any player gains 3 life.\n        <span class=\"or\">OR</span>\n        The next time you gain a card this turn, you may place it into an ally's hand.\n        Then, that ally gains a copy of the same card and places it into their hand.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Jubilant Halo',\n        expansion: 'LOG',\n        id: 'JubilantHalo',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:>/b> Deal 1 damage.<br/>\n            Gain 1 <span class=\"aether\">&AElig;</span> that can only be used\n            to gain gems.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Mirror Shard',\n        expansion: 'LOG',\n        id: 'MirrorShard',\n        cost: 0,\n        effect: `\n          <p>\n            Play this as a copy of a gem in your hand.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Dezmodia',\n    id: 'DezmodiaLOG',\n    mageTitle: 'Void Phantom',\n    ability: `\n      <h2>Void Tear</h2>\n      <p class=\"ability-activation\">Activate during any player's main phase:</p>\n      <p>\n        Return up to two spells from your discard pile to your hand.<br/>\n        You may prep two additional spells to each of your opened breaches this turn.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Devouring Voidspark',\n        expansion: 'LOG',\n        id: 'DevouringVoidspark',\n        cost: 0,\n        effect: `\n          <p>\n            While this is prepped, an additional spell may be prepped to this breach.<br/>\n            <b>Cast:</b> Deal 1 damage. Deal additional damage equal to the number of other spells\n            prepped to this breach.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Spell',\n        name: 'Invigorating Voidspark',\n        expansion: 'LOG',\n        id: 'InvigoratingVoidspark',\n        cost: 0,\n        effect: `\n          <p>\n            While this is prepped, an additional spell may be prepped to this breach.<br/>\n            <b>Cast:</b> Deal 1 damage. Any ally draw a card for each other spell\n            prepped to this breach.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Gygar',\n    id: 'GygarLOG',\n    mageTitle: 'Treasure Hunter',\n    ability: `\n      <h2>Contained Burst</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast two of your prepped spells without discarding them.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Bide',\n        expansion: 'LOG',\n        id: 'Bide',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, once per turn during your main phase\n            you may gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Ilya',\n    id: 'IlyaLOG',\n    mageTitle: 'Force of Aether',\n    ability: `\n      <h2>Surge of Power</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Reveal the top four cards of your deck.\n        Place any number of spells revealed this way into you hand.\n        You may prep spells to closed breaches this turn.\n        YOu may prep up to two spells to each of your breaches this turn.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Shared Heart',\n        expansion: 'LOG',\n        id: 'SharedHeart',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:/b> Deal 1 damage. If you are Ilya, dela 1 additional damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</br> Deal 1 damage. If you are Kel, gain 1 life.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Entangled Tourmaline',\n        expansion: 'LOG',\n        id: 'EntangledTourmaline',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            You may place a card from your hand into Kel's or Ilya's hand.\n            If you do, they place a card from their hand into your hand.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Inco',\n    id: 'IncoLOG',\n    mageTitle: 'Growing Soul',\n    ability: `\n      <h2>Uproot</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Harvest up to two cards in your hand or discard pile.\n        Resolve the Harvest effects of these cards twice.\n        <span class=\"or\">OR</span>\n        Gravehold gains 5 life.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Iris',\n        expansion: 'LOG',\n        id: 'Iris',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, gain 2 <span class=\"aether\">&AElig;</span>.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Tulip',\n        expansion: 'LOG',\n        id: 'Tulip',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, gain a card from the supply\n            that costs 4 <span class=\"aether\">&AElig;</span> or less.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Dahlia',\n        expansion: 'LOG',\n        id: 'Dahlia',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, deal 2 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Spell',\n        name: 'Rose',\n        expansion: 'LOG',\n        id: 'Rose',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage.<br/>\n            When this is Harvested, focus one of your breaches.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Violet',\n        expansion: 'LOG',\n        id: 'Violet',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, any ally may return a card in\n            their discard pile to their hand.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Tulip',\n        expansion: 'LOG',\n        id: 'Tulip',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, gain a card from the supply\n            that costs 4 <span class=\"aether\">&AElig;</span> or less.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Iris',\n        expansion: 'LOG',\n        id: 'Iris',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, gain 2 <span class=\"aether\">&AElig;</span>.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Dahlia',\n        expansion: 'LOG',\n        id: 'Dahlia',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            When this is Harvested, deal 2 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Sunflower',\n        expansion: 'LOG',\n        id: 'Sunflower',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.You may Harvest a gem in your hand.<br/>\n            When this is Harvested, gain 2 life.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Spell',\n        name: 'Rose',\n        expansion: 'LOG',\n        id: 'Rose',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage.<br/>\n            When this is Harvested, focus one of your breaches.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Indira',\n    id: 'IndiraLOG',\n    mageTitle: 'Ascended Apprentice',\n    ability: `\n      <h2>Reanimate Magic</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast up to two spells from your discard pile.\n        You may destroy a card in your discard pile.\n      </p>\n    `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Aetherial Glow',\n        expansion: 'LOG',\n        id: 'AetherialGlow',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, once per each player's turn, you may\n            discard a spell in hand to have that player gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Kadir',\n    id: 'KadirLOG',\n    mageTitle: 'Gemcrafter',\n    ability: `\n      <h2>Refine Prototype</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Either choose a side of a path token that is not on your mat and place it on\n        you mat, or flip over one of your path tokens on your mat.\n        Then, if you have four path tokens on your mat, set one aside.<br/>\n        Resolve all of the path tokens on your mat in any order.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Ancient Emerald',\n        expansion: 'LOG',\n        id: 'AncientEmerald',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            If you have 4 or more charges, any ally gains 1 life.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Kel',\n    id: 'KelLOG',\n    mageTitle: 'Source of Aether',\n    ability: `\n      <h2>Absorb Aether</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Any ally places up to two cards from their hand or discard pile\n        into your discard pile. Then, if you have ten or more card in your discard pile,\n        shuffle any player's turn order card into the turn order deck.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Entangled Tourmaline',\n        expansion: 'LOG',\n        id: 'EntangledTourmaline',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            You may place a card from your hand into Kel's or Ilya's hand.\n            If you do, they place a card from their hand into your hand.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Spell',\n        name: 'Split Soul',\n        expansion: 'LOG',\n        id: 'SplitSoul',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage. If you are Kel, gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> If you are Ilya, gain 1 charge.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Lost',\n    id: 'LostLOG',\n    mageTitle: 'Forgotten Forge',\n    ability: `\n      <h2>Encase in Steel</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Deal damage equal to the number of spells in your discard pile.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Molten Forge',\n        expansion: 'LOG',\n        id: 'MoltenForge',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Gain 2 <span class=\"aether\">&AElig;</span> that can only be\n            used to gain spells.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Bronze Ingot',\n        expansion: 'LOG',\n        id: 'BronzeIngot',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            If you have five or more spells in you discard pile,\n            gain an additional 2 <span class=\"aether\">&AElig;</span>.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Malastar',\n    id: 'MalastarLOG',\n    mageTitle: 'Inventor',\n    ability: `\n      <h2>Burst of Inspiration</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Draw a card from the top or bottom of the Inventions deck and place\n        it into an ally's hand.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Zanite, Perfected',\n        expansion: 'LOG',\n        id: 'ZanitePerfected',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            Reveal the top card of the Inventions deck. If it is a relic,\n            gain 1 <span class=\"aether\">&AElig;</span>. Then, place that card\n            on the bottom of that deck.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Mazra',\n    id: 'MazraLOG',\n    mageTitle: 'The Learned',\n    ability: `\n      <h2>Research</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Destroy a card with \"Mazra\" in its name in your hand.\n        Gain a card with \"Mazra\" in its name from the personal upgrade deck\n        that costs up to 3 <span class=\"aether\">&AElig;</span> more than the destroyed card\n        and place that card into your hand.\n        <span class=\"or\">OR</span>\n        Return to your hand all cards with \"Mazra\" in their name\n        in your discard pile.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: \"Mazra's Studies\",\n        expansion: 'LOG',\n        id: 'MazrasStudiesLOG',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Focus your III breach.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Spell',\n        name: \"Mazra's Studies\",\n        expansion: 'LOG',\n        id: 'MazrasStudiesLOG',\n        cost: 0,\n        effect: `\n          <p>\n            <b>Cast:</b> Deal 1 damage.\n            <span class=\"or\">OR</span>\n            <b>Cast:</b> Focus your III breach.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Nook',\n    id: 'NookLOG',\n    mageTitle: 'Timeless',\n    ability: `\n      <h2>Time Ripple</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Return up to three Crystals from your hand or discard pile\n        to the Regularity deck. Place up to three Anomaly cards from the Regularity\n        deck into your hand.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Zeronia Anomaly',\n        expansion: 'LOG',\n        id: 'ZeroniaAnomaly',\n        cost: 5,\n        effect: `\n          <p>\n            Gain 2 <span class=\"aether\">&AElig;</span>. Any ally gains a charge.<br/>\n            If this is the first Anomaly card you have played this turn, return this to the Regularity deck\n            and gain a Crystal from that deck.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Photonix Anomaly',\n        expansion: 'LOG',\n        id: 'PhotonixAnomaly',\n        cost: 5,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            If this is the first Anomaly card you have played this turn, return this to the Regularity deck\n            and gain a Spark from that deck.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Relic',\n        name: 'Mechanek Anomaly',\n        expansion: 'LOG',\n        id: 'MechanekAnomaly',\n        cost: 5,\n        effect: `\n          <p>\n            Focus one of your breaches. Repeat this once.\n            If this is the first Anomaly card you have played this turn, return this to the Regularity deck\n            and gain a Crystal from that deck.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Eternus Anomaly',\n        expansion: 'LOG',\n        id: 'EternusAnomaly',\n        cost: 5,\n        effect: `\n          <p>\n            Gain 2 <span class=\"aether\">&AElig;</span>.<br/>\n            If this is the first Anomaly card you have played this turn, return this to the Regularity deck\n            and gain a Crystal from that deck.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Nihilum Anomaly',\n        expansion: 'LOG',\n        id: 'NihilumAnomaly',\n        cost: 5,\n        effect: `\n          <p>\n            Gain 2 <span class=\"aether\">&AElig;</span>. Silence a minion.<br/>\n            If this is the first Anomaly card you have played this turn, return this to the Regularity deck\n            and gain a Crystal from that deck.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 8,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Qu',\n    id: 'QuLOG',\n    mageTitle: 'Builder',\n    ability: `\n      <h2>Feed the Corruption</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Any ally draws two cards. Any player destroys up to two cards in hand or discard pile.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Oblivion Lode',\n        expansion: 'LOG',\n        id: 'OblivionLode',\n        cost: 0,\n        effect: `\n          <p>\n            Resolve the builder token. Then, flip it over.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Corrupted Vein',\n        expansion: 'LOG',\n        id: 'CorruptedVein',\n        cost: 0,\n        effect: `\n          <p>\n            Resolve the destroyer token. Then, flip it over.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Razra',\n    id: 'RazraLOG',\n    mageTitle: 'The Tamer',\n    ability: `\n      <h2>Train Rip</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Destroy a card with \"Rip\" in its name in your hand.\n        Gain a card with \"Rip\" in its name from the personal upgrade deck\n        that costs up to 3 <span class=\"aether\">&AElig;</span> more than the destroyed card\n        and place that card into your hand.\n        <span class=\"or\">OR</span>\n        Return to your hand all cards with \"Rip\" in their name that\n        you have played this turn or that are in your discard pile.\n      </p>\n    `,\n    numberOfCharges: 4,\n    uniqueStarters: [\n      {\n        type: 'Relic',\n        name: 'Rip, Help!',\n        expansion: 'LOG',\n        id: 'RipHelpLOG',\n        cost: 0,\n        effect: `<p>Gain 1 charge.</p>`,\n        keywords: [],\n      },\n      {\n        type: 'Relic',\n        name: 'Rip, Help!',\n        expansion: 'LOG',\n        id: 'RipHelpLOG',\n        cost: 0,\n        effect: `<p>Gain 1 charge.</p>`,\n        keywords: [],\n      },\n    ],\n    complexityRating: 7,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Soskel',\n    id: 'SoskelLOG',\n    mageTitle: 'Tactician',\n    ability: `\n      <h2>Tactician's Gambit</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Players collectively return up to two cards from their discard piles\n        to their hands. Reveal the turn order deck and return it in any order.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Blinding Gambit',\n        expansion: 'LOG',\n        id: 'BlindingGambit',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, when your turn order card is drawn, you may place it on\n            the bottom of the turn order deck instead of resolving your turn.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Bastion Flint',\n        expansion: 'LOG',\n        id: 'BastionFLint',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            If there are three or more player cards in the turn order discard pile,\n            gain 1 charge.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 5,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Talix',\n    id: 'TalixLOG',\n    mageTitle: 'Heart of Flame',\n    ability: `\n      <h2>Soaring Ash</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast any number of your prepped Sparks.<br/>\n        Those spells deal 2 additional damage.<br/>\n        You may destroy a Spark in your discard pile.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Powdered Infinitum',\n        expansion: 'LOG',\n        id: 'PowderedInfinitum',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span> for each\n            of your prepped Sparks.\n          </p>\n        `,\n        keywords: [],\n      },\n      {\n        type: 'Gem',\n        name: 'Powdered Infinitum',\n        expansion: 'LOG',\n        id: 'PowderedInfinitum',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span> for each\n            of your prepped Sparks.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 6,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Taqren',\n    id: 'TaqrenLOG',\n    mageTitle: 'Reignited Guardian',\n    ability: `\n      <h2>Guardian's Strength</h2>\n      <p class=\"ability-activation\">Activate during your turn:</p>\n      <p>\n        Focus any player's breach or any ally preps a spell\n        to one of their opened or closed breaches. Repeat this three times.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Warding Stone',\n        expansion: 'LOG',\n        id: 'WardingStone',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.<br/>\n            The next time you focus or open a breach this turn, gain\n            an additional 2 <span class=\"aether\">&AElig;</span>.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Thraxir',\n    id: 'ThraxirLOG',\n    mageTitle: 'The Returned',\n    ability: `\n      <h2>Sever Reality</h2>\n      <p class=\"ability-activation\">Activate after the turn order deck is shuffled:</p>\n      <p>\n        Reveal cards from the top of the turn order deck equal to the number of open breaches you have.\n        Return those cards to the top of the turn order deck in any order.\n        You may place the top card of the turn order deck in the turn order discard pile.\n      </p>\n    `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Gem',\n        name: 'Cleansing Quartz',\n        expansion: 'LOG',\n        id: 'CleansingQuartz',\n        cost: 0,\n        effect: `\n          <p>\n            Gain 1 <span class=\"aether\">&AElig;</span>.\n            <span class=\"or\">OR</span>\n            If you have focused or opened a breach this turn, gain a spell that costs\n            4 <span class=\"aether\">&AElig;</span> or less from the supply.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 3,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Xaxos',\n    id: 'XaxosLOG',\n    mageTitle: 'Reckoner',\n    ability: `\n      <h2>Expand Potential</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Look at and gain the top card of the Reckoning deck. Then, place it on top of your deck.\n        <span class=\"or\">OR</span>\n        Return one Reckoning card from your discard pile to your hand.\n      </p>\n    `,\n    numberOfCharges: 6,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Essence Leech',\n        expansion: 'LOG',\n        id: 'EssenceLeech',\n        cost: 0,\n        effect: `\n          <p>\n            While prepped, when an ally gains a charge the first time on their turn, gain 1 charge.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n  {\n    expansion: 'LOG',\n    name: 'Yan Magda',\n    id: 'YanMagdaLOG',\n    mageTitle: 'Recovered Exile',\n    ability: `\n      <h2>Devour Magic</h2>\n      <p class=\"ability-activation\">Activate during your main phase:</p>\n      <p>\n        Cast a spell prepped to an opened Incanted breach three times,\n        then reset that breach to its starting position.\n      </p>\n    `,\n    numberOfCharges: 5,\n    uniqueStarters: [\n      {\n        type: 'Spell',\n        name: 'Eldritch Eye',\n        expansion: 'LOG',\n        id: 'EldritchEye',\n        cost: 0,\n        effect: `\n          <p>\n            While this is prepped, when you open a breach during your turn, deal 2 damage.<br/>\n            <b>Cast:</b> Deal 1 damage.\n          </p>\n        `,\n        keywords: [],\n      },\n    ],\n    complexityRating: 4,\n  },\n]\n","import { BasicNemesisCard } from '../../../../aer-types/types'\n\nexport const basicNemesisCards: BasicNemesisCard[] = [\n  {\n    id: 'CeaselessDarkness-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Power',\n    name: 'Ceaseless Darkness',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 5 <span class=\"aether\">&AElig;</span>.<br />\n        <br/>\n        <b>Power 2:</b> Unleash. Any player suffers 3 damage. Any player discards a cards in hand.\n      </p>\n    `,\n  },\n  {\n    id: 'ChaosOrb-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Power',\n    name: 'Chaos Orb',\n    power: 3,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br />\n        <br/>\n        <b>Power 3:</b> Unleash. Gravehold suffers 4 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CoalWelp-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Minion',\n    name: 'Coal Welp',\n    shields: 2,\n    hp: 3,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash. Add a fire token to your location on the map.\n      </p>\n    `,\n  },\n  {\n    id: 'Consume-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Attack',\n    name: 'Consume',\n    effect: `\n      <p>\n        Unleash.<br/>\n        Any player suffers 2 damage and discards a card in hand.<br/>\n        If that card costs 2 <span class=\"aether\">&AElig;</span> or less,\n        add a fire token to your location on the map.\n      </p>\n    `,\n  },\n  {\n    id: 'CosmopodHorror-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Minion',\n    name: 'Cosmopod Horror',\n    hp: 8,\n    effect: `\n      <p>\n        When this is discarded, banish it.<br/>\n        <b>Immediately:</b> This minion suffers damage equal to the number of\n        players in the game.<br/>\n        <b>Persistent:</b> Gravehold and any player each suffer 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Disorient-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Attack',\n    name: 'Disorient',\n    effect: `\n      <p>\n        Unleash.<br/>\n        Any player suffers 1 damage and discards a card in hand.<br/>\n        If that card is a gem, Gravehold suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'ImpendingImmolation-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Power',\n    name: 'Impending Immolation',\n    power: 2,\n    effect: `\n      <p>\n        <b>To discard:</b> Spend 6 <span class=\"aether\">&AElig;</span>.<br/>\n        <b>Power 2:</b> Unleash. Gravehold suffers 3 damage. Add a fire token\n        to your location on the map.\n      </p>\n    `,\n  },\n  {\n    id: 'Rend-LOG',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Attack',\n    name: 'Rend',\n    effect: `\n      <p>\n        Unleash.<br/>\n        Gravehold suffers 1 damage.<br/>\n        Any player suffers 2 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'CollapsingComet',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Power',\n    name: 'CollapsingComet',\n    power: 1,\n    effect: `\n      <p>\n        <b>To discard:</b> Discard four cards in hand.<br/>\n        <b>Power 1:</b> Unleash twice. Gravehold suffers 3 damage.<br/>\n        Banish this.\n      </p>\n    `,\n  },\n  {\n    id: 'DevilsPact',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Attack',\n    name: `Devil's Pact`,\n    effect: `\n      <p>\n        Gravehold suffers 5 damage.\n        <span class=\"or\">OR</span>\n        Any player suffers 5 damage.\n        <span class=\"or\">OR</span>\n        The players discard the three most expensive prepped spells.\n        <span class=\"or\">OR</span>\n        Unleash twice. The players collectively lose 3 charges.\n      </p>\n    `,\n  },\n  {\n    id: 'FoggyMiasma',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Attack',\n    name: 'Foggy Miasma',\n    effect: `\n      <p>\n        Any player discards three cards in hand and suffers 2 damage.<br/>\n        Banish this.\n      </p>\n    `,\n  },\n  {\n    id: 'Otherling',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Minion',\n    name: 'Otherling',\n    hp: 10,\n    effect: `\n      <p>\n        When this is discarded, banish this.<br/>\n        <b>Persistent:</b> Unleash. Any player suffers 1 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'PaleReckoner',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Minion',\n    name: 'Pale Reckoner',\n    shields: 4,\n    hp: 8,\n    effect: `\n      <p>\n        <b>Immediately:</b> This minion loses a shield token for each player in the game.<br/>\n        <b>Persistent:</b> Any player suffers 2 damage. Add a fire token to your location on the map.\n      </p>\n    `,\n  },\n  {\n    id: 'SpreadingInferno',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Power',\n    name: 'Spreading Inferno',\n    power: 2,\n    effect: `\n      <p>\n        <b>To discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br/>\n        <b>Power 2:</b> Unleash twice. If there are 3 or less fire tokens on your\n        location of the map, add a fire token to your location on the map.\n        Otherwise, Unleash.\n      </p>\n    `,\n  },\n  {\n    id: 'Ruin',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Attack',\n    name: 'Ruin',\n    effect: `\n      <p>\n        Unleash twice. Gravehold suffers 3 damage.\n        <span class=\"or\">OR</span>\n        Unleash twice. Add a fire token to your location on the map.\n      </p>\n    `,\n  },\n  {\n    id: 'CrushingStorm-LOG',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Power',\n    name: 'Crushing Storm',\n    power: 1,\n    effect: `\n      <p>\n        <b>To discard:</b> Destroy two opened breaches.<br/>\n        <b>Power 1:</b> Unleash three times.<br/>\n        Banish this.\n      </p>\n    `,\n  },\n  {\n    id: 'DemolishingVoid',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Power',\n    name: 'Demolishing Void',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> Unleash. The player with the most expensive prepped spell\n        destroys it. If that spell costs 4 <span class=\"aether\">&AElig;</span> or less,\n        Unleash and any player suffers 3 damage.<br/>\n        Banish this.\n      </p>\n    `,\n  },\n  {\n    id: 'Divide',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    name: 'Divide',\n    effect: `\n      <p>\n        Unleash three times.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 6 damage.\n        <span class=\"or\">OR</span>\n        Any player suffers 5 damage.\n      </p>\n    `,\n  },\n  {\n    id: 'Eviscerate',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    name: 'Eviscerate',\n    effect: `\n      <p>\n        Unleash twice.<br/>\n        Any player suffers 2 damage and destroys their most expensive card in hand.<br/>\n        Banish this.\n      </p>\n    `,\n  },\n  {\n    id: 'HexOfDestruction-LOG',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Power',\n    name: 'Hex of Destruction',\n    power: 2,\n    effect: `\n      <p>\n        <b>To Discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br />\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 4 damage.\n        Any player destroys the top four cards of their deck.\n      </p>\n    `,\n  },\n  {\n    id: 'Incinerate',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    name: 'Incinerate',\n    effect: `\n      <p>\n        Unleash twice.<br/>\n        The player with the most expensive card in hand suffers 2 damage and discards three cards.\n        Then, for each card in their hand that costs 2 <span class=\"aether\">&AElig;</span> or more,\n        add a fire token to your location on the map.\n      </p>\n    `,\n  },\n  {\n    id: 'VoidStrays',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Minion',\n    name: 'Void Strays',\n    hp: 13,\n    effect: `\n      <p>\n        <b>Persistent:</b> Any player suffers 3 damage.\n        <span class=\"or\">OR</span>\n        Unleash. Add 2 fire tokens to your location on the map.\n      </p>\n    `,\n  },\n]\n","import { UpgradedBasicNemesisCard } from '../../../../aer-types/types'\n\nexport const upgradedBasicNemesisCards: UpgradedBasicNemesisCard[] = [\n  {\n    id: 'CarriodeRaiders',\n    name: 'Carriode Raiders',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Minion',\n    hp: 3,\n    shields: 3,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 2 damage. Add a fire token to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Incense',\n    name: 'Incense',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice. Any player suffers 1 damage.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 5 damage. Add 2 fire tokens to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SpreadingBrushfire',\n    name: 'Spreading Brushfire',\n    expansion: 'LOG',\n    tier: 1,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To discard:</b> Spend 7 <span class=\"aether\">&AElig;</span>.<br/>\n        <b>Power 2:</b> Unleash twice. Gravehold suffers 3 damage.\n        Add a fire token to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Blacken',\n    name: 'Blacken',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice.<br/>\n        Gravehold suffers 5 damage.<br/>\n        If there are 4 or less fire tokens on your location of the map,\n        add 2 fire tokens to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'BreachShatter',\n    name: 'Breach Shatter',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To discard:</b> Spend 8 <span class=\"aether\">&AElig;</span>.<br/>\n        <b>Power 2:</b> Unleash twice. The player with the lowest life suffers 4 damage.<br/>\n        If that player becomes exhausted because of this, that mage is severed and cross out this sentence.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'ChitinKiller',\n    name: 'Chitin Killer',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Minion',\n    hp: 13,\n    effect: `\n      <p>\n        <b>Persistent:</b> The player with the most prepped spells suffers 3 damage.\n        If that player becomes exhausted because of this, that mage is severed and cross out this sentence.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'MagmaLordZala',\n    name: 'Magma Lord Zala',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Minion',\n    hp: 10,\n    shields: 2,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold and any player each suffer 2 damage.\n        Add a fire token to your location of the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'SoulRend',\n    name: 'Soul Rend',\n    expansion: 'LOG',\n    tier: 2,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>To discard:</b> Spend 9 <span class=\"aether\">&AElig;</span>.<br/>\n        <b>Power 2:</b> Unleash three times, and add 2 fire tokens to your location on the map.\n        <span class=\"or\">OR</span>\n        Unleash twice, the player with the lowest life suffers 1 damage, their mage becomes severed,\n        and cross out this sentence.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Stifle',\n    name: 'Stifle',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice. The player with the lowest life suffers 3 damage.<br/>\n        If that player becomes exhausted because of this, that mage is severed and cross out this sentence.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'DreadIgnition',\n    name: 'Dread Ignition',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Power',\n    power: 1,\n    effect: `\n      <p>\n        <b>Power 1:</b> Unleash twice, and the player with the most charges suffers 3 damage\n        and loses all of their charges.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 5 damage, and add 2 fire tokens to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Explosion',\n    name: 'Explosion',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash three times.<br/>\n        The players collectively discard the two most expensive cards in hand.<br/>\n        Add 2 fire tokens to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'InescapableTorment',\n    name: 'InescapableTorment',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Power',\n    power: 2,\n    effect: `\n      <p>\n        <b>Power 2:</b> The player with the highest life suffers damage equal to their life.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'NyxOfBurningBones',\n    name: 'Nyx of Burning Bones',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Minion',\n    hp: 15,\n    effect: `\n      <p>\n        <b>Persistent:</b> Unleash twice. Gravehold suffers 2 damage.\n        Add a fire token to your location on the map.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Ravage',\n    name: 'Ravage',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash four times.\n        <span class=\"or\">OR</span>\n        Add three fire tokens to your location on the map.\n        <span class=\"or\">OR</span>\n        Gravehold suffers 7 damage.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'Revive',\n    name: 'Revive',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Attack',\n    effect: `\n      <p>\n        Unleash twice.<br/>\n        Place the most recently discarded minion in the nemesis discard pile into play.\n      </p>\n    `,\n    upgraded: true,\n  },\n  {\n    id: 'TheCeaselessObserver',\n    name: 'The Ceaseless Observer',\n    expansion: 'LOG',\n    tier: 3,\n    type: 'Minion',\n    hp: 7,\n    shields: 3,\n    effect: `\n      <p>\n        <b>Persistent:</b> Gravehold suffers 3 damage. Add fire tokens\n        to your location on the map equal to the number of shield tokens on this minion.\n      </p>\n    `,\n    upgraded: true,\n  },\n]\n","import { IExpansion } from '../../../../aer-types/types'\n\nimport { nemeses } from './nemeses'\nimport { mages } from './mages'\nimport { cards } from './cards'\n\nexport const communityData: IExpansion = {\n  id: 'community',\n  name: 'Community',\n  type: 'promo',\n  mages,\n  nemeses,\n  cards,\n}\n","import { Mage } from '../../../../aer-types/types'\n\nexport const mages: Mage[] = []\n","import { Nemesis } from '../../../../aer-types/types'\n\nexport const nemeses: Nemesis[] = [\n  {\n    expansion: 'community',\n    name: 'Haze Fiend',\n    id: 'HazeFiend',\n    health: 75,\n    difficulty: 5,\n    expeditionRating: 2,\n    additionalInfo: `\n      <p>\n      Required adjustments (by Michael Hunter) to make Haze Fiend (from Legacy) playable outside of the campaign:<br/>\n      <b>Setup:</b> Setup twelve crystal cards with the flawed stickers on them. These form the flawed crystal deck.<br/>\n      <b>Unleash:</b> A player degrades a card in their hand that costs 2 or more <span class=\"aether\">&AElig;</span>. OR Each player suffers 1 damage for each flawed crystal in their hand and one player places a flawed sticker on a crystal in their hand or discard pile.<br/>\n      <b>Flawed Crystals:</b> When you are instructed to place a flawed sticker on a crystal, instead destroy that crystal and replace it with a card from the flawed crystal deck.<br/>\n      <b>Increased Difficulty:</b> When a spell deals damage to the nemesis, reduce that damage by 1 for every flawed crystal in your hand to a minimum of 1.<br/><br/>\n      Original files can be found on <a href=\"https://boardgamegeek.com/filepage/191166/legacy-nemesis-tweaks-regular-play\" target=\"_blank\">BoardGameGeek</a>.\n\t  </p>\n\t  `,\n  },\n]\n","import { ICard } from '../../../../aer-types/types'\n\nexport const cards: ICard[] = []\n","import { MarketSetups } from '../../aer-types/types'\n\nexport const MARKETSETUPS: MarketSetups = {\n  setups: {\n    market1Inc: {\n      id: 'market1Inc',\n      name: 'Market Setup 1 (inclusive)',\n      type: 'custom',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '<', threshold: 4 },\n        { type: 'Gem', operation: '=', threshold: 4 },\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: '<=', threshold: 5 },\n        { type: 'Spell', operation: '<=', threshold: 5 },\n        { type: 'Spell', operation: '>=', threshold: 5 },\n        { type: 'Spell', operation: '>=', threshold: 5 },\n      ],\n    },\n    market1: {\n      id: 'market1',\n      name: 'Market Setup 1',\n      type: 'official',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '<', threshold: 4 },\n        { type: 'Gem', operation: '=', threshold: 4 },\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: '<', threshold: 5 },\n        { type: 'Spell', operation: '<', threshold: 5 },\n        { type: 'Spell', operation: '>', threshold: 5 },\n        { type: 'Spell', operation: '>', threshold: 5 },\n      ],\n    },\n    market2: {\n      id: 'market2',\n      name: 'Market Setup 2',\n      type: 'official',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '<', threshold: 3 },\n        { type: 'Gem', operation: '>', threshold: 3 },\n        { type: 'Gem', operation: '>', threshold: 3 },\n        { type: 'Relic', operation: '>', threshold: 4 },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: '<', threshold: 6 },\n        { type: 'Spell', operation: '<', threshold: 6 },\n        { type: 'Spell', operation: '<', threshold: 6 },\n        { type: 'Spell', operation: '>', threshold: 6 },\n      ],\n    },\n    market3: {\n      id: 'market3',\n      name: 'Market Setup 3',\n      type: 'official',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '<', threshold: 4 },\n        { type: 'Gem', operation: 'OR', values: [4, 5] },\n        { type: 'Gem', operation: 'OR', values: [4, 5] },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: '=', threshold: 3 },\n        { type: 'Spell', operation: '=', threshold: 4 },\n        { type: 'Spell', operation: '>', threshold: 5 },\n        { type: 'Spell', operation: '>', threshold: 5 },\n        { type: 'Spell', operation: '>', threshold: 5 },\n      ],\n    },\n    market4: {\n      id: 'market4',\n      name: 'Market Setup 4',\n      type: 'official',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '>', threshold: 4 },\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Relic', operation: '<', threshold: 4 },\n        { type: 'Relic', operation: '>', threshold: 4 },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: '<', threshold: 5 },\n        { type: 'Spell', operation: '>', threshold: 5 },\n        { type: 'Spell', operation: 'ANY' },\n      ],\n    },\n    market5: {\n      id: 'market5',\n      name: 'Market Setup 5',\n      type: 'official',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '=', threshold: 2 },\n        { type: 'Gem', operation: '=', threshold: 3 },\n        { type: 'Gem', operation: '=', threshold: 4 },\n        { type: 'Gem', operation: '=', threshold: 5 },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: '=', threshold: 4 },\n        { type: 'Spell', operation: '=', threshold: 5 },\n        { type: 'Spell', operation: '=', threshold: 6 },\n        { type: 'Spell', operation: '>', threshold: 6 },\n      ],\n    },\n    market6: {\n      id: 'market6',\n      name: 'Market Setup 6',\n      type: 'official',\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: '=', threshold: 3 },\n        { type: 'Gem', operation: '=', threshold: 4 },\n        { type: 'Relic', operation: '<', threshold: 4 },\n        { type: 'Relic', operation: '>', threshold: 4 },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: 'OR', values: [3, 4] },\n        { type: 'Spell', operation: 'OR', values: [5, 6] },\n        { type: 'Spell', operation: 'OR', values: [5, 6] },\n        { type: 'Spell', operation: '>', threshold: 6 },\n      ],\n    },\n    random: {\n      id: 'random',\n      name: 'Random Setup (Default)',\n      type: 'official',\n      default: true, // this flag removes the setup from the settings, so it will always be active\n      active: true,\n      tiles: [\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Gem', operation: 'ANY' },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Relic', operation: 'ANY' },\n        { type: 'Spell', operation: 'ANY' },\n        { type: 'Spell', operation: 'ANY' },\n        { type: 'Spell', operation: 'ANY' },\n        { type: 'Spell', operation: 'ANY' },\n      ],\n    },\n  },\n  ids: [\n    'market1Inc',\n    'market1',\n    'market2',\n    'market3',\n    'market4',\n    'market5',\n    'market6',\n    'random',\n  ],\n}\n","export const LANGUAGE_DB_KEY = 'language-1.8'\n","import { Cmd, loop } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport { LANGUAGE_DB_KEY } from '../constants'\nimport { actions } from '../actions'\n\nexport const select = (\n  state: State,\n  action: ReturnType<typeof actions.select>\n) => {\n  const { expansionId, lang } = action.payload\n  const newState = {\n    ...state,\n    [expansionId]: lang,\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [LANGUAGE_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { get as getFromDb } from 'idb-keyval'\nimport AERData from 'aer-data/src/index'\n\nimport { State } from '../types'\nimport { LANGUAGE_DB_KEY } from '../constants'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getFromDb, {\n      args: [LANGUAGE_DB_KEY],\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (typeof action.payload === 'object' && action.payload !== null) {\n    const newState = action.payload as State\n\n    // WHY:\n    // When expensions are newly added to aer-data, they will never be part of a users saved state.\n    // This leads to a situation, where our default (ENG) won't be selected for these expansions, which\n    // might lead to a crash of the app.\n    // TODO - handle the default gracefully, so we do no longer need this workaround\n    const withDefaultValuesForUnselectedExpansions = AERData.normalizedData.ENG.expansionIds.reduce(\n      (acc, id) => {\n        if (!(id in newState)) {\n          return { ...acc, [id]: 'ENG' }\n        } else {\n          return acc\n        }\n      },\n      action.payload\n    )\n\n    return withDefaultValuesForUnselectedExpansions as State\n  }\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = AERData.normalizedData.ENG.expansionIds.reduce(\n  (acc, id) => {\n    return {\n      ...acc,\n      [id]: 'ENG',\n    }\n  },\n  {}\n)\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SELECT: {\n      return reducerHelpers.select(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedLanguagesStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getLanguagesByExpansion = (state: SelectedLanguagesStateSlice) =>\n  state.Settings.Expansions.Languages\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\n\nconst getSelectedLanguageByExpansionId = createSelector(\n  [getLanguagesByExpansion, getExpansionId],\n  (languagesByExpansion, expansionId) => languagesByExpansion[expansionId]\n)\n\nexport const selectors = {\n  getLanguagesByExpansion,\n  getSelectedLanguageByExpansionId,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.expansions,\n  FR: AERData.normalizedData.FR.expansions,\n  PL: AERData.normalizedData.PL.expansions,\n  DE: AERData.normalizedData.DE.expansions,\n  RU: AERData.normalizedData.RU.expansions,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { ExpansionContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\nimport * as Languages from '../../Languages'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { ContentStruct } from '../../helpers'\nimport { Expansion } from 'aer-types/types'\n\nconst getContent = (state: ExpansionContentStateSlice) =>\n  state.Settings.Expansions.Expansions.content\n\nconst getId = (_: unknown, props: { expansionId: string }) => props.expansionId\n\nexport const getContentWithLanguageFallback = (\n  languages: Languages.State,\n  content: ContentStruct<Expansion>,\n  id: string\n) => {\n  // Just get the corresponding expansion id from the english version\n  const language = languages[content.ENG[id].id]\n\n  return content[language][id] || content.ENG[id]\n}\n\nconst getExpansionById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getExpansionById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type ExpansionIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      Expansions: {\n        ids: string[]\n      }\n    }\n  }\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = AERData.normalizedData.ENG.expansionIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { ExpansionIdsStateSlice } from './types'\n\nconst getIds = (state: ExpansionIdsStateSlice) =>\n  state.Settings.Expansions.Expansions.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, Cmd, loop } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { set as setToDb } from 'idb-keyval'\nimport { selectors as LanguageSelectors } from '../Languages'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { EXPANSIONS_DB_KEY } from './constants'\nimport { getContentWithLanguageFallback } from './content/selectors'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n//\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/Expansions/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | Ids.Action | Content.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action) => {\n    switch (action.type) {\n      case ActionTypes.TOGGLE_ALL: {\n        const allExpansionsSelected = state.ids.every(id =>\n          state.selected.includes(id)\n        )\n\n        const newSelected = allExpansionsSelected ? [] : state.ids\n\n        const newState = {\n          ...state,\n          selected: newSelected,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setToDb, {\n            args: [EXPANSIONS_DB_KEY, newSelected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getExpansionIds = (\n  _: unknown,\n  { expansionIds }: { expansionIds: string[] }\n) => expansionIds\n\n// Memoized\n\nconst getExpansionsByIdList = createSelector(\n  [Content.selectors.getContent, getExpansionIds],\n  (content, ids) => ids.map(id => content.ENG[id])\n)\n\nconst getExpansionNamesByIdList = createSelector(\n  [getExpansionsByIdList],\n  expansions => expansions.map(e => e.name)\n)\n\nconst getAllExpansionsSelected = createSelector(\n  [Ids.selectors.getIds, Selected.selectors.getSelected],\n  (ids, selectedIds) => ids.every(id => selectedIds.includes(id))\n)\n\nconst getHasStandaloneExpansion = createSelector(\n  [Selected.selectors.getSelected, Content.selectors.getContent],\n  (selectedIds, content) =>\n    selectedIds.some(id => content.ENG[id].type === 'standalone')\n)\n\nconst getStandaloneExpansionIds = createSelector(\n  [Ids.selectors.getIds, Content.selectors.getContent],\n  (ids, content) => ids.filter(id => content.ENG[id].type === 'standalone')\n)\n\nconst getMiniExpansionIds = createSelector(\n  [Ids.selectors.getIds, Content.selectors.getContent],\n  (ids, content) => ids.filter(id => content.ENG[id].type === 'mini')\n)\n\nconst getPromoIds = createSelector(\n  [Ids.selectors.getIds, Content.selectors.getContent],\n  (ids, content) =>\n    ids\n      .filter(id => content.ENG[id].type === 'promo')\n      .sort((a, b) => {\n        const promoA = content.ENG[a].name\n        const promoB = content.ENG[b].name\n\n        if (promoA < promoB) {\n          return -1\n        }\n\n        if (promoA > promoB) {\n          return 1\n        }\n\n        return 0\n      })\n)\n\nconst getStandaloneExpansions = createSelector(\n  [\n    Content.selectors.getContent,\n    getStandaloneExpansionIds,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map(id => getContentWithLanguageFallback(languages, content, id))\n)\nconst getMiniExpansions = createSelector(\n  [\n    Content.selectors.getContent,\n    getMiniExpansionIds,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map(id => getContentWithLanguageFallback(languages, content, id))\n)\nconst getPromos = createSelector(\n  [\n    Content.selectors.getContent,\n    getPromoIds,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map(id => getContentWithLanguageFallback(languages, content, id))\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getExpansionNamesByIdList,\n  getAllExpansionsSelected,\n  getHasStandaloneExpansion,\n  getStandaloneExpansions,\n  getMiniExpansions,\n  getPromos,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.ICard }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type CardsContentStateSlice = {\n  Settings: {\n    Expansions: {\n      Cards: {\n        content: State\n      }\n    }\n  }\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE_CARD = 'Settings/Expansions/Cards/TOGGLE_CARD',\n  SET_TO_DB = 'Settings/Expansions/Cards/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/Cards/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/Cards/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/Cards/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/Cards/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/Cards/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedCardsStateSlice = {\n  Settings: {\n    Expansions: {\n      Cards: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import * as Languages from './Languages'\n\nimport {\n  Nemesis,\n  Mage,\n  Treasure,\n  BasicNemesisCard,\n  UpgradedBasicNemesisCard,\n  ICard,\n} from 'aer-types/types'\n\nimport { LanguageKey } from './types'\n\ntype Entity =\n  | Nemesis\n  | Mage\n  | Treasure\n  | BasicNemesisCard\n  | UpgradedBasicNemesisCard\n  | ICard\n\nexport type ContentStruct<T> = {\n  [key in LanguageKey]: {\n    [id: string]: T\n  }\n}\n\nexport const getContentByIdWithLanguageFallback = <T extends Entity>(\n  languages: Languages.State,\n  content: ContentStruct<T>,\n  id: string\n) => {\n  // Just get the corresponding expansion id from the english version\n  const language = languages[content.ENG[id].expansion]\n\n  // Fallback to english\n  return content[language][id] || content.ENG[id]\n}\n\nexport const getEntitiesByIdListWithLanguageFallback = <T extends Entity>(\n  content: ContentStruct<T>,\n  ids: string[],\n  language: LanguageKey\n) => {\n  return ids.map((id) => {\n    return content[language][id] || content.ENG[id]\n  })\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.cards,\n  FR: AERData.normalizedData.FR.cards,\n  PL: AERData.normalizedData.PL.cards,\n  DE: AERData.normalizedData.DE.cards,\n  RU: AERData.normalizedData.RU.cards,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { CardsContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { getContentByIdWithLanguageFallback } from '../../helpers'\n\nconst getContent = (state: CardsContentStateSlice) =>\n  state.Settings.Expansions.Cards.content\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentByIdWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggleCard: (id: string) => createAction(ActionTypes.TOGGLE_CARD, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (selectedCards: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, selectedCards),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type CardIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      Cards: {\n        ids: string[]\n      }\n    }\n  }\n}\n","export const CARDS_DB_KEY = 'cards-1.8'\n","import { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport { CARDS_DB_KEY } from '../constants'\nimport { State } from './types'\n\nexport const getSelectedCardsFromDB = () => getFromDb(CARDS_DB_KEY)\n\nexport const setSelectedCardsToDB = (selectedCards: State) =>\n  setToDb(CARDS_DB_KEY, selectedCards)\n","import { Cmd, loop } from 'redux-loop'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\nimport { setSelectedCardsToDB } from '../sideEffects'\n\nexport const toggleCard = (\n  state: State,\n  action: ReturnType<typeof actions.toggleCard>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter((id) => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setSelectedCardsToDB, {\n      args: [newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport { State } from '../types'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\nimport { getSelectedCardsFromDB } from '../sideEffects'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getSelectedCardsFromDB, {\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = AERData.normalizedData.ENG.cardIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_CARD: {\n      return reducerHelpers.toggleCard(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedCardsStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedCardsStateSlice) =>\n  state.Settings.Expansions.Cards.selected\n\nconst getId = (_: unknown, props: { cardId: string }) => props.cardId\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = AERData.normalizedData.ENG.cardIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { CardIdsStateSlice } from './types'\n\nconst getIds = (state: CardIdsStateSlice) => state.Settings.Expansions.Cards.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getEntitiesByIdListWithLanguageFallback,\n  getContentByIdWithLanguageFallback,\n} from '../helpers'\nimport { selectors as LanguageSelectors } from '../Languages'\nimport {\n  Action as ExpansionAction,\n  ActionTypes as ExpansionActionTypes,\n} from '../'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\n\nimport { setSelectedCardsToDB } from './selected/sideEffects'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/Cards/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: (expansionId: string, toggleType: types.ToggleType) =>\n    createAction(ActionTypes.TOGGLE_ALL, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action | ExpansionAction) => {\n    switch (action.type) {\n      case ExpansionActionTypes.TOGGLE_ALL_EXPANSION_CONTENT:\n      case ActionTypes.TOGGLE_ALL: {\n        const { expansionId, toggleType } = action.payload\n\n        const allCardsOfExpansion = state.ids.filter(\n          (id) => state.content.ENG[id].expansion === expansionId\n        )\n\n        const newSelected = toggleType === 'deselect' ? [] : allCardsOfExpansion\n\n        const newSelectedCards =\n          newSelected.length === 0\n            ? state.selected.filter(\n                (id) => state.content.ENG[id].expansion !== expansionId\n              )\n            : [...new Set([...state.selected, ...newSelected])]\n\n        const newState = {\n          ...state,\n          selected: newSelectedCards,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setSelectedCardsToDB, {\n            args: [newState.selected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\nconst getIdList = (_: unknown, props: { cardIds: string[] }) => props.cardIds\n\n// Memoized\n\nconst getIdsByExpansionId = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getExpansionId],\n  (content, ids, expansionId) =>\n    ids.filter((id) => content.ENG[id].expansion === expansionId)\n)\n\nconst getContentByExpansionId = createSelector(\n  [\n    Content.selectors.getContent,\n    getIdsByExpansionId,\n    LanguageSelectors.getSelectedLanguageByExpansionId,\n  ],\n  getEntitiesByIdListWithLanguageFallback\n)\n\nconst getGemsByExpansionId = createSelector(\n  [getContentByExpansionId],\n  (content) => content.filter((card) => card.type === 'Gem')\n)\n\nconst getRelicsByExpansionId = createSelector(\n  [getContentByExpansionId],\n  (content) => content.filter((card) => card.type === 'Relic')\n)\n\nconst getSpellsByExpansionId = createSelector(\n  [getContentByExpansionId],\n  (cards) => cards.filter((card) => card.type === 'Spell')\n)\n\nconst getSelectedCards = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, selectedIds, languages) =>\n    selectedIds.map((id) =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nconst getCardsByIdList = createSelector(\n  [\n    Content.selectors.getContent,\n    getIdList,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, idList, languages) =>\n    idList.map((id) =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nconst getSelectedCardsByExpansionId = createSelector(\n  [getSelectedCards, getContentByExpansionId],\n  (selectedCardIds, expansionCardIds) => {\n    return selectedCardIds.filter((id) => expansionCardIds.includes(id))\n  }\n)\n\nconst getAllCardsOfExpansionSelected = createSelector(\n  [getSelectedCardsByExpansionId, getContentByExpansionId],\n  (selectedCardIds, allCardIds) =>\n    allCardIds.every((id) => selectedCardIds.includes(id))\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getSelectedCards,\n  getGemsByExpansionId,\n  getRelicsByExpansionId,\n  getSpellsByExpansionId,\n  getCardsByIdList,\n  getSelectedCardsByExpansionId,\n  getAllCardsOfExpansionSelected,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.Nemesis }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type NemesisContentStateSlice = {\n  Settings: {\n    Expansions: {\n      Nemeses: {\n        content: State\n      }\n    }\n  }\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE = 'Settings/Expansions/Nemeses/TOGGLE',\n  SET_TO_DB = 'Settings/Expansions/Nemeses/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/Nemeses/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/Nemeses/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/Nemeses/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/Nemeses/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/Nemeses/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedNemesesStateSlice = {\n  Settings: {\n    Expansions: {\n      Nemeses: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.nemeses,\n  FR: AERData.normalizedData.FR.nemeses,\n  PL: AERData.normalizedData.PL.nemeses,\n  DE: AERData.normalizedData.DE.nemeses,\n  RU: AERData.normalizedData.RU.nemeses,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { NemesisContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { getContentByIdWithLanguageFallback } from '../../helpers'\n\nconst getContent = (state: NemesisContentStateSlice) =>\n  state.Settings.Expansions.Nemeses.content\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentByIdWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggle: (id: string) => createAction(ActionTypes.TOGGLE, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (selectedNemeses: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, selectedNemeses),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type NemesisIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      Nemeses: {\n        ids: string[]\n      }\n    }\n  }\n}\n","export const NEMESES_DB_KEY = 'nemeses-1.8'\n","import { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport { NEMESES_DB_KEY } from '../constants'\nimport { State } from './types'\n\nexport const getSelectedNemesesFromDB = () => getFromDb(NEMESES_DB_KEY)\n\nexport const setSelectedNemesesToDB = (selectedNemeses: State) =>\n  setToDb(NEMESES_DB_KEY, selectedNemeses)\n","import { Cmd, loop } from 'redux-loop'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\nimport { setSelectedNemesesToDB } from '../sideEffects'\n\nexport const toggle = (\n  state: State,\n  action: ReturnType<typeof actions.toggle>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter((id) => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setSelectedNemesesToDB, {\n      args: [newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport { State } from '../types'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\nimport { getSelectedNemesesFromDB } from '../sideEffects'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getSelectedNemesesFromDB, {\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = AERData.normalizedData.ENG.nemesisIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE: {\n      return reducerHelpers.toggle(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedNemesesStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedNemesesStateSlice) =>\n  state.Settings.Expansions.Nemeses.selected\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = AERData.normalizedData.ENG.nemesisIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { NemesisIdsStateSlice } from './types'\n\nconst getIds = (state: NemesisIdsStateSlice) =>\n  state.Settings.Expansions.Nemeses.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getEntitiesByIdListWithLanguageFallback,\n  getContentByIdWithLanguageFallback,\n} from '../helpers'\nimport { selectors as LanguageSelectors } from '../Languages'\nimport {\n  Action as ExpansionAction,\n  ActionTypes as ExpansionActionTypes,\n} from '../'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\n\nimport { setSelectedNemesesToDB } from './selected/sideEffects'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/Nemeses/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: (expansionId: string, toggleType: types.ToggleType) =>\n    createAction(ActionTypes.TOGGLE_ALL, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action | ExpansionAction) => {\n    switch (action.type) {\n      case ExpansionActionTypes.TOGGLE_ALL_EXPANSION_CONTENT:\n      case ActionTypes.TOGGLE_ALL: {\n        const { expansionId, toggleType } = action.payload\n\n        const allNemesesOfExpansion = state.ids.filter(\n          (id) => state.content.ENG[id].expansion === expansionId\n        )\n\n        const newSelected =\n          toggleType === 'deselect' ? [] : allNemesesOfExpansion\n\n        const newSelectedNemeses =\n          newSelected.length === 0\n            ? state.selected.filter(\n                (id) => state.content.ENG[id].expansion !== expansionId\n              )\n            : [...new Set([...state.selected, ...newSelected])]\n\n        const newState = {\n          ...state,\n          selected: newSelectedNemeses,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setSelectedNemesesToDB, {\n            args: [newState.selected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\n\n// Memoized\n\nconst getNemesisIdsByExpansionId = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getExpansionId],\n  (content, ids, expansionId) =>\n    ids.filter((id) => content.ENG[id].expansion === expansionId)\n)\n\nconst getNemesesByExpansionId = createSelector(\n  [\n    Content.selectors.getContent,\n    getNemesisIdsByExpansionId,\n    LanguageSelectors.getSelectedLanguageByExpansionId,\n  ],\n  getEntitiesByIdListWithLanguageFallback\n)\n\nconst getSelectedNemeses = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, nemesisIds, languages) => {\n    return nemesisIds.map((id) =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n  }\n)\n\nconst getSelectedNemesesByExpansionId = createSelector(\n  [getSelectedNemeses, getNemesesByExpansionId],\n  (selectedNemesisIds, expansionNemesisIds) => {\n    return selectedNemesisIds.filter((id) => expansionNemesisIds.includes(id))\n  }\n)\n\nconst getAllNemesesOfExpansionSelected = createSelector(\n  [getSelectedNemesesByExpansionId, getNemesesByExpansionId],\n  (selectedNemesisIds, allNemesisIds) =>\n    allNemesisIds.every((id) => selectedNemesisIds.includes(id))\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getNemesesByExpansionId,\n  getSelectedNemeses,\n  getSelectedNemesesByExpansionId,\n  getAllNemesesOfExpansionSelected,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.Mage }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type MagesContentStateSlice = {\n  Settings: {\n    Expansions: {\n      Mages: {\n        content: State\n      }\n    }\n  }\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE = 'Settings/Expansions/Mages/TOGGLE',\n  SET_TO_DB = 'Settings/Expansions/Mages/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/Mages/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/Mages/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/Mages/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/Mages/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/Mages/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedMagesStateSlice = {\n  Settings: {\n    Expansions: {\n      Mages: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.mages,\n  FR: AERData.normalizedData.FR.mages,\n  PL: AERData.normalizedData.PL.mages,\n  DE: AERData.normalizedData.DE.mages,\n  RU: AERData.normalizedData.RU.mages,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { MagesContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { getContentByIdWithLanguageFallback } from '../../helpers'\n\nconst getContent = (state: MagesContentStateSlice) =>\n  state.Settings.Expansions.Mages.content\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentByIdWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getById: getById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggle: (id: string) => createAction(ActionTypes.TOGGLE, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (selectedMages: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, selectedMages),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type MageIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      Mages: {\n        ids: string[]\n      }\n    }\n  }\n}\n","export const MAGES_DB_KEY = 'mages-1.8'\n","import { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport { MAGES_DB_KEY } from '../constants'\nimport { State } from './types'\n\nexport const getSelectedMagesFromDB = () => getFromDb(MAGES_DB_KEY)\n\nexport const setSelectedMagesToDB = (selectedMages: State) =>\n  setToDb(MAGES_DB_KEY, selectedMages)\n","import { Cmd, loop } from 'redux-loop'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\nimport { setSelectedMagesToDB } from '../sideEffects'\n\nexport const toggle = (\n  state: State,\n  action: ReturnType<typeof actions.toggle>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter((id) => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setSelectedMagesToDB, {\n      args: [newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport { State } from '../types'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\nimport { getSelectedMagesFromDB } from '../sideEffects'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getSelectedMagesFromDB, {\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = AERData.normalizedData.ENG.mageIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE: {\n      return reducerHelpers.toggle(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedMagesStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedMagesStateSlice) =>\n  state.Settings.Expansions.Mages.selected\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = AERData.normalizedData.ENG.mageIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { MageIdsStateSlice } from './types'\n\nconst getIds = (state: MageIdsStateSlice) => state.Settings.Expansions.Mages.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getEntitiesByIdListWithLanguageFallback,\n  getContentByIdWithLanguageFallback,\n} from '../helpers'\nimport { selectors as LanguageSelectors } from '../Languages'\nimport {\n  Action as ExpansionAction,\n  ActionTypes as ExpansionActionTypes,\n} from '../'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\n\nimport { setSelectedMagesToDB } from './selected/sideEffects'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/Mages/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: (expansionId: string, toggleType: types.ToggleType) =>\n    createAction(ActionTypes.TOGGLE_ALL, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action | ExpansionAction) => {\n    switch (action.type) {\n      case ExpansionActionTypes.TOGGLE_ALL_EXPANSION_CONTENT:\n      case ActionTypes.TOGGLE_ALL: {\n        const { expansionId, toggleType } = action.payload\n\n        const allMagesOfExpansion = state.ids.filter(\n          (id) => state.content.ENG[id].expansion === expansionId\n        )\n\n        const newSelected = toggleType === 'deselect' ? [] : allMagesOfExpansion\n\n        const newSelectedMages =\n          newSelected.length === 0\n            ? state.selected.filter(\n                (id) => state.content.ENG[id].expansion !== expansionId\n              )\n            : [...new Set([...state.selected, ...newSelected])]\n\n        const newState = {\n          ...state,\n          selected: newSelectedMages,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setSelectedMagesToDB, {\n            args: [newState.selected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\n\n// Memoized\n\nconst getMageIdsByExpansionId = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getExpansionId],\n  (content, ids, expansionId) =>\n    ids.filter((id) => content.ENG[id].expansion === expansionId)\n)\n\nconst getMagesByExpansionId = createSelector(\n  [\n    Content.selectors.getContent,\n    getMageIdsByExpansionId,\n    LanguageSelectors.getSelectedLanguageByExpansionId,\n  ],\n  getEntitiesByIdListWithLanguageFallback\n)\n\nconst getSelectedMages = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, selectedIds, languages) =>\n    selectedIds.map((id) =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nconst getSelectedMagesByExpansionId = createSelector(\n  [getSelectedMages, getMagesByExpansionId],\n  (selectedMagesIds, expansionMagesIds) => {\n    return selectedMagesIds.filter((id) => expansionMagesIds.includes(id))\n  }\n)\n\nconst getAllMagesOfExpansionSelected = createSelector(\n  [getSelectedMagesByExpansionId, getMagesByExpansionId],\n  (selectedMageIds, allMageIds) =>\n    allMageIds.every((id) => selectedMageIds.includes(id))\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getMagesByExpansionId,\n  getSelectedMages,\n  getSelectedMagesByExpansionId,\n  getAllMagesOfExpansionSelected,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.Treasure }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type TreasureContentStateSlice = {\n  Settings: {\n    Expansions: {\n      Treasures: {\n        content: State\n      }\n    }\n  }\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE = 'Settings/Expansions/Treasures/TOGGLE',\n  SET_TO_DB = 'Settings/Expansions/Treasures/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/Treasures/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/Treasures/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/Treasures/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/Treasures/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/Treasures/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedTreasuresStateSlice = {\n  Settings: {\n    Expansions: {\n      Treasures: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.treasures,\n  FR: AERData.normalizedData.FR.treasures,\n  PL: AERData.normalizedData.PL.treasures,\n  DE: AERData.normalizedData.DE.treasures,\n  RU: AERData.normalizedData.RU.treasures,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { TreasureContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { getContentByIdWithLanguageFallback } from '../../helpers'\n\nconst getContent = (state: TreasureContentStateSlice) =>\n  state.Settings.Expansions.Treasures.content\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentByIdWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggle: (id: string) => createAction(ActionTypes.TOGGLE, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (selectedTreasures: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, selectedTreasures),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type TreasureIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      Treasures: {\n        ids: string[]\n      }\n    }\n  }\n}\n","export const TREASURES_DB_KEY = 'treasures-1.8'\n","import { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport { TREASURES_DB_KEY } from '../constants'\nimport { State } from './types'\n\nexport const getSelectedTreasuresFromDB = () => getFromDb(TREASURES_DB_KEY)\n\nexport const setSelectedTreasuresToDB = (selectedTreasures: State) =>\n  setToDb(TREASURES_DB_KEY, selectedTreasures)\n","import { Cmd, loop } from 'redux-loop'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\nimport { setSelectedTreasuresToDB } from '../sideEffects'\n\nexport const toggle = (\n  state: State,\n  action: ReturnType<typeof actions.toggle>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter((id) => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setSelectedTreasuresToDB, {\n      args: [newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport { State } from '../types'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\nimport { getSelectedTreasuresFromDB } from '../sideEffects'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getSelectedTreasuresFromDB, {\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = AERData.normalizedData.ENG.treasureIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE: {\n      return reducerHelpers.toggle(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedTreasuresStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedTreasuresStateSlice) =>\n  state.Settings.Expansions.Treasures.selected\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = AERData.normalizedData.ENG.treasureIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { TreasureIdsStateSlice } from './types'\n\nconst getIds = (state: TreasureIdsStateSlice) =>\n  state.Settings.Expansions.Treasures.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getEntitiesByIdListWithLanguageFallback,\n  getContentByIdWithLanguageFallback,\n} from '../helpers'\nimport { selectors as LanguageSelectors } from '../Languages'\nimport {\n  Action as ExpansionAction,\n  ActionTypes as ExpansionActionTypes,\n} from '../'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\n\nimport { setSelectedTreasuresToDB } from './selected/sideEffects'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/Treasures/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: (expansionId: string, toggleType: types.ToggleType) =>\n    createAction(ActionTypes.TOGGLE_ALL, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action | ExpansionAction) => {\n    switch (action.type) {\n      case ExpansionActionTypes.TOGGLE_ALL_EXPANSION_CONTENT:\n      case ActionTypes.TOGGLE_ALL: {\n        const { expansionId, toggleType } = action.payload\n\n        const allTreasuresOfExpansion = state.ids.filter(\n          (id) => state.content.ENG[id].expansion === expansionId\n        )\n\n        const newSelected =\n          toggleType === 'deselect' ? [] : allTreasuresOfExpansion\n\n        const newSelectedTreasures =\n          newSelected.length === 0\n            ? state.selected.filter(\n                (id) => state.content.ENG[id].expansion !== expansionId\n              )\n            : [...new Set([...state.selected, ...newSelected])]\n\n        const newState = {\n          ...state,\n          selected: newSelectedTreasures,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setSelectedTreasuresToDB, {\n            args: [newState.selected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getTreasureLevel = (\n  _: unknown,\n  props: { treasureLevel: types.TreasureLevel }\n) => props.treasureLevel\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\n\nconst getIdList = (_: unknown, props: { treasureIds: string[] }) =>\n  props.treasureIds\n\n// Memoized\n\nconst getTreasureIdsByTreasureLevel = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getTreasureLevel],\n  (content, ids, level) =>\n    ids\n      .map((id) => content.ENG[id])\n      .filter((treasure) => treasure.level === level)\n      .map((treasure) => treasure.id)\n)\n\nconst getTreasureIdsByExpansionId = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getExpansionId],\n  (content, ids, expansionId) =>\n    ids.filter((id) => content.ENG[id].expansion === expansionId)\n)\n\nconst getTreasuresByExpansionId = createSelector(\n  [\n    Content.selectors.getContent,\n    getTreasureIdsByExpansionId,\n    LanguageSelectors.getSelectedLanguageByExpansionId,\n  ],\n  getEntitiesByIdListWithLanguageFallback\n)\n\nconst getTreasureList = createSelector(\n  [\n    Content.selectors.getContent,\n    Ids.selectors.getIds,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getTreasureListByLevel = createSelector(\n  [\n    Content.selectors.getContent,\n    getTreasureIdsByTreasureLevel,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getTreasureListFromIdList = createSelector(\n  [\n    Content.selectors.getContent,\n    getIdList,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getSelectedTreasures = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getSelectedTreasureIdsByTreasureLevel = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    getTreasureLevel,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, level, languages) =>\n    ids\n      .map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n      .filter((treasure) => treasure.level === level)\n      .map((treasure) => treasure.id)\n)\n\nconst getSelectedTreasureListByLevel = createSelector(\n  [\n    Content.selectors.getContent,\n    getSelectedTreasureIdsByTreasureLevel,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getSelectedTreasuresByExpansionId = createSelector(\n  [getSelectedTreasures, getTreasuresByExpansionId],\n  (selectedTreasureIds, expansionTreasureIds) => {\n    return selectedTreasureIds.filter((id) => expansionTreasureIds.includes(id))\n  }\n)\n\nconst getAllTreasuresOfExpansionSelected = createSelector(\n  [getSelectedTreasuresByExpansionId, getTreasuresByExpansionId],\n  (selectedTreasureIds, allTreasureIds) =>\n    allTreasureIds.every((id) => selectedTreasureIds.includes(id))\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getTreasuresByExpansionId,\n  getTreasureIdsByTreasureLevel,\n  getTreasureList,\n  getTreasureListByLevel,\n  getTreasureListFromIdList,\n  getSelectedTreasures,\n  getSelectedTreasureIdsByTreasureLevel,\n  getSelectedTreasureListByLevel,\n  getSelectedTreasuresByExpansionId,\n  getAllTreasuresOfExpansionSelected,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.BasicNemesisCard }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type BasicNemesisCardsContentStateSlice = {\n  Settings: {\n    Expansions: {\n      BasicNemesisCards: {\n        content: State\n      }\n    }\n  }\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE_CARD = 'Settings/Expansions/BasicNemesisCards/TOGGLE_CARD',\n  SET_TO_DB = 'Settings/Expansions/BasicNemesisCards/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/BasicNemesisCards/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/BasicNemesisCards/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/BasicNemesisCards/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/BasicNemesisCards/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/BasicNemesisCards/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedBasicNemesisCardsStateSlice = {\n  Settings: {\n    Expansions: {\n      BasicNemesisCards: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.basicNemesisCards,\n  FR: AERData.normalizedData.FR.basicNemesisCards,\n  PL: AERData.normalizedData.PL.basicNemesisCards,\n  DE: AERData.normalizedData.DE.basicNemesisCards,\n  RU: AERData.normalizedData.RU.basicNemesisCards,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { BasicNemesisCardsContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { getContentByIdWithLanguageFallback } from '../../helpers'\n\nconst getContent = (state: BasicNemesisCardsContentStateSlice) =>\n  state.Settings.Expansions.BasicNemesisCards.content\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentByIdWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggleCard: (id: string) => createAction(ActionTypes.TOGGLE_CARD, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (selectedCards: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, selectedCards),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type BasicNemesisCardIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      BasicNemesisCards: {\n        ids: string[]\n      }\n    }\n  }\n}\n","export const BASIC_NEMESIS_CARDS_DB_KEY = 'basicNemesisCards-1.9'\n","import { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport { BASIC_NEMESIS_CARDS_DB_KEY } from '../constants'\nimport { State } from './types'\n\nexport const getSelectedBasicNemesisCardsFromDB = () =>\n  getFromDb(BASIC_NEMESIS_CARDS_DB_KEY)\n\nexport const setSelectedBasicNemesisCardsToDB = (\n  selectedBasicNemesisCards: State\n) => setToDb(BASIC_NEMESIS_CARDS_DB_KEY, selectedBasicNemesisCards)\n","import { Cmd, loop } from 'redux-loop'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\nimport { setSelectedBasicNemesisCardsToDB } from '../sideEffects'\n\nexport const toggleCard = (\n  state: State,\n  action: ReturnType<typeof actions.toggleCard>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter((id) => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setSelectedBasicNemesisCardsToDB, {\n      args: [newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport { State } from '../types'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\nimport { getSelectedBasicNemesisCardsFromDB } from '../sideEffects'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getSelectedBasicNemesisCardsFromDB, {\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State =\n  AERData.normalizedData.ENG.basicNemesisCardIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_CARD: {\n      return reducerHelpers.toggleCard(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedBasicNemesisCardsStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedBasicNemesisCardsStateSlice) =>\n  state.Settings.Expansions.BasicNemesisCards.selected\n\nconst getId = (_: unknown, props: { basicNemesisCardId: string }) =>\n  props.basicNemesisCardId\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State =\n  AERData.normalizedData.ENG.basicNemesisCardIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { BasicNemesisCardIdsStateSlice } from './types'\n\nconst getIds = (state: BasicNemesisCardIdsStateSlice) =>\n  state.Settings.Expansions.BasicNemesisCards.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getEntitiesByIdListWithLanguageFallback,\n  getContentByIdWithLanguageFallback,\n} from '../helpers'\nimport { selectors as LanguageSelectors } from '../Languages'\nimport {\n  Action as ExpansionAction,\n  ActionTypes as ExpansionActionTypes,\n} from '../'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\n\nimport { setSelectedBasicNemesisCardsToDB } from './selected/sideEffects'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/BasicNemesisCards/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: (expansionId: string, toggleType: types.ToggleType) =>\n    createAction(ActionTypes.TOGGLE_ALL, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action | ExpansionAction) => {\n    switch (action.type) {\n      case ExpansionActionTypes.TOGGLE_ALL_EXPANSION_CONTENT:\n      case ActionTypes.TOGGLE_ALL: {\n        const { expansionId, toggleType } = action.payload\n\n        const allBasicNemesisCardsOfExpansion = state.ids.filter(\n          (id) => state.content.ENG[id].expansion === expansionId\n        )\n\n        const newSelected =\n          toggleType === 'deselect' ? [] : allBasicNemesisCardsOfExpansion\n\n        const newSelectedBasicNemesisCards =\n          newSelected.length === 0\n            ? state.selected.filter(\n                (id) => state.content.ENG[id].expansion !== expansionId\n              )\n            : [...new Set([...state.selected, ...newSelected])]\n\n        const newState = {\n          ...state,\n          selected: newSelectedBasicNemesisCards,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setSelectedBasicNemesisCardsToDB, {\n            args: [newState.selected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\n\n// Memoized\n\nconst getIdsByExpansionId = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getExpansionId],\n  (content, ids, expansionId) =>\n    ids.filter((id) => content.ENG[id].expansion === expansionId)\n)\n\nconst getContentByExpansionId = createSelector(\n  [\n    Content.selectors.getContent,\n    getIdsByExpansionId,\n    LanguageSelectors.getSelectedLanguageByExpansionId,\n  ],\n  getEntitiesByIdListWithLanguageFallback\n)\n\nconst getSelectedContent = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, selectedIds, languages) =>\n    selectedIds.map((id) =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nconst getSelectedBasicNemesisCardsByExpansionId = createSelector(\n  [getSelectedContent, getContentByExpansionId],\n  (selectedBasicNemesisCardIds, expansionBasicNemesisCardIds) => {\n    return selectedBasicNemesisCardIds.filter((id) =>\n      expansionBasicNemesisCardIds.includes(id)\n    )\n  }\n)\n\nconst getAllBasicNemesisCardsOfExpansionSelected = createSelector(\n  [getSelectedBasicNemesisCardsByExpansionId, getContentByExpansionId],\n  (selectedBasicNemesisCardIds, allBasicNemesisCardIds) =>\n    allBasicNemesisCardIds.every((id) =>\n      selectedBasicNemesisCardIds.includes(id)\n    )\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getContentByExpansionId,\n  getSelectedContent,\n  getSelectedBasicNemesisCardsByExpansionId,\n  getAllBasicNemesisCardsOfExpansionSelected,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\nimport { LanguageKey } from '../../types'\n\ntype LanguageContent = { [id: string]: types.UpgradedBasicNemesisCard }\n\nexport type State = Readonly<\n  {\n    [key in LanguageKey]: LanguageContent\n  }\n>\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type UpgradedBasicNemesisCardContentStateSlice = {\n  Settings: {\n    Expansions: {\n      UpgradedBasicNemesisCards: {\n        content: State\n      }\n    }\n  }\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {\n  TOGGLE = 'Settings/Expansions/UpgradedBasicNemesisCards/TOGGLE',\n  SET_TO_DB = 'Settings/Expansions/UpgradedBasicNemesisCards/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/UpgradedBasicNemesisCards/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/UpgradedBasicNemesisCards/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/UpgradedBasicNemesisCards/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/UpgradedBasicNemesisCards/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/UpgradedBasicNemesisCards/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SelectedUpgradedBasicNemesisCardsStateSlice = {\n  Settings: {\n    Expansions: {\n      UpgradedBasicNemesisCards: {\n        selected: string[]\n      }\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State = {\n  ENG: AERData.normalizedData.ENG.upgradedBasicNemesisCards,\n  FR: AERData.normalizedData.FR.upgradedBasicNemesisCards,\n  PL: AERData.normalizedData.PL.upgradedBasicNemesisCards,\n  DE: AERData.normalizedData.DE.upgradedBasicNemesisCards,\n  RU: AERData.normalizedData.RU.upgradedBasicNemesisCards,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { UpgradedBasicNemesisCardContentStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nimport { selectors as LanguageSelectors } from '../../Languages'\nimport { getContentByIdWithLanguageFallback } from '../../helpers'\n\nconst getContent = (state: UpgradedBasicNemesisCardContentStateSlice) =>\n  state.Settings.Expansions.UpgradedBasicNemesisCards.content\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getById = createSelector(\n  [LanguageSelectors.getLanguagesByExpansion, getContent, getId],\n  getContentByIdWithLanguageFallback\n)\n\nexport const selectors = {\n  getContent,\n  getById,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggle: (id: string) => createAction(ActionTypes.TOGGLE, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (selectedUBNCards: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, selectedUBNCards),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = string[]\n\nexport enum ActionTypes {}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type UpgradedBasicNemesisCardIdsStateSlice = {\n  Settings: {\n    Expansions: {\n      UpgradedBasicNemesisCards: {\n        ids: string[]\n      }\n    }\n  }\n}\n","export const UPGRADED_BASIC_NEMESIS_CARDS_DB_KEY =\n  'upgradedBasicNemesisCards-1.8'\n","import { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport { UPGRADED_BASIC_NEMESIS_CARDS_DB_KEY } from '../constants'\nimport { State } from './types'\n\nexport const getSelectedUpgradedBasicNemesisCardsFromDB = () =>\n  getFromDb(UPGRADED_BASIC_NEMESIS_CARDS_DB_KEY)\n\nexport const setSelectedUpgradedBasicNemesisCardsToDB = (\n  selectedUpgradedBasicNemesisCards: State\n) =>\n  setToDb(\n    UPGRADED_BASIC_NEMESIS_CARDS_DB_KEY,\n    selectedUpgradedBasicNemesisCards\n  )\n","import { Cmd, loop } from 'redux-loop'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\nimport { setSelectedUpgradedBasicNemesisCardsToDB } from '../sideEffects'\n\nexport const toggle = (\n  state: State,\n  action: ReturnType<typeof actions.toggle>\n) => {\n  const newState = state.includes(action.payload)\n    ? state.filter((id) => id !== action.payload)\n    : [...state, action.payload]\n\n  return loop(\n    newState,\n    Cmd.run(setSelectedUpgradedBasicNemesisCardsToDB, {\n      args: [newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport { State } from '../types'\nimport { initialState } from '../reducer'\nimport { actions } from '../actions'\nimport { getSelectedUpgradedBasicNemesisCardsFromDB } from '../sideEffects'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getSelectedUpgradedBasicNemesisCardsFromDB, {\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  _: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (Array.isArray(action.payload)) {\n    return action.payload\n  }\n  return initialState\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State =\n  AERData.normalizedData.ENG.upgradedBasicNemesisCardIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE: {\n      return reducerHelpers.toggle(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SelectedUpgradedBasicNemesisCardsStateSlice } from './types'\nimport { createSelector } from 'reselect'\n\nconst getSelected = (state: SelectedUpgradedBasicNemesisCardsStateSlice) =>\n  state.Settings.Expansions.UpgradedBasicNemesisCards.selected\n\nconst getId = (_: unknown, props: { id: string }) => props.id\n\nconst getIsSelected = createSelector([getSelected, getId], (selectedIds, id) =>\n  selectedIds.includes(id)\n)\n\nexport const selectors = {\n  getSelected,\n  getIsSelected,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, State } from './types'\n\nexport const initialState: State =\n  AERData.normalizedData.ENG.upgradedBasicNemesisCardIds\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n","import { UpgradedBasicNemesisCardIdsStateSlice } from './types'\n\nconst getIds = (state: UpgradedBasicNemesisCardIdsStateSlice) =>\n  state.Settings.Expansions.UpgradedBasicNemesisCards.ids\n\nexport const selectors = {\n  getIds,\n}\n","import { combineReducers, reduceReducers, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getEntitiesByIdListWithLanguageFallback,\n  getContentByIdWithLanguageFallback,\n} from '../helpers'\nimport { selectors as LanguageSelectors } from '../Languages'\nimport {\n  Action as ExpansionAction,\n  ActionTypes as ExpansionActionTypes,\n} from '../'\n\nimport * as Content from './content'\nimport * as Selected from './selected'\nimport * as Ids from './ids'\n\nimport { setSelectedUpgradedBasicNemesisCardsToDB } from './selected/sideEffects'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  selected: Selected.State\n  ids: Ids.State\n  content: Content.State\n}\n\nexport const initialState: State = {\n  selected: Selected.initialState,\n  ids: Ids.initialState,\n  content: Content.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/UpgradedBasicNemesisCards/TOGGLE_ALL',\n}\n\nexport const mainActions = {\n  toggleAll: (expansionId: string, toggleType: types.ToggleType) =>\n    createAction(ActionTypes.TOGGLE_ALL, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  selected: Selected.actions,\n  ids: Ids.actions,\n  content: Content.actions,\n  main: mainActions,\n}\n\nexport type Action = Selected.Action | MainAction\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = reduceReducers(\n  combineReducers<State>({\n    selected: Selected.Reducer,\n    ids: Ids.Reducer,\n    content: Content.Reducer,\n  }),\n  (state: State, action: Action | ExpansionAction) => {\n    switch (action.type) {\n      case ExpansionActionTypes.TOGGLE_ALL_EXPANSION_CONTENT:\n      case ActionTypes.TOGGLE_ALL: {\n        const { expansionId, toggleType } = action.payload\n\n        const allUpgradedBasicNemesisCardsOfExpansion = state.ids.filter(\n          (id) => state.content.ENG[id].expansion === expansionId\n        )\n\n        const newSelected =\n          toggleType === 'deselect'\n            ? []\n            : allUpgradedBasicNemesisCardsOfExpansion\n\n        const newSelectedUpgradedBasicNemesisCards =\n          newSelected.length === 0\n            ? state.selected.filter(\n                (id) => state.content.ENG[id].expansion !== expansionId\n              )\n            : [...new Set([...state.selected, ...newSelected])]\n\n        const newState = {\n          ...state,\n          selected: newSelectedUpgradedBasicNemesisCards,\n        }\n\n        return loop(\n          newState,\n          Cmd.run(setSelectedUpgradedBasicNemesisCardsToDB, {\n            args: [newState.selected],\n            successActionCreator: actions.selected.setToDBSuccessful,\n            failActionCreator: actions.selected.setToDBFailed,\n          })\n        )\n      }\n\n      default: {\n        return state\n      }\n    }\n  }\n)\n\n///////////////\n// SELECTORS //\n///////////////\n\n// Primitive\n\nconst getExpansionId = (_: unknown, props: { expansionId: string }) =>\n  props.expansionId\n\n// Memoized\n\nconst getUpgradedBasicNemesisCardIdsByExpansionId = createSelector(\n  [Content.selectors.getContent, Ids.selectors.getIds, getExpansionId],\n  (content, ids, expansionId) =>\n    ids.filter((id) => content.ENG[id].expansion === expansionId)\n)\n\nconst getUpgradedBasicNemesisCardsByExpansionId = createSelector(\n  [\n    Content.selectors.getContent,\n    getUpgradedBasicNemesisCardIdsByExpansionId,\n    LanguageSelectors.getSelectedLanguageByExpansionId,\n  ],\n  getEntitiesByIdListWithLanguageFallback\n)\n\nconst getUpgradedBasicNemesisCardList = createSelector(\n  [\n    Content.selectors.getContent,\n    Ids.selectors.getIds,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getSelectedUpgradedBasicNemesisCards = createSelector(\n  [\n    Content.selectors.getContent,\n    Selected.selectors.getSelected,\n    LanguageSelectors.getLanguagesByExpansion,\n  ],\n  (content, ids, languages) =>\n    ids.map((id) => getContentByIdWithLanguageFallback(languages, content, id))\n)\n\nconst getSelectedUpgradedBasicNemesisCardsByExpansionId = createSelector(\n  [\n    getSelectedUpgradedBasicNemesisCards,\n    getUpgradedBasicNemesisCardsByExpansionId,\n  ],\n  (\n    selectedUpgradedBasicNemesisCardIds,\n    expansionUpgradedBasicNemesisCardIds\n  ) => {\n    return selectedUpgradedBasicNemesisCardIds.filter((id) =>\n      expansionUpgradedBasicNemesisCardIds.includes(id)\n    )\n  }\n)\n\nconst getAllUpgradedBasicNemesisCardsOfExpansionSelected = createSelector(\n  [\n    getSelectedUpgradedBasicNemesisCardsByExpansionId,\n    getUpgradedBasicNemesisCardsByExpansionId,\n  ],\n  (selectedUpgradedBasicNemesisCardIds, allUpgradedBasicNemesisCardIds) =>\n    allUpgradedBasicNemesisCardIds.every((id) =>\n      selectedUpgradedBasicNemesisCardIds.includes(id)\n    )\n)\n\nexport const selectors = {\n  selected: Selected.selectors,\n  ids: Ids.selectors,\n  content: Content.selectors,\n  getUpgradedBasicNemesisCardsByExpansionId,\n  getUpgradedBasicNemesisCardList,\n  getSelectedUpgradedBasicNemesisCards,\n  getSelectedUpgradedBasicNemesisCardsByExpansionId,\n  getAllUpgradedBasicNemesisCardsOfExpansionSelected,\n}\n","import { combineReducers } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as Expansions from './Expansions'\nimport * as Cards from './Cards'\nimport * as Nemeses from './Nemeses'\nimport * as Mages from './Mages'\nimport * as Treasures from './Treasures'\nimport * as BasicNemesisCards from './BasicNemesisCards'\nimport * as UpgradedBasicNemesisCards from './UpgradedBasicNemesisCards'\nimport * as Languages from './Languages'\n\nimport * as topLevelSelectors from './selectors'\n\nimport * as types from 'aer-types/types'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Languages: Languages.State\n  Expansions: Expansions.State\n  Cards: Cards.State\n  Nemeses: Nemeses.State\n  Mages: Mages.State\n  Treasures: Treasures.State\n  BasicNemesisCards: BasicNemesisCards.State\n  UpgradedBasicNemesisCards: UpgradedBasicNemesisCards.State\n}\n\nexport const initialState: State = {\n  Languages: Languages.initialState,\n  Expansions: Expansions.initialState,\n  Cards: Cards.initialState,\n  Nemeses: Nemeses.initialState,\n  Mages: Mages.initialState,\n  Treasures: Treasures.initialState,\n  BasicNemesisCards: BasicNemesisCards.initialState,\n  UpgradedBasicNemesisCards: UpgradedBasicNemesisCards.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL_EXPANSION_CONTENT = 'Settings/Expansions/TOGGLE_ALL_EXPANSION_CONTENT',\n}\n\nexport const mainActions = {\n  toggleAllExpansionContent: (\n    expansionId: string,\n    toggleType: types.ToggleType\n  ) =>\n    createAction(ActionTypes.TOGGLE_ALL_EXPANSION_CONTENT, {\n      expansionId,\n      toggleType,\n    }),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport type Action =\n  | Languages.Action\n  | Expansions.Action\n  | Cards.Action\n  | Nemeses.Action\n  | Mages.Action\n  | Treasures.Action\n  | BasicNemesisCards.Action\n  | UpgradedBasicNemesisCards.Action\n  | MainAction\n\nexport const actions = {\n  Languages: Languages.actions,\n  Expansions: Expansions.actions,\n  Cards: Cards.actions,\n  Nemeses: Nemeses.actions,\n  Mages: Mages.actions,\n  Treasures: Treasures.actions,\n  BasicNemesisCards: BasicNemesisCards.actions,\n  UpgradedBasicNemesisCards: UpgradedBasicNemesisCards.actions,\n  main: mainActions,\n}\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = combineReducers({\n  Languages: Languages.Reducer,\n  Expansions: Expansions.Reducer,\n  Cards: Cards.Reducer,\n  Nemeses: Nemeses.Reducer,\n  Mages: Mages.Reducer,\n  Treasures: Treasures.Reducer,\n  BasicNemesisCards: BasicNemesisCards.Reducer,\n  UpgradedBasicNemesisCards: UpgradedBasicNemesisCards.Reducer,\n})\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getAllContentOfExpansionSelected = createSelector(\n  [\n    Nemeses.selectors.getAllNemesesOfExpansionSelected,\n    Mages.selectors.getAllMagesOfExpansionSelected,\n    Cards.selectors.getAllCardsOfExpansionSelected,\n    Treasures.selectors.getAllTreasuresOfExpansionSelected,\n    BasicNemesisCards.selectors.getAllBasicNemesisCardsOfExpansionSelected,\n    UpgradedBasicNemesisCards.selectors\n      .getAllUpgradedBasicNemesisCardsOfExpansionSelected,\n  ],\n  (\n    allNemesesSelected,\n    allMagesSelected,\n    allSupplyCardsSelected,\n    allTreasuresSelected,\n    allBasicNemesisCardsSelected,\n    allUpgradedBasicNemesisCardsSelected\n  ) =>\n    allNemesesSelected &&\n    allMagesSelected &&\n    allSupplyCardsSelected &&\n    allTreasuresSelected &&\n    allBasicNemesisCardsSelected &&\n    allUpgradedBasicNemesisCardsSelected\n)\n\nexport const selectors = {\n  Languages: Languages.selectors,\n  Expansions: Expansions.selectors,\n  Cards: Cards.selectors,\n  Nemeses: Nemeses.selectors,\n  Mages: Mages.selectors,\n  Treasures: Treasures.selectors,\n  BasicNemesisCards: BasicNemesisCards.selectors,\n  UpgradedBasicNemesisCards: UpgradedBasicNemesisCards.selectors,\n  ...topLevelSelectors,\n  getAllContentOfExpansionSelected,\n}\n","import { createSelector, OutputSelector } from 'reselect'\n\nimport * as types from 'aer-types/types'\n\nimport { RootState } from 'Redux/Store'\n\nimport * as Expansions from './Expansions'\nimport * as Cards from './Cards'\nimport * as Nemeses from './Nemeses'\nimport * as Mages from './Mages'\nimport * as Treasures from './Treasures'\nimport * as BasicNemesisCards from './BasicNemesisCards'\nimport * as UpgradedBasicNemesisCards from './UpgradedBasicNemesisCards'\n\n// FIXME any typing sucks ;)\nexport const getSelectedEntitiesForSelectedExpansions = <T>(\n  entitySelector: OutputSelector<\n    RootState,\n    Array<{ expansion: string } & T>,\n    any\n  >\n) =>\n  createSelector(\n    [Expansions.selectors.selected.getSelected, entitySelector],\n    (expansionIds, entities) =>\n      entities.filter(\n        (entity) => entity && expansionIds.includes(entity.expansion)\n      )\n  )\n\nexport const getSelectedCardsForSelectedExpansions = getSelectedEntitiesForSelectedExpansions(\n  Cards.selectors.getSelectedCards\n)\n\nexport const getSelectedCardIdsForSelectedExpansions = createSelector(\n  [getSelectedCardsForSelectedExpansions],\n  (cards) => cards.map((card) => card.id)\n)\n\nexport const createIdsByCardTypeSelector = (type: types.CardType) =>\n  createSelector(\n    [getSelectedCardsForSelectedExpansions],\n    (selectedCards: types.ICard[]) =>\n      selectedCards.filter((card) => card.type === type).map((card) => card.id)\n  )\n\nexport const getGemIdsForSelectedExpansions = createIdsByCardTypeSelector('Gem')\nexport const getRelicIdsForSelectedExpansions = createIdsByCardTypeSelector(\n  'Relic'\n)\nexport const getSpellIdsForSelectedExpansions = createIdsByCardTypeSelector(\n  'Spell'\n)\n\nexport const getSelectedNemesesForSelectedExpansions = getSelectedEntitiesForSelectedExpansions(\n  Nemeses.selectors.getSelectedNemeses\n)\n\nexport const getSelectedNemesisIdsForSelectedExpansions = createSelector(\n  [getSelectedNemesesForSelectedExpansions],\n  (nemeses) => nemeses.map((nemesis) => nemesis.id)\n)\n\nexport const getSelectedMagesForSelectedExpansions = getSelectedEntitiesForSelectedExpansions(\n  Mages.selectors.getSelectedMages\n)\n\nexport const getSelectedMageIdsForSelectedExpansions = createSelector(\n  [getSelectedMagesForSelectedExpansions],\n  (selectedMages) => selectedMages.map((mage) => mage.id)\n)\n\nexport const getSelectedTreasuresForSelectedExpansions = getSelectedEntitiesForSelectedExpansions(\n  Treasures.selectors.getSelectedTreasures\n)\n\nexport const getSelectedTreasureIdsForSelectedExpansions = createSelector(\n  [getSelectedTreasuresForSelectedExpansions],\n  (treasures) => treasures.map((treasure) => treasure.id)\n)\n\nexport const getTreasuresByLevelForSelectedExpansions = createSelector(\n  [\n    Expansions.selectors.selected.getSelected,\n    Treasures.selectors.getTreasureListByLevel,\n  ],\n  (expansionIds, entities) =>\n    entities.filter((entity) => expansionIds.includes(entity.expansion))\n)\n\nexport const getTreasureIds = (\n  _: unknown,\n  { treasureIds }: { treasureIds: string[] }\n) => treasureIds\n\nexport const getTreasuresByLevelMappedFromIds = createSelector(\n  [Treasures.selectors.getTreasureListByLevel, getTreasureIds],\n  (treasures, treasureIds) =>\n    treasures.filter((t) => treasureIds.includes(t.id))\n)\n\nexport const getTreasureIdsByLevelMappedFromIds = createSelector(\n  [getTreasuresByLevelMappedFromIds],\n  (treasures) => treasures.map((t) => t.id)\n)\n\nexport const getSelectedUpgradedBasicNemesisCardsForSelectedExpansions = getSelectedEntitiesForSelectedExpansions(\n  UpgradedBasicNemesisCards.selectors.getSelectedUpgradedBasicNemesisCards\n)\n\nexport const getSelectedUpgradedBasicNemesisCardIdsForSelectedExpansions = createSelector(\n  [getSelectedUpgradedBasicNemesisCardsForSelectedExpansions],\n  (upgradedBasicNemesisCards) =>\n    upgradedBasicNemesisCards.map((card) => card.id)\n)\n\nexport const getSelectedBasicNemesisCardsForSelectedExpansions = getSelectedEntitiesForSelectedExpansions(\n  BasicNemesisCards.selectors.getSelectedContent\n)\n\nexport const getSelectedBasicNemesisCardIdsForSelectedExpansions = createSelector(\n  [getSelectedBasicNemesisCardsForSelectedExpansions],\n  (basicNemesisCards) => basicNemesisCards.map((card) => card.id)\n)\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\n\nexport type State = {\n  Predefined: types.MarketSetups\n  Custom: types.MarketSetups\n  migrationVersion: number\n}\n\nexport const isSupplySetupState = (value: unknown): value is State => {\n  if (typeof value !== 'object' || !value) {\n    return false\n  } else {\n    return 'Predefined' in value && 'Custom' in value\n  }\n}\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/SupplySetups/TOGGLE_ALL',\n  TOGGLE_SETUP = 'Settings/SupplySetups/TOGGLE_SETUP',\n  SAVE_CUSTOM_SETUP = 'Settings/SupplySetups/SAVE_CUSTOM_SETUP',\n  CANCEL_EDIT_SETUP = 'Settings/SupplySetups/CANCEL_EDIT_SETUP',\n  EDIT_CUSTOM_SETUP = 'Settings/SupplySetups/EDIT_CUSTOM_SETUP',\n  DELETE_CUSTOM_SETUP = 'Settings/SupplySetups/DELETE_CUSTOM_SETUP',\n  SET_TO_DB = 'Settings/SupplySetups/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/SupplySetups/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/SupplySetups/SET_TO_DB_FAILURE',\n  MIGRATION_SUCCESS = 'Settings/SupplySetups/MIGRATION_SUCCESS',\n  FETCH_FROM_DB = 'Settings/SupplySetups/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/SupplySetups/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/SupplySetups/FETCH_FROM_DB_FAILURE',\n}\n\nexport type SetupType = 'Predefined' | 'Custom'\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type SupplySetupsStateSlice = {\n  Settings: {\n    SupplySetups: State\n  }\n}\n\nexport type PredefinedSupplySetupsStateSlice = {\n  Settings: {\n    SupplySetups: {\n      Predefined: {\n        setups: { [id: string]: types.IMarketSetup }\n      }\n    }\n  }\n}\n\nexport type PredefinedSupplySetupIdsStateSlice = {\n  Settings: {\n    SupplySetups: {\n      Predefined: {\n        ids: string[]\n      }\n    }\n  }\n}\n\nexport type CustomSupplySetupsStateSlice = {\n  Settings: {\n    SupplySetups: {\n      Custom: {\n        setups: { [id: string]: types.IMarketSetup }\n      }\n    }\n  }\n}\n\nexport type CustomSupplySetupIdsStateSlice = {\n  Settings: {\n    SupplySetups: {\n      Custom: {\n        ids: string[]\n      }\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { ActionTypes, State, SetupType } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleSetup: (setup: string, setupType: SetupType) =>\n    createAction(ActionTypes.TOGGLE_SETUP, { setup, setupType }),\n  saveCustomSetup: (setup: types.IMarketSetup) =>\n    createAction(ActionTypes.SAVE_CUSTOM_SETUP, setup),\n  cancelEdit: (id: string) => createAction(ActionTypes.CANCEL_EDIT_SETUP, id),\n  editCustomSetup: (id: string) =>\n    createAction(ActionTypes.EDIT_CUSTOM_SETUP, id),\n  deleteCustomSetup: (id: string) =>\n    createAction(ActionTypes.DELETE_CUSTOM_SETUP, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  migrationSuccess: (state: State) =>\n    createAction(ActionTypes.MIGRATION_SUCCESS, state),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  [id: string]: boolean\n}\n\nexport const initialState: State = {\n  expansions: false,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE = 'Settings/Accordions/TOGGLE',\n}\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggle: (id: string) => createAction(ActionTypes.TOGGLE, id),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE: {\n      const id = action.payload\n\n      return {\n        ...state,\n        [id]: !state[id],\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type AccordionStateSlice = {\n  Settings: {\n    Accordions: {\n      [id: string]: boolean\n    }\n  }\n}\n\nconst getAccordionStateById = (state: AccordionStateSlice, id: string) =>\n  state.Settings.Accordions[id]\n\nexport const selectors = {\n  getAccordionStateById,\n}\n","const SUPPLY_DB_KEY = 'supplySetups-1.6' // FIXME this is a quickfix, see https://github.com/on3iro/aeons-end-randomizer/issues/138\n\nexport { SUPPLY_DB_KEY }\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { SUPPLY_DB_KEY } from './constants'\nimport { State } from './types'\nimport { actions } from './actions'\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [SUPPLY_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n\nconst allSetsAreSelected = (state: State) =>\n  Object.values({ ...state.Predefined.setups, ...state.Custom.setups }).every(\n    (val) => val.active\n  )\n\nexport { newStateWithDBWrite, allSetsAreSelected }\n","import { State } from '../types'\nimport { newStateWithDBWrite, allSetsAreSelected } from '../helpers'\n\nexport const toggleAll = (state: State) => {\n  const allSetsSelected = allSetsAreSelected(state)\n  const updatedPredefined = Object.values(state.Predefined.setups).reduce(\n    (acc, setup) => ({\n      ...acc,\n      [setup.id]: {\n        ...setup,\n        active: setup.default ? true : !allSetsSelected,\n      },\n    }),\n    {}\n  )\n  const updatedCustom = Object.values(state.Custom.setups).reduce(\n    (acc, setup) => ({\n      ...acc,\n      [setup.id]: { ...setup, active: !allSetsSelected },\n    }),\n    {}\n  )\n  const newState = {\n    Predefined: {\n      ...state.Predefined,\n      setups: updatedPredefined,\n    },\n    Custom: {\n      ...state.Custom,\n      setups: updatedCustom,\n    },\n    migrationVersion: state.migrationVersion,\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const toggleSetup = (\n  state: State,\n  action: ReturnType<typeof actions.toggleSetup>\n) => {\n  const { setup, setupType } = action.payload\n  const newState = {\n    ...state,\n    [setupType]: {\n      ...state[setupType],\n      setups: {\n        ...state[setupType].setups,\n        [setup]: {\n          ...state[setupType].setups[setup],\n          active: !state[setupType].setups[setup].active,\n        },\n      },\n    },\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import * as types from 'aer-types/types'\n\n/**\n * Could be used inside .filter() to create a list of unique elements.\n */\nexport const distinct = <T>(value: T, index: number, self: Array<T>) =>\n  self.indexOf(value) === index\n\ntype ObjWithId = { id: string }\nexport const distinctById = <T extends ObjWithId>(\n  value: T,\n  index: number,\n  self: Array<T>\n) => self.findIndex((el) => value.id === el.id) === index\n\nexport const sortByCardType = (\n  a: { type: types.CardType },\n  b: { type: types.CardType }\n) => {\n  if (a.type === 'Gem') {\n    return -1\n  }\n\n  if (a.type === 'Relic' && b.type === 'Spell') {\n    return -1\n  }\n\n  return 1\n}\n\nexport const byCost = (a: { cost?: number }, b: { cost?: number }) => {\n  if (!a.cost) {\n    return -1\n  }\n\n  if (!b.cost) {\n    return 1\n  }\n\n  if (a.cost < b.cost) {\n    return -1\n  }\n\n  if (a.cost > b.cost) {\n    return 1\n  }\n\n  return 0\n}\n\nexport const byAscendingVersion = (a: types.Migration, b: types.Migration) => {\n  if (a.version > b.version) {\n    return 1\n  } else if (a.version < b.version) {\n    return -1\n  } else {\n    return 0\n  }\n}\n","import { sortByCardType } from 'helpers'\n\nimport { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const saveCustomSetup = (\n  state: State,\n  action: ReturnType<typeof actions.saveCustomSetup>\n) => {\n  const setup = action.payload\n  // Because we currently do not have a specific mapping from Blueprints\n  // to actual cards in the supply it is important,\n  // that we keep the order of Gem -> Relic -> Spell for supply sets.\n  // TODO is this still the case? \\ Theo\n  const tiles = [...setup.tiles].sort(sortByCardType)\n\n  const ids = setup.isNew ? [setup.id, ...state.Custom.ids] : state.Custom.ids\n\n  const newState = {\n    ...state,\n    Custom: {\n      ...state.Custom,\n      setups: {\n        ...state.Custom.setups,\n        [setup.id]: {\n          ...setup,\n          tiles,\n          isNew: false,\n          isDirty: false,\n        },\n      },\n      ids,\n    },\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { State } from '../types'\nimport { actions } from '../actions'\n\nexport const editCustomSetup = (\n  state: State,\n  action: ReturnType<typeof actions.editCustomSetup>\n) => {\n  const id = action.payload\n\n  return {\n    ...state,\n    Custom: {\n      ...state.Custom,\n      setups: {\n        ...state.Custom.setups,\n        [id]: {\n          ...state.Custom.setups[id],\n          isDirty: true,\n        },\n      },\n    },\n  }\n}\n","import { State } from '../types'\nimport { actions } from '../actions'\n\nexport const cancelEditSetup = (\n  state: State,\n  action: ReturnType<typeof actions.cancelEdit>\n) => {\n  const id = action.payload\n\n  const { [id]: setup, ...rest } = state.Custom.setups\n\n  if (setup.isNew) {\n    return {\n      ...state,\n      Custom: {\n        ...state.Custom,\n        setups: { ...rest },\n      },\n    }\n  }\n\n  return {\n    ...state,\n    Custom: {\n      ...state.Custom,\n      setups: {\n        ...rest,\n        [id]: {\n          ...setup,\n          isDirty: false,\n        },\n      },\n    },\n  }\n}\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const deleteCustomSetup = (\n  state: State,\n  action: ReturnType<typeof actions.deleteCustomSetup>\n) => {\n  const id = action.payload\n\n  const { [id]: setup, ...rest } = state.Custom.setups\n  const newState = {\n    ...state,\n    Custom: {\n      ids: state.Custom.ids.filter(customId => customId !== id),\n      setups: { ...rest },\n    },\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { get as getFromDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport { SUPPLY_DB_KEY } from '../constants'\nimport { actions } from '../actions'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getFromDb, {\n      args: [SUPPLY_DB_KEY],\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  return action.payload\n}\n","import * as types from 'aer-types/types'\n\nimport { isSupplySetupState } from '../types'\n\nimport { byAscendingVersion } from 'helpers'\nimport { migrateToPredefinedWithIds } from './migrateToPredefinedWithIds'\nimport { GetStateFn } from 'Redux/helpers'\n\nconst migrations: types.Migration[] = [\n  {\n    version: 2020092501,\n    transformer: migrateToPredefinedWithIds,\n  },\n].sort(byAscendingVersion)\n\nexport const getLatestMigrationVersion = () =>\n  migrations.reduce((acc, migration) => {\n    if (migration.version > acc) {\n      return migration.version\n    } else {\n      return acc\n    }\n  }, 0)\n\nexport const migrate = (\n  getState: GetStateFn,\n  {\n    newState,\n  }: {\n    newState: unknown\n  }\n) => {\n  const rootState = getState()\n\n  if (!isSupplySetupState(newState)) {\n    return rootState.Settings.SupplySetups\n  }\n\n  const migrated = migrations.reduce((acc, migration) => {\n    if (!newState) {\n      return {\n        ...migration.transformer(rootState, rootState.Settings.SupplySetups),\n        migrationVersion: migration.version,\n      }\n    } else if (!newState.migrationVersion) {\n      return {\n        ...migration.transformer(rootState, acc),\n        migrationVersion: migration.version,\n      }\n    } else if (migration.force) {\n      return {\n        ...migration.transformer(rootState, acc),\n        migrationVersion: migration.version,\n      }\n    } else if (\n      acc.migrationVersion &&\n      migration.version > acc.migrationVersion\n    ) {\n      return {\n        ...migration.transformer(rootState, acc),\n        migrationVersion: migration.version,\n      }\n    } else {\n      return acc\n    }\n  }, newState)\n\n  return migrated\n}\n","import { RootState } from 'Redux/Store'\n\nimport { State } from '../types'\n\nexport const migrateToPredefinedWithIds = (_: RootState, newState: State) => {\n  return {\n    Predefined: {\n      ...newState.Predefined,\n      setups: Object.values(newState.Predefined.setups).reduce((acc, setup) => {\n        return {\n          ...acc,\n          [setup.id]: {\n            ...setup,\n            tiles: setup.tiles.map((tile, index) => ({ ...tile, id: index })),\n          },\n        }\n      }, {}),\n    },\n    Custom: newState.Custom,\n  }\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { migrate } from '../migrations'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { SUPPLY_DB_KEY } from '../constants'\n\nexport const migrateAfterFetch = (\n  state: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  const newState = action.payload\n  return loop(\n    state,\n    Cmd.run(migrate, {\n      args: [\n        Cmd.getState,\n        {\n          newState,\n        },\n      ],\n      successActionCreator: actions.migrationSuccess,\n    })\n  )\n}\n\nexport const migrateAfterFetchSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.migrationSuccess>\n) => {\n  const newState = action.payload || state\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [SUPPLY_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport AERData from 'aer-data/src/index'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nconst marketSetupsWithTileIds = Object.values(\n  AERData.marketsetups.setups\n).reduce((acc, setup) => {\n  return {\n    ...acc,\n    [setup.id]: {\n      ...setup,\n      tiles: setup.tiles.map((tile, index) => ({ ...tile, id: index })),\n    },\n  }\n}, {})\n\nexport const initialState: State = {\n  Predefined: {\n    setups: marketSetupsWithTileIds,\n    ids: AERData.marketsetups.ids,\n  },\n  Custom: {\n    setups: {},\n    ids: [],\n  },\n  migrationVersion: 0,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      return reducerHelpers.toggleAll(state)\n    }\n\n    case ActionTypes.TOGGLE_SETUP: {\n      return reducerHelpers.toggleSetup(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.migrateAfterFetch(state, action)\n    }\n\n    case ActionTypes.MIGRATION_SUCCESS: {\n      return reducerHelpers.migrateAfterFetchSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    case ActionTypes.SAVE_CUSTOM_SETUP: {\n      return reducerHelpers.saveCustomSetup(state, action)\n    }\n\n    case ActionTypes.EDIT_CUSTOM_SETUP: {\n      return reducerHelpers.editCustomSetup(state, action)\n    }\n\n    case ActionTypes.CANCEL_EDIT_SETUP: {\n      return reducerHelpers.cancelEditSetup(state, action)\n    }\n\n    case ActionTypes.DELETE_CUSTOM_SETUP: {\n      return reducerHelpers.deleteCustomSetup(state, action)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { createSelector } from 'reselect'\n\nimport {\n  SupplySetupsStateSlice,\n  PredefinedSupplySetupsStateSlice,\n  PredefinedSupplySetupIdsStateSlice,\n  CustomSupplySetupsStateSlice,\n  CustomSupplySetupIdsStateSlice\n} from './types'\nimport { allSetsAreSelected } from './helpers'\n\nconst getState = (state: SupplySetupsStateSlice) => state.Settings.SupplySetups\n\nconst getPredefinedSetups = (state: PredefinedSupplySetupsStateSlice) =>\n  state.Settings.SupplySetups.Predefined.setups\nconst getPredefinedIds = (state: PredefinedSupplySetupIdsStateSlice) =>\n  state.Settings.SupplySetups.Predefined.ids\n\nconst getCustomSetups = (state: CustomSupplySetupsStateSlice) =>\n  state.Settings.SupplySetups.Custom.setups\nconst getCustomIds = (state: CustomSupplySetupIdsStateSlice) =>\n  state.Settings.SupplySetups.Custom.ids\n\nconst getPredefinedList = createSelector(\n  [getPredefinedIds, getPredefinedSetups],\n  (ids, setups) => ids.map(id => setups[id]).filter(setup => !setup.default)\n)\n\nconst getCustomList = createSelector(\n  [getCustomIds, getCustomSetups],\n  (ids, setups) => ids.map(id => setups[id]).filter(setup => !setup.default)\n)\n\nconst getCustomAndPredefined = createSelector(\n  [getPredefinedSetups, getCustomSetups],\n  (predefined, custom) => ({ ...predefined, ...custom })\n)\n\nconst getAllAsArray = createSelector(\n  [getCustomAndPredefined],\n  customAndPredefined => Object.values(customAndPredefined)\n)\n\nconst makeGetCustomAndPredefined = () => getCustomAndPredefined\n\nconst getAllExceptDefaultSets = createSelector([getAllAsArray], allSets =>\n  allSets.filter(set => !set.default)\n)\n\nconst getActiveSetups = createSelector([getAllAsArray], allSets =>\n  allSets.filter(setup => setup.active)\n)\n\nconst getAllSetsSelected = createSelector([getState], state =>\n  allSetsAreSelected(state)\n)\n\nexport const selectors = {\n  getActiveSetups,\n  getAllAsArray,\n  getAllExceptDefaultSets,\n  getAllSetsSelected,\n  getCustomAndPredefined,\n  getCustomList,\n  getPredefinedList,\n  makeGetCustomAndPredefined,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport * as types from 'aer-types/types'\n\nimport { getRandomEntity } from 'Redux/helpers'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{ id: string }> | undefined\nexport const initialState: State = undefined\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Nemesis/SET_RANDOM',\n}\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  setRandomNemesis: (\n    availableNemeses: ReadonlyArray<types.Nemesis>,\n    seed?: types.Seed\n  ) =>\n    createAction(ActionTypes.SET_RANDOM, {\n      nemesis: getRandomEntity(availableNemeses, seed),\n    }),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      return {\n        id: action.payload.nemesis.entity.id,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type NemesisStateSlice = {\n  Randomizer: {\n    Nemesis: State\n  }\n}\n\nconst getNemesis = (state: NemesisStateSlice) => state.Randomizer.Nemesis\n\nexport const selectors = {\n  getNemesis,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Expansions from './Expansions'\nimport * as SupplySetups from './SupplySetups'\nimport * as Accordions from './Accordions'\n\nexport type State = {\n  Expansions: Expansions.State\n  SupplySetups: SupplySetups.State\n  Accordions: Accordions.State\n}\n\nexport type Action = Expansions.Action | SupplySetups.Action | Accordions.Action\n\nexport const actions = {\n  Expansions: Expansions.actions,\n  SupplySetups: SupplySetups.actions,\n  Accordions: Accordions.actions,\n}\n\nexport const selectors = {\n  Expansions: Expansions.selectors,\n  SupplySetups: SupplySetups.selectors,\n  Accordions: Accordions.selectors,\n}\n\nexport const initialState = {\n  Expansions: Expansions.initialState,\n  SupplySetups: SupplySetups.initialState,\n  Accordions: Accordions.initialState,\n}\n\nexport const Reducer = combineReducers({\n  Expansions: Expansions.Reducer,\n  SupplySetups: SupplySetups.Reducer,\n  Accordions: Accordions.Reducer,\n})\n","import { Cmd } from 'redux-loop'\nimport * as types from 'aer-types/types'\nimport seedrandom from 'seedrandom'\nimport shortid from 'shortid'\nimport { RootState } from './Store'\n\ntype CardListReduceResult = {\n  availableCards: types.ICard[]\n  result: Array<types.ICard & { blueprintId: number | string }>\n  seed: types.Seed\n}\n\nexport type GetStateFn = <R = RootState>() => R\nexport type DispatchFn = Cmd.Dispatch\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n */\nexport const filterByCost = (\n  card: { cost: number },\n  setupBlueprint: {\n    operation: types.Operation\n    threshold?: number\n    values?: Array<number>\n  }\n) => {\n  switch (setupBlueprint.operation) {\n    case '<': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost < setupBlueprint.threshold\n    }\n    case '>': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost > setupBlueprint.threshold\n    }\n    case '<=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost <= setupBlueprint.threshold\n    }\n    case '>=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost >= setupBlueprint.threshold\n    }\n    case '=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost === setupBlueprint.threshold\n    }\n    case 'OR': {\n      if (!setupBlueprint.values) return true\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nexport const createCardList = (\n  availableCards: types.ICard[],\n  blueprints: Array<types.IBluePrint>,\n  getEntity: types.SeededEntityGetter = getRandomEntity,\n  seed?: types.Seed\n): CardListReduceResult =>\n  blueprints.reduce(\n    (acc: CardListReduceResult, blueprint: types.IBluePrint) => {\n      const filteredByCost = acc.availableCards.filter((card) =>\n        filterByCost(card, blueprint)\n      )\n\n      // Skip blueprint if no compatible card is left\n      if (filteredByCost.length <= 0) {\n        return acc\n      }\n\n      const cardResult = getEntity(filteredByCost, acc.seed)\n      const card = { ...cardResult.entity, blueprintId: blueprint.id || 0 }\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        (entity) => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [...acc.result, card],\n        seed: cardResult.seed,\n      }\n    },\n    {\n      availableCards,\n      result: [],\n      seed: seed || { seed: shortid.generate(), state: true },\n    }\n  )\n\n/**\n * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n * The amount of cards generated is determined by the amount of tileSetups matching\n * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n * specified type is \"Gem\" as well, a list of two cards will be created.\n *\n * return List<Card>\n */\nexport const getRandomCardsByType = (\n  availableCards: ReadonlyArray<types.ICard>,\n  tileSetups: ReadonlyArray<types.IBluePrint>,\n  cardType: types.CardType,\n  seed?: types.Seed\n): CardListReduceResult => {\n  const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n  const availableCardsOfType =\n    cardType === 'ANY'\n      ? (availableCards as types.ICard[])\n      : availableCards.filter(({ type }) => type === cardType)\n\n  return createCardList(availableCardsOfType, cardSlots, getRandomEntity, seed)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n */\nexport const createSupply = (\n  availableCards: ReadonlyArray<types.ICard>,\n  tileSetups: ReadonlyArray<types.IBluePrint>,\n  seed?: types.Seed\n) => {\n  const gemsResult = getRandomCardsByType(\n    availableCards,\n    tileSetups,\n    'Gem',\n    seed\n  )\n  const relicsResult = getRandomCardsByType(\n    availableCards,\n    tileSetups,\n    'Relic',\n    gemsResult.seed\n  )\n  const spellsResult = getRandomCardsByType(\n    availableCards,\n    tileSetups,\n    'Spell',\n    relicsResult.seed\n  )\n\n  const anyResult = getRandomCardsByType(\n    availableCards,\n    tileSetups,\n    'ANY',\n    spellsResult.seed\n  )\n\n  const gems = [\n    ...gemsResult.result,\n    ...anyResult.result.filter((c) => c.type === 'Gem'),\n  ]\n  const relics = [\n    ...relicsResult.result,\n    ...anyResult.result.filter((c) => c.type === 'Relic'),\n  ]\n  const spells = [\n    ...spellsResult.result,\n    ...anyResult.result.filter((c) => c.type === 'Spell'),\n  ]\n\n  return {\n    gems,\n    relics,\n    spells,\n    seed: anyResult.seed,\n  }\n}\n\nexport const createArrayWithDefaultValues = (\n  size: number,\n  defaultValue: any\n) => {\n  return Array.from({ length: size }, () => defaultValue)\n}\n\nexport const createSlotList = (amount: number): Array<types.IEmptyBluePrint> =>\n  createArrayWithDefaultValues(amount, { type: 'EMPTY', operation: 'NoOp' })\n\nexport const generateListFrom = <T extends types.Entity>(\n  availableEntities: Array<T> | ReadonlyArray<T>,\n  slots: Array<any>,\n  getEntity: types.SeededEntityGetter,\n  seed?: types.Seed\n): { availableEntities: Array<T>; result: Array<T>; seed: types.Seed } => {\n  return slots.reduce(\n    (acc, _) => {\n      // If no entity is left, simply return the actual empty slot\n      const rngResult = getEntity(acc.availableEntities, acc.seed)\n      const entity = rngResult.entity\n\n      if (!entity) {\n        return { ...acc, seed: rngResult.seed }\n      }\n\n      // Make sure each entity will only be added to the result list once\n      const remainingEntities = acc.availableEntities.filter(\n        (available: types.Entity) => {\n          if (typeof available === 'string' && typeof entity === 'string') {\n            return available !== entity\n          }\n\n          if (typeof available === 'object' && typeof entity === 'object') {\n            return available.id !== entity.id\n          }\n\n          return true\n        }\n      )\n\n      return {\n        availableEntities: remainingEntities,\n        result: [...acc.result, entity],\n        seed: rngResult.seed,\n      }\n    },\n    { availableEntities, result: [], seed }\n  )\n}\n\nexport const createTurnOrderCardList = (\n  availableCards: types.ITurnOrderCard[],\n  slots: types.ITurnOrderCard[],\n  getEntity: types.SeededEntityGetter,\n  seed?: types.Seed\n) => generateListFrom(availableCards, slots, getEntity, seed)\n\nexport const shuffleDeck = (\n  deck: types.ITurnOrderCard[]\n): types.ITurnOrderCard[] => {\n  return createTurnOrderCardList(deck, deck, getRandomEntity).result\n}\n\nexport const createMageList = (\n  availableMages: ReadonlyArray<types.Mage>,\n  slots: Array<types.Slot>,\n  getEntity: types.SeededEntityGetter,\n  seed?: types.Seed\n) => generateListFrom(availableMages, slots, getEntity, seed)\n\nexport const createIdList = (\n  availableIds: ReadonlyArray<string>,\n  slots: string[],\n  getEntity: types.SeededEntityGetter = getRandomEntity,\n  seed?: types.Seed\n) => generateListFrom(availableIds, slots, getEntity, seed)\n\n/**\n * Gets a random value from a list. (The wording of entities is just used for semantic context)\n * @param availableEntities: List of entities to pick from\n * @param seed: seed for pseudo randomization, if no seed is provided a new unique\n *  seed will be created everytime the function is run\n */\nexport const getRandomEntity = <E>(\n  availableEntities: ReadonlyArray<E>,\n  seed: types.Seed = {\n    seed: shortid.generate(),\n  }\n): {\n  entity: E\n  seed: types.Seed\n} => {\n  const rng = seedrandom(seed.seed, { state: seed.state || true })\n\n  return {\n    entity: availableEntities[Math.floor(rng() * availableEntities.length)],\n    seed: {\n      seed: seed.seed,\n      state: rng.state(),\n    },\n  }\n}\n\nexport const getOperationString = (\n  operation: types.Operation,\n  values?: number[],\n  threshold?: number\n) => {\n  if (operation === 'NoOp') {\n    return ''\n  }\n\n  if (operation === 'ANY') {\n    return operation\n  }\n\n  if (operation === 'OR' && values) {\n    return values.join('/')\n  }\n\n  const thresholdValue = threshold ? threshold : ''\n\n  return `${operation} ${thresholdValue}`\n}\n\nexport const createBasicNemesisCardList = (\n  availableBasicNemesisCards: ReadonlyArray<types.BasicNemesisCard>,\n  slots: Array<types.Slot>,\n  getEntity: types.SeededEntityGetter,\n  seed?: types.Seed\n) => generateListFrom(availableBasicNemesisCards, slots, getEntity, seed)\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\n\nexport type State = PlayerCount\n\nexport enum ActionTypes {\n  SET = 'BasicNemesisCards/PlayerCount/SET',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type PlayerCount = types.PlayerCount\n\nexport type PlayerCountStateSlice = {\n  Randomizer: {\n    BasicNemesisCards: {\n      PlayerCount: PlayerCount\n    }\n  }\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport { ActionTypes, PlayerCount } from './types'\n\nexport const actions = {\n  setCount: (count: PlayerCount) => createAction(ActionTypes.SET, count),\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport { actions } from './actions'\n\nexport type State = Readonly<{\n  Tier1: ReadonlyArray<Readonly<{ id: string }>>\n  Tier2: ReadonlyArray<Readonly<{ id: string }>>\n  Tier3: ReadonlyArray<Readonly<{ id: string }>>\n  recoverySeed?: string\n}>\n\nexport enum ActionTypes {\n  CREATE = 'BasicNemesisCards/RandomCards/CREATE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type RandomCardsStateSlice = {\n  Randomizer: {\n    BasicNemesisCards: {\n      RandomCards: State\n    }\n  }\n}\n","import { PlayerCountStateSlice } from './types'\n\nconst getCount = (state: PlayerCountStateSlice) =>\n  state.Randomizer.BasicNemesisCards.PlayerCount\n\nexport const selectors = {\n  getCount,\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { ActionTypes } from './types'\n\nimport { PlayerCount } from '../PlayerCount/types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  createBasicNemesisCardDeck: (\n    availableCards: ReadonlyArray<types.BasicNemesisCard>,\n    playerCount: PlayerCount,\n    seed?: types.Seed\n  ) => createAction(ActionTypes.CREATE, { availableCards, playerCount, seed }),\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport * as types from 'aer-types/types'\n\n///////////\n// STATE //\n///////////\n\nexport type MageCount = types.PlayerCount\nexport type State = MageCount\nexport const initialState: State = 1\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET = 'Mages/Count/SET',\n}\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  setCount: (count: MageCount) => createAction(ActionTypes.SET, count),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type MagesCountStateSlice = {\n  Randomizer: {\n    Mages: {\n      Count: State\n    }\n  }\n}\n\nconst getCount = (state: MagesCountStateSlice) => state.Randomizer.Mages.Count\n\nexport const selectors = {\n  getCount,\n}\n","import seedrandom from 'seedrandom'\nimport shortid from 'shortid'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  getRandomEntity,\n  createSlotList,\n  createBasicNemesisCardList,\n} from 'Redux/helpers'\n\ntype CardMatrix = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport const cardMatrix: CardMatrix = {\n  tier1: {\n    1: 1,\n    2: 3,\n    3: 5,\n    4: 8,\n  },\n  tier2: {\n    1: 3,\n    2: 5,\n    3: 6,\n    4: 7,\n  },\n  tier3: {\n    1: 7,\n    2: 7,\n    3: 7,\n    4: 7,\n  },\n}\n\nexport const getBasicNemesisCardsByTier = (\n  cards: ReadonlyArray<types.BasicNemesisCard>,\n  tier: types.NemesisCardTier\n) => cards.filter((card) => card.tier === tier)\n\nexport const getRandomMinionAmount = (\n  minCount: number = 1,\n  count: number = 3,\n  seed: types.Seed = {\n    seed: shortid.generate(),\n  }\n) => {\n  const rng = seedrandom(seed.seed)\n  return (\n    Math.floor(rng() * (Math.floor(count) - Math.ceil(minCount))) +\n    Math.ceil(minCount)\n  )\n}\n\nexport const drawMinions = (\n  cards: ReadonlyArray<types.BasicNemesisCard>,\n  amount: number,\n  seed?: types.Seed\n) => {\n  const minions = cards.filter((card) => card.type === 'Minion')\n  const minionsList = createBasicNemesisCardList(\n    minions,\n    createSlotList(amount),\n    getRandomEntity,\n    seed\n  ).result\n\n  return minionsList.map((minion) => {\n    return {\n      id: minion.id,\n    }\n  })\n}\n\nexport const drawPowersAndAttacks = (\n  cards: ReadonlyArray<types.BasicNemesisCard>,\n  amount: number,\n  seed?: types.Seed\n) => {\n  const powersAndAttacks = cards.filter((card) => card.type !== 'Minion')\n  const powersAndAttacksList = createBasicNemesisCardList(\n    powersAndAttacks,\n    createSlotList(amount),\n    getRandomEntity,\n    seed\n  ).result\n\n  return powersAndAttacksList.map((powerAndAttack) => {\n    return {\n      id: powerAndAttack.id,\n    }\n  })\n}\n\nexport const getRandomBasicNemesisCardsByTier = (\n  cards: ReadonlyArray<types.BasicNemesisCard>,\n  tier: types.NemesisCardTier,\n  playerCount: types.PlayerCount,\n  seed?: types.Seed\n) => {\n  // Get cards by tier\n  const cardsByTier = getBasicNemesisCardsByTier(cards, tier)\n\n  // Get amount of minions per player\n  const minionAmount =\n    playerCount === 1 && tier === 1\n      ? getRandomMinionAmount(0, 2, seed)\n      : getRandomMinionAmount(1, 3, seed)\n\n  // Draw up to max amount of minions from minions\n  const randomMinions = drawMinions(cardsByTier, minionAmount, seed)\n\n  // Draw tierCount - minionCount cards from power/attack pool\n  const randomPowersAndAttacks = drawPowersAndAttacks(\n    cardsByTier,\n    cardMatrix[`tier${tier}`][playerCount] - randomMinions.length,\n    seed\n  )\n\n  return [...randomMinions, ...randomPowersAndAttacks]\n}\n\nexport const getRandomBasicNemesisCardList = (\n  cards: ReadonlyArray<types.BasicNemesisCard>,\n  playerCount: types.PlayerCount,\n  seed?: types.Seed\n) => {\n  return {\n    Tier1: getRandomBasicNemesisCardsByTier(cards, 1, playerCount, seed),\n    Tier2: getRandomBasicNemesisCardsByTier(cards, 2, playerCount, seed),\n    Tier3: getRandomBasicNemesisCardsByTier(cards, 3, playerCount, seed),\n  }\n}\n","import { State } from '../types'\n\nimport { actions } from '../actions'\n\nimport { getRandomBasicNemesisCardList } from './helpers'\n\nexport const createDeck = (\n  state: State,\n  action: ReturnType<typeof actions.createBasicNemesisCardDeck>\n) => {\n  const { availableCards, playerCount, seed } = action.payload\n\n  const newState = getRandomBasicNemesisCardList(\n    availableCards,\n    playerCount,\n    seed\n  )\n\n  return {\n    ...state,\n    Tier1: newState.Tier1,\n    Tier2: newState.Tier2,\n    Tier3: newState.Tier3,\n  }\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { State, Action, ActionTypes } from './types'\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = {\n  Tier1: [],\n  Tier2: [],\n  Tier3: [],\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.CREATE: {\n      return reducerHelpers.createDeck(state, action)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as PlayerCount from './PlayerCount'\nimport * as RandomCards from './RandomCards'\n\nexport type State = {\n  PlayerCount: PlayerCount.State\n  RandomCards: RandomCards.State\n}\n\nexport type Action = PlayerCount.Action | RandomCards.Action\n\nexport const selectors = {\n  PlayerCount: PlayerCount.selectors,\n  RandomCards: RandomCards.selectors,\n}\n\nexport const actions = {\n  PlayerCount: PlayerCount.actions,\n  RandomCards: RandomCards.actions,\n}\n\nexport const initialState = {\n  PlayerCount: PlayerCount.initialState,\n  RandomCards: RandomCards.initialState,\n}\n\nexport const Reducer = combineReducers({\n  PlayerCount: PlayerCount.Reducer,\n  RandomCards: RandomCards.Reducer,\n})\n","import { RandomCardsStateSlice } from './types'\n\nconst getBasicNemesisCards = (state: RandomCardsStateSlice) =>\n  state.Randomizer.BasicNemesisCards.RandomCards\n\nexport const selectors = {\n  getBasicNemesisCards,\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { State, Action, ActionTypes } from './types'\n\nexport const initialState: State = 1\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport * as types from 'aer-types/types'\n\nimport { createSlotList, createMageList, getRandomEntity } from 'Redux/helpers'\n\nimport { MageCount } from '../Count'\n\n///////////\n// STATE //\n///////////\n\nexport type State = ReadonlyArray<Readonly<{ id: string }>>\nexport const initialState: State = []\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Mages/Recruited/SET_RANDOM',\n}\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  setRandomMages: (\n    availableMages: ReadonlyArray<types.Mage>,\n    count: MageCount,\n    seed?: types.Seed\n  ) => {\n    const length = Math.min(availableMages.length, count)\n    const slotList = createSlotList(length)\n    const mageList = createMageList(\n      availableMages,\n      slotList,\n      getRandomEntity,\n      seed\n    ).result\n    const mageIds = mageList.map((mage) => {\n      return {\n        id: mage.id,\n      }\n    })\n\n    return createAction(ActionTypes.SET_RANDOM, { mageIds })\n  },\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      return action.payload.mageIds\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type MagesRecruitedStateSlice = {\n  Randomizer: {\n    Mages: {\n      Recruited: State\n    }\n  }\n}\n\nconst getMages = (state: MagesRecruitedStateSlice) =>\n  state.Randomizer.Mages.Recruited\n\nexport const selectors = {\n  getMages,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport * as types from 'aer-types/types'\nimport { byCost } from 'helpers'\n\nimport { createSupply } from 'Redux/helpers'\nimport { LockedCard } from '../LockedCards'\n\n///////////\n// STATE //\n///////////\n\ntype Tiles = ReadonlyArray<\n  Readonly<{ id: string; blueprintId: string | number }>\n> | null\n\nexport type State = Readonly<{\n  Tiles: Tiles\n}>\n\nexport const initialState: State = {\n  Tiles: null,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  RESET = 'Supply/RandomSetup/RESET',\n  CREATE = 'Supply/RandomSetup/CREATE',\n}\n\nconst sortEntitiesByCost = (entities: Array<LockedCard>) =>\n  entities.sort(byCost).map((entity) => {\n    return {\n      id: entity.id,\n      blueprintId: entity.blueprintId || 0, // FIXME we should probably rather fix this in aer-data and aer-types/types\n      type: entity.type,\n    }\n  })\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  resetMarket: () => createAction(ActionTypes.RESET),\n  createMarket: (\n    availableCards: ReadonlyArray<types.ICard>,\n    tiles: ReadonlyArray<types.Slot>,\n    lockedCards: ReadonlyArray<LockedCard>,\n    seed?: types.Seed\n  ) => {\n    const tilesFilteredByLocked = tiles.filter(\n      (tile) =>\n        lockedCards.findIndex((card) => card.blueprintId === tile.id) === -1\n    )\n\n    const lockedGems = lockedCards.filter(\n      (lockedCard) => lockedCard.type === 'Gem'\n    )\n    const lockedRelics = lockedCards.filter(\n      (lockedCard) => lockedCard.type === 'Relic'\n    )\n    const lockedSpells = lockedCards.filter(\n      (lockedCard) => lockedCard.type === 'Spell'\n    )\n\n    const {\n      gems: newGems,\n      relics: newRelics,\n      spells: newSpells,\n    } = createSupply(availableCards, tilesFilteredByLocked, seed)\n\n    const gems = [...lockedGems, ...newGems]\n    const relics = [...lockedRelics, ...newRelics]\n    const spells = [...lockedSpells, ...newSpells]\n\n    const gemsByCost = sortEntitiesByCost(gems)\n    const relicsByCost = sortEntitiesByCost(relics)\n    const spellsByCost = sortEntitiesByCost(spells)\n\n    return createAction(ActionTypes.CREATE, {\n      supply: [...gemsByCost, ...relicsByCost, ...spellsByCost],\n    })\n  },\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.RESET: {\n      return initialState\n    }\n\n    case ActionTypes.CREATE: {\n      const { supply } = action.payload\n\n      return {\n        ...state,\n        Tiles: supply,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type RandomSetupTilesStateSlice = {\n  Randomizer: {\n    Supply: {\n      RandomSetup: {\n        Tiles: Tiles\n      }\n    }\n  }\n}\n\nconst getTiles = (state: RandomSetupTilesStateSlice) =>\n  state.Randomizer.Supply.RandomSetup.Tiles\n\nexport const selectors = {\n  getTiles,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Count from './Count'\nimport * as Recruited from './Recruited'\n\nexport type State = {\n  Count: Count.State\n  Recruited: Recruited.State\n}\n\nexport type Action = Count.Action | Recruited.Action\n\nexport const selectors = {\n  Count: Count.selectors,\n  Recruited: Recruited.selectors,\n}\n\nexport const actions = {\n  Count: Count.actions,\n  Recruited: Recruited.actions,\n}\n\nexport const initialState = {\n  Count: Count.initialState,\n  Recruited: Recruited.initialState,\n}\n\nexport const Reducer = combineReducers({\n  Count: Count.Reducer,\n  Recruited: Recruited.Reducer,\n})\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport * as types from 'aer-types/types'\n\n///////////\n// STATE //\n///////////\n\nexport type LockedCard = {\n  id: string\n  blueprintId: string | number\n  type: types.CardType\n  cost: number\n}\n\nexport type State = ReadonlyArray<LockedCard>\n\nexport const initialState: State = []\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  LOCK_TOGGLE = 'Supply/LockedCards/LOCK_TOGGLE',\n}\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  toggleLock: (lockedCard: LockedCard) =>\n    createAction(ActionTypes.LOCK_TOGGLE, lockedCard),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.LOCK_TOGGLE: {\n      if (\n        state.findIndex((lockedCard) => lockedCard.id === action.payload.id) >\n        -1\n      ) {\n        return state.filter((lockedCard) => lockedCard.id !== action.payload.id)\n      } else {\n        return [...state, action.payload]\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type LockedCardsStateSlice = {\n  Randomizer: {\n    Supply: {\n      LockedCards: State\n    }\n  }\n}\n\nconst getLockedCards = (state: LockedCardsStateSlice) =>\n  state.Randomizer.Supply.LockedCards\n\nexport const selectors = {\n  getLockedCards,\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\n\nexport type State = Readonly<{\n  Mode: types.Mode\n  SelectedPlayerCount: types.ITurnOrderPlayerCount\n  SelectedSetup: types.ITurnOrderSetup\n}>\n\nexport enum ActionTypes {\n  SET_MODE = 'TurnOrder/Configuration/SET_MODE',\n  SELECT_PLAYER_COUNT = 'TurnOrder/Configuration/SELECT_PLAYER_COUNT',\n  SELECT_SETUP = 'TurnOrder/Configuration/SELECT_SETUP',\n  SET_TO_DB = 'TurnOrder/Configuration/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'TurnOrder/Configuration/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'TurnOrder/Configuration/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'TurnOrder/Configuration/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/Configuration/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/Configuration/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type ModeStateSlice = {\n  TurnOrder: {\n    Configuration: {\n      Mode: types.Mode\n    }\n  }\n}\n\nexport type SelectedPlayerCountStateSlice = {\n  TurnOrder: {\n    Configuration: {\n      SelectedPlayerCount: types.ITurnOrderPlayerCount\n    }\n  }\n}\n\nexport type SelectedSetupStateSlice = {\n  TurnOrder: {\n    Configuration: {\n      SelectedSetup: types.ITurnOrderSetup\n    }\n  }\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as RandomSetup from './RandomSetup'\nimport * as LockedCards from './LockedCards'\n\nexport type State = {\n  RandomSetup: RandomSetup.State\n  LockedCards: LockedCards.State\n}\n\nexport type Action = RandomSetup.Action | LockedCards.Action\n\nexport const actions = {\n  RandomSetup: RandomSetup.actions,\n  LockedCards: LockedCards.actions,\n}\n\nexport const selectors = {\n  RandomSetup: RandomSetup.selectors,\n  LockedCards: LockedCards.selectors,\n}\n\nexport const initialState = {\n  RandomSetup: RandomSetup.initialState,\n  LockedCards: LockedCards.initialState,\n}\n\nexport const Reducer = combineReducers({\n  RandomSetup: RandomSetup.Reducer,\n  LockedCards: LockedCards.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Nemesis from './Nemesis'\nimport * as BasicNemesisCards from './BasicNemesisCards'\nimport * as Mages from './Mages'\nimport * as Supply from './Supply'\n\nexport type State = {\n  Nemesis: Nemesis.State\n  BasicNemesisCards: BasicNemesisCards.State\n  Mages: Mages.State\n  Supply: Supply.State\n}\n\nexport const actions = {\n  Nemesis: Nemesis.actions,\n  BasicNemesisCards: BasicNemesisCards.actions,\n  Mages: Mages.actions,\n  Supply: Supply.actions,\n}\n\nexport const selectors = {\n  Nemesis: Nemesis.selectors,\n  BasicNemesisCards: BasicNemesisCards.selectors,\n  Mages: Mages.selectors,\n  Supply: Supply.selectors,\n}\n\nexport type Action =\n  | Nemesis.Action\n  | BasicNemesisCards.Action\n  | Mages.Action\n  | Supply.Action\n\nexport const initialState = {\n  Nemesis: Nemesis.initialState,\n  BasicNemesisCards: BasicNemesisCards.initialState,\n  Mages: Mages.initialState,\n  Supply: Supply.initialState,\n}\n\nexport const Reducer = combineReducers({\n  Nemesis: Nemesis.Reducer,\n  BasicNemesisCards: BasicNemesisCards.Reducer,\n  Mages: Mages.Reducer,\n  Supply: Supply.Reducer,\n})\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { ActionTypes } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  setMode: (mode: types.Mode) => createAction(ActionTypes.SET_MODE, mode),\n  selectPlayerCount: (playerCountId: types.PlayerCountId) =>\n    createAction(ActionTypes.SELECT_PLAYER_COUNT, playerCountId),\n  selectSetup: (setupId: types.TurnorderSetupVariationId) =>\n    createAction(ActionTypes.SELECT_SETUP, setupId),\n  setToDB: () => createAction(ActionTypes.SET_TO_DB),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: () => createAction(ActionTypes.SET_TO_DB_FAILURE),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\n\nexport type State = {\n  deck: Array<types.ITurnOrderCard>\n  discard: Array<types.ITurnOrderCard>\n  started: boolean\n  round: number\n}\n\nexport enum ActionTypes {\n  INIT = 'TurnOrder/ActiveGame/INIT',\n  DRAW = 'TurnOrder/ActiveGame/DRAW',\n  NEW_ROUND = 'TurnOrder/ActiveGame/NEW_ROUND',\n  ADD_TO_TOP = 'TurnOrder/ActiveGame/ADD_TO_TOP',\n  ADD_TO_BOTTOM = 'TurnOrder/ActiveGame/ADD_TO_BOTTOM',\n  SHUFFLE_INTO_DECK = 'TurnOrder/ActiveGame/SHUFFLE_INTO_DECK',\n  SET_TURNORDER_TO_DB_SUCCESS = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_SUCCESS',\n  SET_TURNORDER_TO_DB_FAILURE = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_FAILURE',\n  START_GAME = 'TurnOrder/ActiveGame/START_GAME',\n  RESET_GAME = 'TurnOrder/ActiveGame/RESET_GAME',\n  FETCH_FROM_DB = 'TurnOrder/ActiveGame/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/ActiveGame/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/ActiveGame/FETCH_FROM_DB_FAILURE',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type DeckStateSlice = {\n  TurnOrder: {\n    ActiveGame: {\n      deck: types.ITurnOrderCard[]\n    }\n  }\n}\n\nexport type DiscardStateSlice = {\n  TurnOrder: {\n    ActiveGame: {\n      discard: types.ITurnOrderCard[]\n    }\n  }\n}\n\nexport type StartedStateSlice = {\n  TurnOrder: {\n    ActiveGame: {\n      started: boolean\n    }\n  }\n}\n\nexport type RoundStateSlice = {\n  TurnOrder: {\n    ActiveGame: {\n      round: number\n    }\n  }\n}\n","import AERData from 'aer-data/src/index'\n\nconst INITIAL_MODE = 'Default'\nconst INITIAL_PLAYER_SETUP = AERData.turnordersetups['onePlayer']\nconst INITIAL_VARIATION = INITIAL_PLAYER_SETUP.variations['default']\n\nconst TURNORDER_CONFIG_DB_KEY = '2-4-turnOrderConfiguration'\n\nexport {\n  INITIAL_MODE,\n  INITIAL_PLAYER_SETUP,\n  INITIAL_VARIATION,\n  TURNORDER_CONFIG_DB_KEY,\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport AERData from 'aer-data/src/index'\nimport * as types from 'aer-types/types'\n\nimport { State } from './types'\nimport { TURNORDER_CONFIG_DB_KEY } from './constants'\nimport { actions } from './actions'\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [TURNORDER_CONFIG_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n\nconst adjustSetup = (\n  mode: types.Mode,\n  setup: types.ITurnOrderSetup\n): types.ITurnOrderSetup => {\n  switch (mode) {\n    case 'Maelstrom': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1' || card.id === 'blitz'\n            ? AERData.turnordercards['maelstrom']\n            : card\n        }),\n      }\n    }\n\n    case 'Blitz': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1' || card.id === 'maelstrom'\n            ? AERData.turnordercards['blitz']\n            : card\n        }),\n      }\n    }\n\n    case 'Blitz + Maelstrom': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          if (card.id === 'nemesis-1') {\n            return AERData.turnordercards['blitz']\n          }\n\n          if (card.id === 'nemesis-2') {\n            return AERData.turnordercards['maelstrom']\n          }\n\n          return card\n        }),\n      }\n    }\n\n    case 'Thief Of Dreams': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1'\n            ? AERData.turnordercards['thiefOfDreams']\n            : card\n        }),\n      }\n    }\n\n    case 'Paradox of Myth and Bone': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          if (card.id === 'nemesis-1') {\n            return AERData.turnordercards['myth']\n          }\n\n          if (card.id === 'nemesis-2') {\n            return AERData.turnordercards['bone']\n          }\n\n          return card\n        }),\n      }\n    }\n\n    case 'Default':\n    default: {\n      return setup\n    }\n  }\n}\n\nexport { newStateWithDBWrite, adjustSetup }\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const setMode = (\n  state: State,\n  action: ReturnType<typeof actions.setMode>\n) => {\n  const newState = { ...state, Mode: action.payload }\n  return newStateWithDBWrite(newState)\n}\n","import AERData from 'aer-data/src/index'\n\nimport { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const selectPlayerCount = (\n  state: State,\n  action: ReturnType<typeof actions.selectPlayerCount>\n) => {\n  const playerCount = AERData.turnordersetups[action.payload]\n\n  if (!playerCount) return state\n\n  const newState = {\n    ...state,\n    SelectedPlayerCount: AERData.turnordersetups[action.payload],\n    SelectedSetup:\n      AERData.turnordersetups[action.payload].variations['default'],\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const selectSetup = (\n  state: State,\n  action: ReturnType<typeof actions.selectSetup>\n) => {\n  const setup = state.SelectedPlayerCount.variations[action.payload]\n\n  if (!setup) return state\n\n  const newState = {\n    ...state,\n    SelectedSetup: setup,\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { shuffleDeck } from 'Redux/helpers'\n\nimport { ActionTypes, State } from './types'\n\nexport const actions = {\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n  init: (state: State) => createAction(ActionTypes.INIT, state),\n  draw: () => createAction(ActionTypes.DRAW),\n  newRound: (turnOrderCards: types.ITurnOrderCard[]) =>\n    createAction(ActionTypes.NEW_ROUND, {\n      deck: shuffleDeck(turnOrderCards),\n    }),\n  addToTop: (cardId: string) => createAction(ActionTypes.ADD_TO_TOP, cardId),\n  addToBottom: (cardId: string) =>\n    createAction(ActionTypes.ADD_TO_BOTTOM, cardId),\n  shuffleIntoDeck: (cardId: string) =>\n    createAction(ActionTypes.SHUFFLE_INTO_DECK, cardId),\n  setTurnOrderToDbSuccess: () =>\n    createAction(ActionTypes.SET_TURNORDER_TO_DB_SUCCESS),\n  setTurnOrderToDbFailure: () =>\n    createAction(ActionTypes.SET_TURNORDER_TO_DB_FAILURE),\n  startGame: (turnOrderCards: types.ITurnOrderCard[]) =>\n    createAction(ActionTypes.START_GAME, shuffleDeck(turnOrderCards)),\n  resetGame: () => createAction(ActionTypes.RESET_GAME),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n","import { ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from './actions'\n\nexport enum ActionTypes {\n  CREATE_EXPEDITION = 'Expeditions/Expeditions/CREATE_EXPEDITION',\n  CREATE_EXPEDITION_SUCCESS = 'Expeditions/Expeditions/CREATE_EXPEDITION_SUCCESS',\n  DELETE_EXPEDITION = 'Expeditions/Expeditions/DELETE_EXPEDITION',\n  ROLL_BATTLE = 'Expeditions/Expeditions/ROLL_BATTLE',\n  ROLL_BATTLE_SUCCESS = 'Expeditions/Expeditions/ROLL_BATTLE_SUCCESS',\n  START_BATTLE = 'Expeditions/Expeditions/START_BATTLE',\n  WIN_BATTLE = 'Expeditions/Expeditions/WIN_BATTLE',\n  WIN_BATTLE_SUCCESS = 'Expeditions/Expeditions/WIN_BATTLE_SUCCESS',\n  LOSE_BATTLE = 'Expeditions/Expeditions/LOSE_BATTLE',\n  ROLL_LOSS = 'Expeditions/Expeditions/ROLL_LOSS',\n  ROLL_LOSS_SUCCESS = 'Expeditions/Expeditions/ROLL_LOSS_SUCCESS',\n  ACCEPT_LOSS = 'Expeditions/Expeditions/ACCEPT_LOSS',\n  FINISH_BATTLE = 'Expeditions/Expeditions/FINISH_BATTLE',\n  FINISH_EXPEDITION = 'Expeditions/Expeditions/FINISH_EXPEDITION',\n  SET_TO_DB = 'Expeditions/Expeditions/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Expeditions/Expeditions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Expeditions/Expeditions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Expeditions/Expeditions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Expeditions/Expeditions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Expeditions/Expeditions/FETCH_FROM_DB_FAILURE',\n  SETTINGS_SNAPSHOT_MIGRATION_SUCCESS = 'Expeditions/Expeditions/SETTINGS_SNAPSHOT_MIGRATION_SUCCESS',\n  EXPEDITION_SHARE = 'Expeditions/Expeditions/SHARE_EXPEDITION',\n  EXPEDITION_SHARE_SUCCESS = 'Expeditions/Expeditions/SHARE_EXPEDITION_SUCCESS',\n  EXPEDITION_SHARE_FAILURE = 'Expeditions/Expeditions/SHARE_EXPEDITION_FAILURE',\n  NARRATIVE_RESOLVE = 'Expeditions/Expeditions/RESOLVE_NARRATIVE',\n  REWARDS_GENERATE = 'Expeditions/Expeditions/GENERATE_REWARDS',\n  REWARDS_GENERATE_SUCCESS = 'Expeditions/Expeditions/GENERATE_REWARDS_SUCCESS',\n  REWARDS_ACCEPT = 'Expeditions/Expeditions/ACCEPT_REWARDS',\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\nexport type State = {\n  expeditions: types.Expeditions\n  expeditionIds: string[]\n}\n\nexport type BaseConfig = {\n  variantId?: string\n  name: string\n  bigPocketVariant: boolean\n  marketId: string\n  expeditionConfig?: types.ImportedExpeditionConfig\n  seedValue?: string\n}\n\nexport type WinConfig = {\n  battle: types.Battle\n  treasureIds: string[]\n  gemIds: string[]\n  relicIds: string[]\n  spellIds: string[]\n}\n\nexport type RewardType =\n  | 'mage'\n  | 'gem'\n  | 'relic'\n  | 'spell'\n  | 'treasure1'\n  | 'treasure2'\n  | 'treasure3'\n\nexport type BattleRewardsResult = types.Battle & {\n  seed: types.Seed\n}\n\nexport type LossConfig = {\n  battle: types.Battle\n  type: RewardType\n  mageIds: string[]\n  gemIds: string[]\n  relicIds: string[]\n  spellIds: string[]\n  treasure1Ids: string[]\n  treasure2Ids: string[]\n  treasure3Ids: string[]\n}\n\nexport type ExpeditionsStateSlice = {\n  Expeditions: {\n    Expeditions: {\n      expeditions: types.Expeditions\n    }\n  }\n}\n\nexport type ExpeditionIdsStateSlice = {\n  Expeditions: {\n    Expeditions: {\n      expeditionIds: string[]\n    }\n  }\n}\n","export const TURNORDER_GAME_DB_KEY = '2-4-turnOrderGameState'\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { TURNORDER_GAME_DB_KEY } from './constants'\nimport { State } from './types'\nimport { actions } from './actions'\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [TURNORDER_GAME_DB_KEY, newState],\n      successActionCreator: actions.setTurnOrderToDbSuccess,\n      failActionCreator: actions.setTurnOrderToDbFailure,\n    })\n  )\n}\n\nexport { newStateWithDBWrite }\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\n\nexport const draw = (state: State) => {\n  const { deck } = state\n\n  if (deck.length === 0) return state\n\n  const cardDrawn = deck[deck.length - 1]\n\n  // If the card we have drawn is an alternating card we do not show this\n  // turn, we draw another card\n  const additionalCard =\n    cardDrawn.display === false ? deck[deck.length - 2] : undefined\n\n  const newState = {\n    ...state,\n    deck: deck.filter(\n      card => card.id !== cardDrawn.id && card.id !== additionalCard?.id\n    ),\n    discard: additionalCard\n      ? [additionalCard, cardDrawn, ...state.discard]\n      : [cardDrawn, ...state.discard],\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const newRound = (\n  state: State,\n  action: ReturnType<typeof actions.newRound>\n) => {\n  const adjustedDeck = action.payload.deck.map(card => {\n    // We make sure we change the display of alternating cards\n    // each round\n    if (card.alternate) {\n      return { ...card, display: !card.display }\n    }\n\n    return card\n  })\n\n  const newRoundCount = state.round + 1\n\n  const newState = {\n    ...state,\n    deck: adjustedDeck,\n    discard: [],\n    round: newRoundCount,\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const addToTop = (\n  state: State,\n  action: ReturnType<typeof actions.addToTop>\n) => {\n  const cardId = action.payload\n  const cardToAdd = state.discard.find(card => card.id === cardId)\n\n  if (!cardToAdd) return state\n\n  const newState = {\n    ...state,\n    deck: [...state.deck, cardToAdd],\n    discard: state.discard.filter(card => card.id !== cardId),\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const addToBottom = (\n  state: State,\n  action: ReturnType<typeof actions.addToBottom>\n) => {\n  const cardId = action.payload\n  const cardToAdd = state.discard.find(card => card.id === cardId)\n\n  if (!cardToAdd) return state\n\n  const newState = {\n    ...state,\n    deck: [cardToAdd, ...state.deck],\n    discard: state.discard.filter(card => card.id !== cardId),\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { shuffleDeck } from 'Redux/helpers'\n\nimport { State } from '../types'\nimport { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const shuffleIntoDeck = (\n  state: State,\n  action: ReturnType<typeof actions.shuffleIntoDeck>\n) => {\n  const cardId = action.payload\n  const cardToShuffle = state.discard.find(card => card.id === cardId)\n\n  if (!cardToShuffle) return state\n\n  const newDeck = [...state.deck, cardToShuffle]\n  // FIXME shuffling should happen inside the action not the reducer!!!\n  const shuffledDeck = shuffleDeck(newDeck)\n\n  const newState = {\n    ...state,\n    deck: shuffledDeck,\n    discard: state.discard.filter(card => card.id !== cardId),\n  }\n\n  return newStateWithDBWrite(newState)\n}\n","import { newStateWithDBWrite } from '../helpers'\nimport { actions } from '../actions'\n\nexport const startGame = (action: ReturnType<typeof actions.startGame>) => {\n  const adjustedDeck = action.payload.map(card => {\n    // For each card which is supposed to be alternating\n    // (only displayn every other round), we add a 'display' flag\n    if (card.alternate) {\n      return { ...card, display: true }\n    }\n\n    return card\n  })\n\n  return newStateWithDBWrite({\n    started: true,\n    deck: adjustedDeck,\n    discard: [],\n    round: 1,\n  })\n}\n","import { newStateWithDBWrite } from '../helpers'\n\nexport const resetGame = () => {\n  return newStateWithDBWrite({\n    started: false,\n    deck: [],\n    discard: [],\n    round: 1,\n  })\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { get as getFromDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport { TURNORDER_GAME_DB_KEY } from '../constants'\nimport { actions } from '../actions'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getFromDb, {\n      args: [TURNORDER_GAME_DB_KEY],\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  if (typeof action.payload === 'object' && action.payload !== null) {\n    return action.payload as State\n  }\n  return state\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { Action, ActionTypes, State } from './types'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = {\n  deck: [],\n  discard: [],\n  started: false,\n  round: 1,\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.INIT: {\n      return action.payload\n    }\n\n    case ActionTypes.DRAW: {\n      return reducerHelpers.draw(state)\n    }\n\n    case ActionTypes.NEW_ROUND: {\n      return reducerHelpers.newRound(state, action)\n    }\n\n    case ActionTypes.ADD_TO_TOP: {\n      return reducerHelpers.addToTop(state, action)\n    }\n\n    case ActionTypes.ADD_TO_BOTTOM: {\n      return reducerHelpers.addToBottom(state, action)\n    }\n\n    case ActionTypes.SHUFFLE_INTO_DECK: {\n      return reducerHelpers.shuffleIntoDeck(state, action)\n    }\n\n    case ActionTypes.START_GAME: {\n      return reducerHelpers.startGame(action)\n    }\n\n    case ActionTypes.RESET_GAME: {\n      return reducerHelpers.resetGame()\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {\n  DeckStateSlice,\n  DiscardStateSlice,\n  StartedStateSlice,\n  RoundStateSlice,\n} from './types'\n\nconst getDeck = (state: DeckStateSlice) => state.TurnOrder.ActiveGame.deck\n\nconst getDiscard = (state: DiscardStateSlice) =>\n  state.TurnOrder.ActiveGame.discard\n\nconst getHasStarted = (state: StartedStateSlice) =>\n  state.TurnOrder.ActiveGame.started\n\nconst getRoundCount = (state: RoundStateSlice) =>\n  state.TurnOrder.ActiveGame.round\n\nexport const selectors = {\n  getDeck,\n  getDiscard,\n  getHasStarted,\n  getRoundCount,\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { get as getFromDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport { TURNORDER_CONFIG_DB_KEY } from '../constants'\nimport { actions } from '../actions'\n\nimport {\n  actions as activeGameActions,\n  Action as ActiveGameAction,\n} from 'Redux/Store/TurnOrder/ActiveGame'\n\nexport const fetchFromDb = (state: State) => {\n  return loop(\n    state,\n    Cmd.run(getFromDb, {\n      args: [TURNORDER_CONFIG_DB_KEY],\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n\nexport const fetchFromDbSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  // If the fetched state somehow is undefined just take the current state instead\n  const newState =\n    typeof action.payload === 'object' && action.payload !== null\n      ? (action.payload as State)\n      : state\n\n  return loop(\n    newState,\n    // If we could load the configuration also load the actual\n    // turnorder game state\n    Cmd.action<ActiveGameAction>(activeGameActions.fetchFromDB())\n  )\n}\n","import { Action, ActionTypes, State } from './types'\nimport {\n  INITIAL_MODE,\n  INITIAL_PLAYER_SETUP,\n  INITIAL_VARIATION,\n} from './constants'\n\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = {\n  Mode: INITIAL_MODE,\n  SelectedPlayerCount: INITIAL_PLAYER_SETUP,\n  SelectedSetup: INITIAL_VARIATION,\n}\n\nexport const Reducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionTypes.SET_MODE: {\n      return reducerHelpers.setMode(state, action)\n    }\n\n    case ActionTypes.SELECT_PLAYER_COUNT: {\n      return reducerHelpers.selectPlayerCount(state, action)\n    }\n\n    case ActionTypes.SELECT_SETUP: {\n      return reducerHelpers.selectSetup(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDb(state)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return reducerHelpers.fetchFromDbSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { createSelector } from 'reselect'\n\nimport {\n  ModeStateSlice,\n  SelectedPlayerCountStateSlice,\n  SelectedSetupStateSlice,\n} from './types'\n\nimport { adjustSetup } from './helpers'\n\nconst getMode = (state: ModeStateSlice) => state.TurnOrder.Configuration.Mode\n\nconst getSelectedPlayerCount = (state: SelectedPlayerCountStateSlice) =>\n  state.TurnOrder.Configuration.SelectedPlayerCount\n\nconst getSelectedSetup = (state: SelectedSetupStateSlice) =>\n  state.TurnOrder.Configuration.SelectedSetup\n\nconst getConfiguration = createSelector(\n  [getMode, getSelectedSetup],\n  (mode, selectedSetup) => adjustSetup(mode, selectedSetup)\n)\n\nconst getAvailableCards = createSelector(\n  [getConfiguration],\n  config => config.turnOrderCards\n)\n\nexport const selectors = {\n  getMode,\n  getSelectedPlayerCount,\n  getSelectedSetup,\n  getConfiguration,\n  getAvailableCards,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Configuration from './Configuration'\nimport * as ActiveGame from './ActiveGame'\n\nexport type State = {\n  Configuration: Configuration.State\n  ActiveGame: ActiveGame.State\n}\n\nexport type Action = Configuration.Action | ActiveGame.Action\n\nexport const initialState = {\n  Configuration: Configuration.initialState,\n  ActiveGame: ActiveGame.initialState,\n}\n\nexport const actions = {\n  Configuration: Configuration.actions,\n  ActiveGame: ActiveGame.actions,\n}\n\nexport const selectors = {\n  Configuration: Configuration.selectors,\n  ActiveGame: ActiveGame.selectors,\n}\n\nexport const Reducer = combineReducers({\n  Configuration: Configuration.Reducer,\n  ActiveGame: ActiveGame.Reducer,\n})\n","import { createAction } from '@martin_hotell/rex-tils'\n\nimport * as types from 'aer-types/types'\n\nimport { ActionTypes, State, BaseConfig, RewardType } from './types'\n\nexport type InputBranch = {\n  id: string\n  expeditionId: string\n  rewards?: types.Rewards\n}\n\nexport const actions = {\n  createExpedition: (baseConfig: BaseConfig) =>\n    createAction(ActionTypes.CREATE_EXPEDITION, { baseConfig }),\n  createExpeditionSuccess: (newExpedition: types.Expedition) =>\n    createAction(ActionTypes.CREATE_EXPEDITION_SUCCESS, newExpedition),\n  rollBattle: (battle: types.Battle) =>\n    createAction(ActionTypes.ROLL_BATTLE, { battle }),\n  rollBattleSuccess: (result: {\n    battle: types.Battle\n    upgradedBasicNemesisCardIds: string[]\n    nemesisSeedState: types.ExpeditionSeedState\n  }) => createAction(ActionTypes.ROLL_BATTLE_SUCCESS, result),\n  startBattle: (battle: types.Battle) =>\n    createAction(ActionTypes.START_BATTLE, { battle }),\n  winBattle: (battle: types.Battle) =>\n    createAction(ActionTypes.WIN_BATTLE, battle),\n  winBattleSuccess: (result: { battle: types.Battle; seed: types.Seed }) =>\n    createAction(ActionTypes.WIN_BATTLE_SUCCESS, result),\n  loseBattle: (battle: types.Battle) =>\n    createAction(ActionTypes.LOSE_BATTLE, { battle }),\n  acceptLoss: (\n    battle: InputBranch,\n    banished: string[],\n    newSupplyIds: string[]\n  ) =>\n    createAction(ActionTypes.ACCEPT_LOSS, { battle, banished, newSupplyIds }),\n  rollLoss: (battle: types.Battle, rewardType: RewardType) =>\n    createAction(ActionTypes.ROLL_LOSS, { battle, rewardType }),\n  rollLossSuccess: (result: types.Battle & { seed: types.Seed }) =>\n    createAction(ActionTypes.ROLL_LOSS_SUCCESS, result),\n  finishBattle: (\n    battle: InputBranch,\n    banished: string[],\n    newSupplyIds: string[]\n  ) =>\n    createAction(ActionTypes.FINISH_BATTLE, { battle, newSupplyIds, banished }),\n  finishExpedition: (branch: types.Branch) =>\n    createAction(ActionTypes.FINISH_EXPEDITION, { branch }),\n  deleteExpedition: (id: string) =>\n    createAction(ActionTypes.DELETE_EXPEDITION, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: unknown) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n  migrateToSettingsSnapshotSuccessful: (state: State) =>\n    createAction(ActionTypes.SETTINGS_SNAPSHOT_MIGRATION_SUCCESS, state),\n  shareExpedition: (expedition: types.Expedition) =>\n    createAction(ActionTypes.EXPEDITION_SHARE, { expedition }),\n  shareExpeditionSuccess: () =>\n    createAction(ActionTypes.EXPEDITION_SHARE_SUCCESS),\n  shareExpeditionFailure: () =>\n    createAction(ActionTypes.EXPEDITION_SHARE_FAILURE),\n  resolveNarrative: (config: {\n    expeditionId: string\n    narrativeId: string\n    decision: number\n  }) => createAction(ActionTypes.NARRATIVE_RESOLVE, config),\n  generateRewards: (config: { reward: types.Reward }) =>\n    createAction(ActionTypes.REWARDS_GENERATE, config),\n  generateRewardsSuccess: (result: {\n    seed: types.Seed\n    rewards: types.Rewards\n    expeditionId: string\n    branchId: string\n  }) => createAction(ActionTypes.REWARDS_GENERATE_SUCCESS, result),\n  acceptRewards: (\n    reward: {\n      id: string\n      expeditionId: string\n      rewards?: types.Rewards\n      nextBranchId?: string\n    },\n    banished: string[],\n    newSupplyIds: string[]\n  ) =>\n    createAction(ActionTypes.REWARDS_ACCEPT, {\n      reward,\n      banished,\n      newSupplyIds,\n    }),\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n","import { createSelector } from 'reselect'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { Variant, VariantId, variants, variantIds } from 'aer-types/types'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  variants: {\n    [id: string]: Variant\n  }\n  variantIds: VariantId[]\n}\n\nexport const initialState: State = {\n  variants: variants,\n  variantIds,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  UPDATE_SELECTED = 'Expeditions/Variant/UPDATE_SELECTED',\n}\n\nexport const actions = {\n  updateSelected: (id: VariantId) =>\n    createAction(ActionTypes.UPDATE_SELECTED, { id }),\n  noOp: () => createAction('@@REDUX_LOOP/ENFORCE_DEFAULT_HANDLING'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_SELECTED: {\n      const { id } = action.payload\n      return {\n        ...state,\n        selected: id,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport type VariantsStateSlice = {\n  Expeditions: {\n    Variants: {\n      variants: {\n        [id: string]: Variant\n      }\n    }\n  }\n}\n\nexport type VariantIdsStateSlice = {\n  Expeditions: {\n    Variants: {\n      variantIds: VariantId[]\n    }\n  }\n}\n\nconst getVariants = (state: VariantsStateSlice) =>\n  state.Expeditions.Variants.variants\n\nconst getVariantId = (_: unknown, props: { variantId?: string }) =>\n  props.variantId\n\nconst getVariantById = createSelector(\n  [getVariants, getVariantId],\n  (variants, id) => (id ? variants[id] : undefined)\n)\n\nconst getVariantIds = (state: VariantIdsStateSlice) =>\n  state.Expeditions.Variants.variantIds\n\nconst getVariantList = createSelector(\n  [getVariantIds, getVariants],\n  (ids, variants) => ids.map((id) => variants[id])\n)\n\nexport const selectors = {\n  getVariants,\n  getVariantIds,\n  getVariantList,\n  getVariantById,\n}\n","import { selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\nimport { MagesContentStateSlice } from 'Redux/Store/Settings/Expansions/Mages/content'\nimport { NemesisContentStateSlice } from 'Redux/Store/Settings/Expansions/Nemeses/content'\nimport { TreasureContentStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/content'\nimport { UpgradedBasicNemesisCardContentStateSlice } from 'Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content'\nimport { CardsContentStateSlice } from 'Redux/Store/Settings/Expansions/Cards/content'\n\nconst getFixIdsFromRewardsConfig = (config: types.RewardsConfig) => {\n  return {\n    cardIds:\n      config.type === 'custom' && config.supply && config.supply.ids\n        ? config.supply.ids.filter((id): id is string => typeof id === 'string')\n        : [],\n    treasureIds:\n      config.type === 'custom' && config.treasure && config.treasure.ids\n        ? config.treasure.ids.filter(\n            (id): id is string => typeof id === 'string'\n          )\n        : [],\n    mageIds:\n      config.type === 'custom' && config.mage && config.mage.ids\n        ? config.mage.ids.filter((id): id is string => typeof id === 'string')\n        : [],\n  }\n}\n\n// TODO add tests + refactor\nconst getFixIdsFromSequenceBranches = (\n  branches?: types.BranchesConfig\n): {\n  cardIds: string[]\n  mageIds: string[]\n  nemesisIds: string[]\n  treasureIds: string[]\n  upgradedBasicNemesisIds: string[]\n} => {\n  if (!branches) {\n    return {\n      cardIds: [],\n      mageIds: [],\n      nemesisIds: [],\n      treasureIds: [],\n      upgradedBasicNemesisIds: [],\n    }\n  }\n\n  const branchConfigs = Object.values(branches)\n\n  return branchConfigs.reduce(\n    (\n      acc: {\n        cardIds: string[]\n        mageIds: string[]\n        nemesisIds: string[]\n        treasureIds: string[]\n        upgradedBasicNemesisIds: string[]\n      },\n      config\n    ) => {\n      const defaultResult = {\n        cardIds: [],\n        treasureIds: [],\n        mageIds: [],\n      }\n\n      switch (config.type) {\n        case 'battle': {\n          const { nemesisId, lossRewards, winRewards, newUBNCards } =\n            config.config\n\n          const fromLossRewards =\n            lossRewards && lossRewards.length > 0 && lossRewards !== 'skip'\n              ? lossRewards.reduce(\n                  (\n                    acc: {\n                      cardIds: string[]\n                      treasureIds: string[]\n                      mageIds: string[]\n                    },\n                    rewards\n                  ) => {\n                    if (rewards.type === 'custom') {\n                      const fromConfig = getFixIdsFromRewardsConfig(rewards)\n\n                      return {\n                        cardIds: [...acc.cardIds, ...fromConfig.cardIds],\n                        treasureIds: [\n                          ...acc.treasureIds,\n                          ...fromConfig.treasureIds,\n                        ],\n                        mageIds: [...acc.mageIds, ...fromConfig.mageIds],\n                      }\n                    } else {\n                      return acc\n                    }\n                  },\n                  defaultResult\n                )\n              : defaultResult\n\n          const fromWinRewards = (() => {\n            if (\n              winRewards &&\n              winRewards !== 'skip' &&\n              winRewards.type === 'custom'\n            ) {\n              const fromConfig = getFixIdsFromRewardsConfig(winRewards)\n\n              return {\n                cardIds: [...acc.cardIds, ...fromConfig.cardIds],\n                treasureIds: [...acc.treasureIds, ...fromConfig.treasureIds],\n                mageIds: [...acc.mageIds, ...fromConfig.mageIds],\n              }\n            }\n\n            return defaultResult\n          })()\n\n          const fromNewUBNCards =\n            newUBNCards && newUBNCards.type === 'custom' ? newUBNCards.ids : []\n\n          return {\n            ...acc,\n            cardIds: [\n              ...acc.cardIds,\n              ...fromLossRewards.cardIds,\n              ...fromWinRewards.cardIds,\n            ],\n            mageIds: [\n              ...acc.mageIds,\n              ...fromLossRewards.mageIds,\n              ...fromWinRewards.mageIds,\n            ],\n            nemesisIds: [...acc.nemesisIds, ...(nemesisId ? [nemesisId] : [])],\n            upgradedBasicNemesisIds: fromNewUBNCards,\n            treasureIds: [\n              ...acc.treasureIds,\n              ...fromLossRewards.treasureIds,\n              ...fromWinRewards.treasureIds,\n            ],\n          }\n        }\n\n        case 'reward': {\n          const fromConfig = getFixIdsFromRewardsConfig(config.config)\n          return {\n            ...acc,\n            cardIds: [...acc.cardIds, ...fromConfig.cardIds],\n            mageIds: [...acc.mageIds, ...fromConfig.mageIds],\n            treasureIds: [...acc.treasureIds, ...fromConfig.treasureIds],\n          }\n        }\n\n        case 'narrative':\n        default: {\n          return acc\n        }\n      }\n    },\n    {\n      cardIds: [],\n      mageIds: [],\n      nemesisIds: [],\n      treasureIds: [],\n      upgradedBasicNemesisIds: [],\n    }\n  )\n}\n\nexport const determineUsedExpansions = (\n  state: CardsContentStateSlice &\n    MagesContentStateSlice &\n    NemesisContentStateSlice &\n    TreasureContentStateSlice &\n    UpgradedBasicNemesisCardContentStateSlice,\n  settingsSnapshot: Omit<types.SettingsSnapshot, 'usedExpansions'>,\n  branches?: types.BranchesConfig,\n  initialBarracks?: Partial<types.Barracks>\n) => {\n  const {\n    availableCardIds,\n    availableMageIds,\n    availableNemesisIds,\n    availableTreasureIds,\n    availableUpgradedBasicNemesisCardIds,\n  } = settingsSnapshot\n\n  const allCards =\n    selectors.Settings.Expansions.Cards.content.getContent(state).ENG\n\n  const allMages =\n    selectors.Settings.Expansions.Mages.content.getContent(state).ENG\n\n  const allNemeses =\n    selectors.Settings.Expansions.Nemeses.content.getContent(state).ENG\n\n  const allTreasures =\n    selectors.Settings.Expansions.Treasures.content.getContent(state).ENG\n\n  const allUBNCards =\n    selectors.Settings.Expansions.UpgradedBasicNemesisCards.content.getContent(\n      state\n    ).ENG\n\n  const fromBranches = getFixIdsFromSequenceBranches(branches)\n  const fromInitialBarracks = initialBarracks ?? {\n    mageIds: [],\n    supplyIds: [],\n    treasureIds: [],\n  }\n\n  const expansionIds = [\n    ...[\n      ...availableCardIds,\n      ...fromBranches.cardIds,\n      ...(fromInitialBarracks?.supplyIds ?? []),\n    ]\n      .map((id) => allCards[id])\n      .map((c) => c.expansion),\n    ...[\n      ...availableMageIds,\n      ...fromBranches.mageIds,\n      ...(fromInitialBarracks?.mageIds ?? []),\n    ]\n      .map((id) => allMages[id])\n      .map((m) => m.expansion),\n    ...[...availableNemesisIds, ...fromBranches.nemesisIds]\n      .map((id) => allNemeses[id])\n      .map((n) => n.expansion),\n    ...[\n      ...availableTreasureIds,\n      ...fromBranches.treasureIds,\n      ...(fromInitialBarracks?.treasureIds ?? []),\n    ]\n      .map((id) => allTreasures[id])\n      .map((t) => t.expansion),\n    ...[...availableUpgradedBasicNemesisCardIds]\n      .map((id) => allUBNCards[id])\n      .map((c) => c.expansion),\n  ]\n\n  const uniqueIds = [...new Set(expansionIds)]\n\n  return uniqueIds\n}\n","import * as types from 'aer-types/types'\nimport { determineUsedExpansions } from './determineUsedExpansions'\n\nimport { MagesContentStateSlice } from 'Redux/Store/Settings/Expansions/Mages/content'\nimport { NemesisContentStateSlice } from 'Redux/Store/Settings/Expansions/Nemeses/content'\nimport { TreasureContentStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/content'\nimport { UpgradedBasicNemesisCardContentStateSlice } from 'Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content'\nimport { CardsContentStateSlice } from 'Redux/Store/Settings/Expansions/Cards/content'\n\nexport const handleExistingSettingsSnapshot = (\n  state: CardsContentStateSlice &\n    MagesContentStateSlice &\n    NemesisContentStateSlice &\n    TreasureContentStateSlice &\n    UpgradedBasicNemesisCardContentStateSlice,\n  existingConfig: types.ExpeditionConfig,\n  baseSupplySetups: { [id: string]: types.IMarketSetup },\n  marketId: string\n): types.SettingsSnapshot => {\n  const usedExpansions = determineUsedExpansions(\n    state,\n    existingConfig.settingsSnapshotConfig,\n    existingConfig.sequenceConfig.branches,\n    existingConfig.initialBarracksConfig\n  )\n\n  // NOTE: Because we currently do get the marketId from the outside\n  // (it is currently passed to an action creator from a react component),\n  // we do not know the actual supply setup.\n  // Therefore we create a lookup object from all predefined setups, user specific custom setups\n  // as well as the setup which was used inside the given snapshot and retrieve the setup by its id.\n  //\n  // FIXME: This should probably be refactored in the future.\n  const existingSupply = {\n    [existingConfig.settingsSnapshotConfig.supplySetup.id]:\n      existingConfig.settingsSnapshotConfig.supplySetup,\n  }\n\n  const allSupplySetups = {\n    ...baseSupplySetups,\n    ...existingSupply,\n  }\n\n  const supplySetup = allSupplySetups[marketId]\n\n  return {\n    ...existingConfig.settingsSnapshotConfig,\n    usedExpansions,\n    supplySetup,\n  }\n}\n","import * as types from 'aer-types/types'\nimport { determineUsedExpansions } from './determineUsedExpansions'\n\nimport { MagesContentStateSlice } from 'Redux/Store/Settings/Expansions/Mages/content'\nimport { NemesisContentStateSlice } from 'Redux/Store/Settings/Expansions/Nemeses/content'\nimport { TreasureContentStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/content'\nimport { UpgradedBasicNemesisCardContentStateSlice } from 'Redux/Store/Settings/Expansions/UpgradedBasicNemesisCards/content'\nimport { CardsContentStateSlice } from 'Redux/Store/Settings/Expansions/Cards/content'\n\nexport const handleNewSettingsSnapshot = (\n  state: CardsContentStateSlice &\n    MagesContentStateSlice &\n    NemesisContentStateSlice &\n    TreasureContentStateSlice &\n    UpgradedBasicNemesisCardContentStateSlice,\n  baseSnapshot: {\n    supplySetup: types.IMarketSetup\n    availableCardIds: string[]\n    availableMageIds: string[]\n    availableNemesisIds: string[]\n    availableTreasureIds: string[]\n    availableUpgradedBasicNemesisCardIds: string[]\n  }\n): types.SettingsSnapshot => {\n  const usedExpansions = determineUsedExpansions(state, baseSnapshot)\n\n  return {\n    ...baseSnapshot,\n    usedExpansions,\n  }\n}\n","import { RootState, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport { handleExistingSettingsSnapshot } from 'Redux/Store/Expeditions/Expeditions/sideEffects/createSettingsSnapshot/handleExistingSettingsSnapshot'\nimport { handleNewSettingsSnapshot } from 'Redux/Store/Expeditions/Expeditions/sideEffects/createSettingsSnapshot/handleNewSettingsSnapshot'\n\nexport const createSettingsSnapshot = (\n  state: RootState,\n  existingConfig?: types.ImportedExpeditionConfig,\n  marketId: string = 'random'\n): types.SettingsSnapshot => {\n  const getCustomAndPredefined = selectors.Settings.SupplySetups.makeGetCustomAndPredefined()\n  const availableCardIds = selectors.Settings.Expansions.getSelectedCardIdsForSelectedExpansions(\n    state\n  )\n  const availableMageIds = selectors.Settings.Expansions.getSelectedMageIdsForSelectedExpansions(\n    state\n  )\n  const availableNemesisIds = selectors.Settings.Expansions.getSelectedNemesisIdsForSelectedExpansions(\n    state\n  )\n  const availableTreasureIds = selectors.Settings.Expansions.getSelectedTreasureIdsForSelectedExpansions(\n    state\n  )\n  const availableUpgradedBasicNemesisCardIds = selectors.Settings.Expansions.getSelectedUpgradedBasicNemesisCardIdsForSelectedExpansions(\n    state\n  )\n\n  const customAndPredefinedSetups = getCustomAndPredefined(state)\n\n  if (existingConfig?.settingsSnapshotConfig) {\n    return handleExistingSettingsSnapshot(\n      state,\n      existingConfig as types.ExpeditionConfig,\n      customAndPredefinedSetups,\n      marketId\n    )\n  } else {\n    const supplySetup = customAndPredefinedSetups[marketId]\n\n    return handleNewSettingsSnapshot(state, {\n      supplySetup,\n      availableCardIds,\n      availableMageIds,\n      availableNemesisIds,\n      availableTreasureIds,\n      availableUpgradedBasicNemesisCardIds,\n    })\n  }\n}\n","import { byCost } from 'helpers'\n\nimport { createSupply } from 'Redux/helpers'\nimport * as types from 'aer-types/types'\n\nexport const createSupplyIds = (\n  availableCards: types.ICard[],\n  supplySetup: types.IMarketSetup,\n  seed: types.Seed\n) => {\n  const { gems, relics, spells, seed: resultSeed } = createSupply(\n    availableCards,\n    supplySetup.tiles,\n    seed\n  )\n  const gemsByCost = gems.sort(byCost)\n  const relicsByCost = relics.sort(byCost)\n  const spellsByCost = spells.sort(byCost)\n\n  return {\n    result: [...gemsByCost, ...relicsByCost, ...spellsByCost].map(\n      (card) => card.id\n    ),\n    seed: resultSeed,\n  }\n}\n","import {\n  createArrayWithDefaultValues,\n  createIdList,\n  getRandomEntity,\n} from 'Redux/helpers'\nimport * as types from 'aer-types/types'\n\nexport const createTreasureIds = (\n  firstBattleConfig: types.BattleConfig,\n  availableLevel1TreasureIds: string[],\n  seed: types.Seed\n) => {\n  const startsWithTreasure =\n    firstBattleConfig.tier > 1 && firstBattleConfig.treasure.hasTreasure\n\n  return startsWithTreasure\n    ? createIdList(\n        availableLevel1TreasureIds,\n        createArrayWithDefaultValues(5, 'EMPTY'),\n        getRandomEntity,\n        seed\n      )\n    : { result: [], seed }\n}\n","import * as types from 'aer-types/types'\n\nimport { State } from '../types'\n\nimport { migrateToSettingsSnapshot } from './migrateToSettingsSnapshot'\nimport { migrateToExpeditionDSL } from 'Redux/Store/Expeditions/Expeditions/migrations/migrateToExpeditionDSL'\nimport { byAscendingVersion } from 'helpers'\nimport { GetStateFn } from 'Redux/helpers'\nimport { isExpeditionState } from '../reducer'\n\nconst migrations: types.Migration[] = [\n  {\n    version: 2020030401,\n    transformer: migrateToExpeditionDSL,\n  },\n  {\n    version: 2020030301,\n    transformer: migrateToSettingsSnapshot,\n  },\n].sort(byAscendingVersion)\n\nexport const getLatestMigrationVersion = () =>\n  migrations.reduce((acc, migration) => {\n    if (migration.version > acc) {\n      return migration.version\n    } else {\n      return acc\n    }\n  }, 0)\n\nexport const migrate = (\n  getState: GetStateFn,\n  {\n    newState,\n  }: {\n    newState: unknown\n  }\n): State => {\n  const rootState = getState()\n\n  if (!isExpeditionState(newState)) {\n    return rootState.Expeditions.Expeditions\n  }\n\n  const expeditions = newState.expeditionIds.map(\n    (id) => newState.expeditions[id]\n  )\n\n  const migratedExpeditions = expeditions.map((expedition) => {\n    return migrations.reduce((acc, migration) => {\n      if (!expedition.migrationVersion) {\n        return {\n          ...migration.transformer(rootState, acc),\n          migrationVersion: migration.version,\n        }\n      } else if (migration.force) {\n        return {\n          ...migration.transformer(rootState, acc),\n          migrationVersion: migration.version,\n        }\n      } else if (\n        acc.migrationVersion &&\n        migration.version > acc.migrationVersion\n      ) {\n        return {\n          ...migration.transformer(rootState, acc),\n          migrationVersion: migration.version,\n        }\n      }\n\n      return acc\n    }, expedition)\n  })\n\n  const migratedExpeditionsObject = migratedExpeditions.reduce(\n    (acc, expedition) => {\n      return {\n        ...acc,\n        [expedition.id]: expedition,\n      }\n    },\n    {}\n  )\n\n  const migratedState = {\n    expeditions: {\n      ...migratedExpeditionsObject,\n    },\n    expeditionIds: newState.expeditionIds,\n  }\n\n  return migratedState\n}\n","import * as types from 'aer-types/types'\nimport { RootState } from 'Redux/Store'\n\nexport const migrateToExpeditionDSL = (\n  _: RootState,\n  expedition: types.OldStyleExpedition\n) => {\n  const { battles, ...expeditionProps } = expedition\n  const { variantId, ...actualProps } = expeditionProps\n\n  return {\n    ...actualProps,\n    sequence: {\n      firstBranchId: battles[0].id,\n      branches: battles.reduce((acc, battle, index) => {\n        const { nemesisTier, treasure, ...battleProps } = battle\n\n        return {\n          ...acc,\n          [battle.id]: {\n            ...battleProps,\n            nextBranchId: battles[index + 1]?.id,\n            type: 'battle',\n            config: {\n              tier: nemesisTier.tier,\n              newUBNCards: {\n                type: 'regular',\n                addRandom: nemesisTier.isNewTier,\n              },\n              treasure,\n            },\n          },\n        }\n      }, {}),\n    },\n  }\n}\n","import { RootState } from 'Redux/Store'\n\nimport * as types from 'aer-types/types'\n\nimport { createSettingsSnapshot } from '../sideEffects/createSettingsSnapshot'\n\n// We use this to make sure all future and past expeditions have a settings snapshot attached\n// That way we can rely on the snapshot for all our calculations and no longer need to access\n// the useres current settings during an expedition.\nexport const migrateToSettingsSnapshot = (\n  rootState: RootState,\n  expedition: types.Expedition\n) => {\n  const settingsSnapshot = createSettingsSnapshot(rootState)\n\n  if (expedition.settingsSnapshot && expedition.seed) {\n    return expedition\n  }\n\n  return {\n    ...expedition,\n    seed: expedition.seed || expedition.id,\n    settingsSnapshot: expedition.settingsSnapshot || settingsSnapshot,\n  }\n}\n","import { generate } from 'shortid'\n\nimport { selectors, RootState } from 'Redux/Store'\nimport { BaseConfig } from '../../types'\n\nimport { createSettingsSnapshot } from '../createSettingsSnapshot'\n\nimport { createSupplyIds } from './createSupplyIds'\nimport { createTreasureIds } from './createTreasureIds'\nimport { generateBattles } from './generateBattles'\nimport { getLatestMigrationVersion } from 'Redux/Store/Expeditions/Expeditions/migrations'\n\nimport {\n  createArrayWithDefaultValues,\n  createIdList,\n  getRandomEntity,\n} from 'Redux/helpers'\n\nexport const handleWithoutConfig = (\n  { variantId, name, bigPocketVariant, marketId, seedValue }: BaseConfig,\n  state: RootState\n) => {\n  /////////////////////////\n  // Basic configuration //\n  /////////////////////////\n\n  const expeditionId = generate()\n\n  const seed = {\n    seed: seedValue || expeditionId,\n  }\n\n  const settingsSnapshot = createSettingsSnapshot(state, undefined, marketId)\n\n  ///////////////////////////\n  // Content randomziation //\n  ///////////////////////////\n\n  // Mages\n  const mageIdsResult = createIdList(\n    settingsSnapshot.availableMageIds,\n    createArrayWithDefaultValues(4, 'EMPTY'),\n    getRandomEntity,\n    seed\n  )\n\n  const mageIds = mageIdsResult.result\n\n  // Supply\n  const availableCards = selectors.Settings.Expansions.Cards.getCardsByIdList(\n    state,\n    { cardIds: settingsSnapshot.availableCardIds }\n  )\n\n  const supplyIdsResult = createSupplyIds(\n    availableCards,\n    settingsSnapshot.supplySetup,\n    mageIdsResult.seed\n  )\n\n  const supplyIds = supplyIdsResult.result\n\n  // Treasures\n  const variant = selectors.Expeditions.Variants.getVariantById(state, {\n    variantId,\n  })\n\n  const availableLevel1TreasureIds = selectors.Settings.Expansions.getTreasureIdsByLevelMappedFromIds(\n    state,\n    {\n      treasureLevel: 1,\n      treasureIds: settingsSnapshot.availableTreasureIds,\n    }\n  )\n\n  const treasureIdsResult = variant\n    ? createTreasureIds(\n        variant.configList[0],\n        availableLevel1TreasureIds,\n        supplyIdsResult.seed\n      )\n    : { result: [], seed: supplyIdsResult.seed } // should technically never happen\n\n  const treasureIds = treasureIdsResult.result\n\n  /////////////\n  // Battles //\n  /////////////\n\n  const battles = variant ? generateBattles(variant, expeditionId) : []\n\n  ////////////////\n  // Expedition //\n  ////////////////\n\n  const newSeed = {\n    seed: treasureIdsResult.seed.seed,\n    supplyState: treasureIdsResult.seed.state || true,\n    // this means that as soon as nemesis and nemesis cards are getting rolled\n    // state will be used\n    nemesisState: true,\n  }\n\n  return {\n    id: expeditionId,\n    name: name,\n    score: 0,\n    seed: newSeed,\n    settingsSnapshot,\n    barracks: {\n      mageIds,\n      supplyIds,\n      treasureIds,\n    },\n    upgradedBasicNemesisCards: [],\n    banished: [],\n    bigPocketVariant: bigPocketVariant,\n    sequence: {\n      firstBranchId: battles[0].id,\n      branches: battles.reduce((acc, battle) => {\n        return {\n          ...acc,\n          [battle.id]: battle,\n        }\n      }, {}),\n    },\n    migrationVersion: getLatestMigrationVersion(),\n    finished: false,\n  }\n}\n","import shortid from 'shortid'\nimport * as types from 'aer-types/types'\n\nexport const generateBattles = (\n  variant: types.Variant,\n  expeditionId: string\n) => {\n  const battleIds = variant.configList.map((_) => shortid.generate())\n\n  const battles = variant.configList.map(\n    (config, index): types.Battle => {\n      const isFirst = index === 0\n\n      return {\n        id: battleIds[index],\n        type: 'battle',\n        nextBranchId: battleIds[index + 1], // will be undefined for last battle (which is ok)\n        config,\n        expeditionId,\n        status: isFirst ? 'unlocked' : 'locked',\n        tries: 0,\n      }\n    }\n  )\n\n  return battles\n}\n","import * as types from 'aer-types/types'\n\nexport const convertExpeditionToConfig = (\n  expedition: types.Expedition\n): types.ExpeditionConfig => {\n  const {\n    usedExpansions,\n    ...settingsSnapshotConfig\n  } = expedition.settingsSnapshot\n\n  const expeditionConfig = {\n    name: expedition.name,\n    seedConfig: expedition.seed.seed,\n    bigPocketVariantConfig: expedition.bigPocketVariant,\n    initialBarracksConfig: expedition?.initialBarracksConfig,\n    initialUBNCardsConfig: expedition?.initialUBNCardsConfig,\n    settingsSnapshotConfig,\n    sequenceConfig: {\n      firstBranchId: expedition.sequence.firstBranchId,\n      branches: Object.values(expedition.sequence.branches).reduce(\n        (acc, { id, type, config, nextBranchId }) => ({\n          ...acc,\n          [id]: {\n            type,\n            config,\n            nextBranchId,\n          },\n        }),\n        {}\n      ),\n    },\n  }\n\n  return expeditionConfig\n}\n","export * from './convertExpeditionToConfig'\nexport * from './convertExpeditionFromConfig'\n\nexport const calcBattleScore = (tries: number) => {\n  switch (tries) {\n    case 1: {\n      return 6\n    }\n\n    case 2: {\n      return 4\n    }\n\n    case 3: {\n      return 2\n    }\n\n    default: {\n      return 0\n    }\n  }\n}\n","import { BaseConfig } from '../../types'\n\nimport * as types from 'aer-types/types'\nimport { RootState, selectors } from 'Redux/Store'\n\nimport { convertExpeditionFromConfig } from 'Redux/Store/Expeditions/Expeditions/helpers'\nimport { createSettingsSnapshot } from '../createSettingsSnapshot'\n\nimport { createSupplyIds } from './createSupplyIds'\nimport { createTreasureIds } from './createTreasureIds'\nimport {\n  createArrayWithDefaultValues,\n  createIdList,\n  getRandomEntity,\n} from 'Redux/helpers'\n\nexport const handleExistingConfig = (\n  {\n    name,\n    bigPocketVariant,\n    expeditionConfig,\n    marketId,\n    seedValue,\n  }: BaseConfig & { expeditionConfig: types.ImportedExpeditionConfig },\n  state: RootState\n) => {\n  /////////////////////////\n  // Basic configuration //\n  /////////////////////////\n\n  const baseExpeditionFromConfig = convertExpeditionFromConfig({\n    ...expeditionConfig,\n    name,\n    bigPocketVariantConfig: bigPocketVariant,\n  })\n\n  const seed = {\n    seed: seedValue || baseExpeditionFromConfig.seed.seed,\n  }\n\n  const settingsSnapshot = createSettingsSnapshot(\n    state,\n    expeditionConfig,\n    marketId\n  )\n\n  ///////////////////////////\n  // Content randomziation //\n  ///////////////////////////\n\n  // Mages\n  const amountOfAdditionalMages =\n    baseExpeditionFromConfig.barracks.mageIds.length > 0\n      ? 4 - baseExpeditionFromConfig.barracks.mageIds.length\n      : 4\n\n  const additionalMagesResult = createIdList(\n    settingsSnapshot.availableMageIds,\n    createArrayWithDefaultValues(amountOfAdditionalMages, 'EMPTY'),\n    getRandomEntity,\n    seed\n  )\n\n  const mageIdsResult = {\n    result: [\n      ...baseExpeditionFromConfig.barracks.mageIds,\n      ...additionalMagesResult.result,\n    ],\n    seed: additionalMagesResult.seed,\n  }\n\n  const mageIds = mageIdsResult.result\n\n  // Supply\n  const supplyIdsResult = (() => {\n    if (baseExpeditionFromConfig.barracks.supplyIds.length > 0) {\n      return {\n        result: baseExpeditionFromConfig.barracks.supplyIds,\n        seed: mageIdsResult.seed,\n      }\n    } else {\n      const availableCards = selectors.Settings.Expansions.Cards.getCardsByIdList(\n        state,\n        { cardIds: settingsSnapshot.availableCardIds }\n      )\n\n      return createSupplyIds(\n        availableCards,\n        settingsSnapshot.supplySetup,\n        mageIdsResult.seed\n      )\n    }\n  })()\n\n  const supplyIds = supplyIdsResult.result\n\n  // Treasures\n\n  const availableLevel1TreasureIds = selectors.Settings.Expansions.getTreasureIdsByLevelMappedFromIds(\n    state,\n    {\n      treasureLevel: 1,\n      treasureIds: settingsSnapshot.availableTreasureIds,\n    }\n  )\n\n  const treasureIdsResult = (() => {\n    const { branches } = baseExpeditionFromConfig.sequence\n    const firstBranch =\n      branches[baseExpeditionFromConfig.sequence.firstBranchId]\n\n    if (baseExpeditionFromConfig.barracks.treasureIds.length > 0) {\n      return {\n        result: baseExpeditionFromConfig.barracks.treasureIds,\n        seed: supplyIdsResult.seed,\n      }\n    } else if (firstBranch.type === 'battle') {\n      return createTreasureIds(\n        firstBranch.config,\n        availableLevel1TreasureIds,\n        supplyIdsResult.seed\n      )\n    } else {\n      return { result: [], seed: supplyIdsResult.seed } // should technically never happen\n    }\n  })()\n\n  const treasureIds = treasureIdsResult.result\n\n  ////////////////\n  // Expedition //\n  ////////////////\n\n  const newSeed = {\n    seed: treasureIdsResult.seed.seed,\n    supplyState: treasureIdsResult.seed.state || true,\n    // this means that as soon as nemesis and nemesis cards are getting rolled\n    // state will be used\n    nemesisState: true,\n  }\n\n  return {\n    ...baseExpeditionFromConfig,\n    seed: newSeed,\n    settingsSnapshot,\n    barracks: {\n      mageIds,\n      supplyIds,\n      treasureIds,\n    },\n  }\n}\n","import * as types from 'aer-types/types'\nimport shortid from 'shortid'\nimport { getLatestMigrationVersion } from 'Redux/Store/Expeditions/Expeditions/migrations'\n\nexport const convertExpeditionFromConfig = (\n  config: types.ImportedExpeditionConfig\n): types.ExpeditionFromImportedConfig => {\n  const expeditionId = shortid.generate()\n\n  const expedition = {\n    id: expeditionId,\n    name: config.name,\n    bigPocketVariant: config.bigPocketVariantConfig,\n    score: 0,\n    seed: {\n      seed: config.seedConfig || shortid.generate(),\n      supplyState: true,\n      nemesisState: true,\n    },\n    barracks: {\n      supplyIds: config.initialBarracksConfig?.supplyIds || [],\n      mageIds: config.initialBarracksConfig?.mageIds || [],\n      treasureIds: config.initialBarracksConfig?.treasureIds || [],\n    },\n    banished: [],\n    finished: false,\n    upgradedBasicNemesisCards: config.initialUBNCardsConfig || [],\n    settingsSnapshot: config.settingsSnapshotConfig,\n    sequence: {\n      firstBranchId: config.sequenceConfig.firstBranchId,\n      branches: Object.keys(config.sequenceConfig.branches)\n        .map((key) => {\n          const branch = {\n            ...config.sequenceConfig.branches[key],\n            id: key,\n            expeditionId,\n            status:\n              key === config.sequenceConfig.firstBranchId\n                ? 'unlocked'\n                : 'locked',\n            ...(config.sequenceConfig.branches[key].type === 'battle'\n              ? { tries: 0 }\n              : {}),\n          }\n\n          return branch\n        })\n        .reduce(\n          (acc, branch) => ({\n            ...acc,\n            [branch.id]: branch,\n          }),\n          {}\n        ),\n    },\n    migrationVersion: getLatestMigrationVersion(),\n  }\n\n  return expedition\n}\n","import * as types from 'aer-types/types'\n\nimport { BaseConfig } from '../../types'\n\nimport { handleWithoutConfig } from './handleWithoutConfig'\nimport { handleExistingConfig } from './handleExistingConfig'\nimport { GetStateFn } from 'Redux/helpers'\n\nexport const createExpedition = (\n  getState: GetStateFn,\n  baseConfig: BaseConfig\n): types.Expedition => {\n  const state = getState()\n  const { expeditionConfig } = baseConfig\n\n  if (expeditionConfig) {\n    return handleExistingConfig(\n      {\n        // This transformation is necessary so that typescript knows\n        // that we actually have an expedition (just checking baseConfig.expeditionConfig\n        // and handing that over as argument did somehow not work)\n        ...baseConfig,\n        expeditionConfig,\n      },\n      state\n    )\n  } else {\n    return handleWithoutConfig(baseConfig, state)\n  }\n}\n","import * as types from 'aer-types/types'\n\nimport {\n  getRandomEntity,\n  createIdList,\n  createArrayWithDefaultValues,\n} from 'Redux/helpers'\n\nexport const rollNemesisId = (\n  nemesisIds: string[],\n  getEntity: types.SeededEntityGetter = getRandomEntity\n): { result: string | undefined; seed: types.Seed } => {\n  const result = createIdList(\n    nemesisIds,\n    createArrayWithDefaultValues(1, 'EMPTY'),\n    getEntity\n  )\n\n  return { result: result.result[0], seed: result.seed }\n}\n","import * as types from 'aer-types/types'\n\nexport const getStillAvailableNemesisIds = (\n  availableNemeses: Array<{\n    id: string\n    expeditionRating: types.ExpeditionRating\n  }>,\n  previousNemeses: string[],\n  nemesisTier: types.NemesisTier\n) => {\n  return availableNemeses\n    .filter((nemesis) => nemesis.expeditionRating === nemesisTier)\n    .map((nemesis) => nemesis.id)\n    .filter((nemesisId) => !previousNemeses.includes(nemesisId))\n}\n","import * as types from 'aer-types/types'\n\nimport { getUpgradedBasicNemesisIdsByBattleTier } from './getUpgradedBasicNemesisIdsByBattleTier'\n\nexport const rollNewUpgradedNemesisCards = (\n  availableUpgradedBasicNemesisCards: {\n    id: string\n    tier: types.NemesisCardTier\n  }[],\n  previousUpgradedBasicNemesisCards: string[],\n  nemesisTier: 1 | 2 | 3 | 4,\n  getEntity: types.SeededEntityGetter,\n  seed: types.Seed\n) => {\n  const upgradedCardsWithoutPreviousCards = availableUpgradedBasicNemesisCards.filter(\n    (upgradedCard) =>\n      !previousUpgradedBasicNemesisCards.includes(upgradedCard.id)\n  )\n\n  const tier1AvailableUpgradedNemesisIds = upgradedCardsWithoutPreviousCards\n    .filter((card) => card.tier === 1)\n    .map((card) => card.id)\n  const tier2AvailableUpgradedNemesisIds = upgradedCardsWithoutPreviousCards\n    .filter((card) => card.tier === 2)\n    .map((card) => card.id)\n  const tier3AvailableUpgradedNemesisIds = upgradedCardsWithoutPreviousCards\n    .filter((card) => card.tier === 3)\n    .map((card) => card.id)\n\n  const upgradedBasicNemesisCardIdsResult = getUpgradedBasicNemesisIdsByBattleTier(\n    {\n      battleTier: nemesisTier,\n      availableTier1Ids: tier1AvailableUpgradedNemesisIds,\n      availableTier2Ids: tier2AvailableUpgradedNemesisIds,\n      availableTier3Ids: tier3AvailableUpgradedNemesisIds,\n      getEntity,\n      seed,\n    }\n  )\n\n  return {\n    result: [\n      ...previousUpgradedBasicNemesisCards,\n      ...upgradedBasicNemesisCardIdsResult.result,\n    ],\n    seed: upgradedBasicNemesisCardIdsResult.seed,\n  }\n}\n","import * as types from 'aer-types/types'\n\nimport {\n  getRandomEntity,\n  createIdList,\n  createArrayWithDefaultValues,\n} from 'Redux/helpers'\n\n// Because we always add these cards to an existing array inside our expedition in our store,\n// the count of newly added cards decreases by tier.\n// If we ever have a variant, that starts higher than tier 2 we have to\n// incorporate changes to roll the whole amount of cards per tier!\nexport const getUpgradedBasicNemesisIdsByBattleTier = ({\n  availableTier1Ids,\n  availableTier2Ids,\n  availableTier3Ids,\n  battleTier,\n  getEntity = getRandomEntity,\n  seed,\n}: {\n  availableTier1Ids: string[]\n  availableTier2Ids: string[]\n  availableTier3Ids: string[]\n  battleTier: 1 | 2 | 3 | 4\n  getEntity: types.SeededEntityGetter\n  seed: types.Seed\n}): { result: string[]; seed: types.Seed } => {\n  switch (battleTier) {\n    case 1: {\n      return { result: [], seed } // No upgraded cards are added on tier 1\n    }\n\n    case 2: {\n      const tier1IdsResult = createIdList(\n        availableTier1Ids,\n        createArrayWithDefaultValues(1, 'EMPTY'),\n        (availableIds) => getEntity(availableIds, seed)\n      )\n\n      const tier2IdsResult = createIdList(\n        availableTier2Ids,\n        createArrayWithDefaultValues(3, 'EMPTY'),\n        (availableIds) => getEntity(availableIds, tier1IdsResult.seed)\n      )\n\n      const tier3IdsResult = createIdList(\n        availableTier3Ids,\n        createArrayWithDefaultValues(3, 'EMPTY'),\n        (availableIds) => getEntity(availableIds, tier2IdsResult.seed)\n      )\n\n      return {\n        result: [\n          ...tier1IdsResult.result,\n          ...tier2IdsResult.result,\n          ...tier3IdsResult.result,\n        ],\n        seed: tier3IdsResult.seed,\n      }\n    }\n\n    case 3:\n    case 4: {\n      const tier1IdsResult = createIdList(\n        availableTier1Ids,\n        createArrayWithDefaultValues(1, 'EMPTY'),\n        (availableIds) => getEntity(availableIds, seed)\n      )\n\n      const tier2IdsResult = createIdList(\n        availableTier2Ids,\n        createArrayWithDefaultValues(1, 'EMPTY'),\n        (availableIds) => getEntity(availableIds, tier1IdsResult.seed)\n      )\n\n      const tier3IdsResult = createIdList(\n        availableTier3Ids,\n        createArrayWithDefaultValues(2, 'EMPTY'),\n        (availableIds) => getEntity(availableIds, tier2IdsResult.seed)\n      )\n\n      return {\n        result: [\n          ...tier1IdsResult.result,\n          ...tier2IdsResult.result,\n          ...tier3IdsResult.result,\n        ],\n        seed: tier3IdsResult.seed,\n      }\n    }\n\n    default: {\n      return { result: [], seed } // Should never occur!\n    }\n  }\n}\n","import * as types from 'aer-types/types'\n\nimport { rollNewUpgradedNemesisCards } from './rollNewUpgradedNemesisCards'\n\nexport const getUpgradedBasicNemesisCardsResult = (\n  config: types.BattleConfig,\n  availableUpgradedBasicNemesisCards: types.UpgradedBasicNemesisCard[],\n  previousUpgradedBasicNemesisCards: string[],\n  getEntity: types.SeededEntityGetter,\n  seed: types.Seed\n) => {\n  if (config.newUBNCards.type === 'regular') {\n    return config.newUBNCards.addRandom\n      ? rollNewUpgradedNemesisCards(\n          availableUpgradedBasicNemesisCards,\n          previousUpgradedBasicNemesisCards,\n          config.tier,\n          getEntity,\n          seed\n        )\n      : { result: previousUpgradedBasicNemesisCards, seed }\n  } else if (config.newUBNCards.type === 'custom') {\n    return {\n      result: [...previousUpgradedBasicNemesisCards, ...config.newUBNCards.ids],\n      seed,\n    }\n  }\n\n  return { result: previousUpgradedBasicNemesisCards, seed }\n}\n","import { selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport { getRandomEntity, GetStateFn } from 'Redux/helpers'\n\nimport { rollNemesisId } from './rollNemesisId'\nimport { getStillAvailableNemesisIds } from './getStillAvailableNemesisIds'\nimport { getUpgradedBasicNemesisCardsResult } from './getUpgradedBasicNemesisCardsResult'\n\nexport const generateResult = (\n  battle: types.Battle,\n  nemesisId: string | undefined,\n  upgradedBasicNemesisCardIds: string[],\n  nemesisSeedState?: Object\n): {\n  battle: types.Battle\n  upgradedBasicNemesisCardIds: string[]\n  nemesisSeedState: types.ExpeditionSeedState\n} => {\n  return {\n    battle: {\n      ...battle,\n      nemesisId,\n      status: 'before_battle',\n    },\n    upgradedBasicNemesisCardIds,\n    // If no seed state is provided, we set it to 'true', so that\n    // the seed generator creates a seed the next time it runs and so that we\n    // do not get any errors further down the line\n    nemesisSeedState: nemesisSeedState || true,\n  }\n}\n\nexport const createBattle = (\n  getState: GetStateFn,\n  battle: types.Battle,\n  getEntity: types.SeededEntityGetter = getRandomEntity\n): {\n  battle: types.Battle\n  upgradedBasicNemesisCardIds: string[]\n  nemesisSeedState: types.ExpeditionSeedState\n} => {\n  const state = getState()\n\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId: battle.expeditionId }\n  )\n\n  const availableNemeses = selectors.getAvailableNemesisForExpeditionId(state, {\n    expeditionId: expedition.id,\n  })\n  const previousNemesisIds = selectors.Expeditions.Expeditions.getPreviousNemesesByExpeditiionId(\n    state,\n    { expeditionId: expedition.id }\n  )\n\n  const stillAvailableNemesisIds = getStillAvailableNemesisIds(\n    availableNemeses,\n    previousNemesisIds,\n    battle.config.tier\n  )\n\n  const nemesisIdResult = battle.config.nemesisId\n    ? {\n        result: battle.config.nemesisId,\n        seed: {\n          seed: expedition.seed.seed,\n          state: expedition.seed.nemesisState,\n        },\n      }\n    : rollNemesisId(stillAvailableNemesisIds, (availableEntities) =>\n        getEntity(availableEntities, {\n          seed: expedition.seed.seed,\n          state: expedition.seed.nemesisState,\n        })\n      )\n\n  // FIXME Should probably be composed into another \"getStillAvailable\" selector\n  const previousUpgradedBasicNemesisCards = expedition.upgradedBasicNemesisCards\n  const availableUpgradedBasicNemesisCards = selectors.getAvailableUpgradedBasicNemesisCardsForExpeditionId(\n    state,\n    {\n      expeditionId: battle.expeditionId,\n    }\n  )\n\n  const upgradedBasicNemesisCardIdsResult = getUpgradedBasicNemesisCardsResult(\n    battle.config,\n    availableUpgradedBasicNemesisCards,\n    previousUpgradedBasicNemesisCards,\n    getEntity,\n    nemesisIdResult.seed\n  )\n\n  return generateResult(\n    battle,\n    nemesisIdResult.result,\n    upgradedBasicNemesisCardIdsResult.result,\n    upgradedBasicNemesisCardIdsResult.seed.state\n  )\n}\n","import * as types from 'aer-types/types'\n\nimport {\n  createArrayWithDefaultValues,\n  createIdList,\n  getRandomEntity,\n  createCardList,\n} from 'Redux/helpers'\n\nimport { selectors } from 'Redux/Store'\nimport { ExpeditionsStateSlice } from '../types'\nimport { TreasureIdsStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/ids'\nimport { TreasureContentStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/content'\nimport { MagesContentStateSlice } from 'Redux/Store/Settings/Expansions/Mages/content'\nimport { CardsContentStateSlice } from 'Redux/Store/Settings/Expansions/Cards/content'\nimport { SelectedLanguagesStateSlice } from 'Redux/Store/Settings/Expansions/Languages'\n\nexport const rollNewEntity = (\n  list: string[],\n  getEntity: types.SeededEntityGetter = getRandomEntity,\n  seed: types.Seed\n): { result: string; seed: types.Seed } => {\n  const idList = createIdList(\n    list,\n    createArrayWithDefaultValues(1, 'EMPTY'),\n    getEntity,\n    seed\n  )\n  return {\n    result: idList.result[0],\n    seed: idList.seed,\n  }\n}\n\ntype RewardResult = {\n  result: string[]\n  seed: types.Seed\n}\n\n// TODO add tests\nexport const getSupplyIds = ({\n  supply,\n  seed,\n  stillAvailableCardsByType,\n}: {\n  supply: types.SupplyRewardConfig | undefined\n  seed: types.Seed\n  stillAvailableCardsByType: {\n    Gem: types.ICard[]\n    Relic: types.ICard[]\n    Spell: types.ICard[]\n    EMPTY: never[]\n    ANY: never[]\n  }\n}) => {\n  const baseResult = {\n    result: [],\n    seed,\n  }\n\n  if (supply === undefined) {\n    return baseResult\n  } else {\n    // We split blueprints and ids.\n    // This has two benefits:\n    // 1.) it lets us filter available cards by those ids, which have been explicitely specified\n    // 2.) it makes the reduce call a bit easer to read and maintain, as we don't have to handle the 'string' case\n    const ids = supply.ids.filter(\n      (idOrBlueprint) => typeof idOrBlueprint === 'string'\n    )\n    const bluePrints = supply.ids.filter(\n      (idOrBlueprint): idOrBlueprint is types.IBluePrint =>\n        typeof idOrBlueprint !== 'string'\n    )\n\n    return bluePrints.reduce(\n      (acc: RewardResult, blueprint) => {\n        const cardType = blueprint.type\n        const stillAvailableCards = stillAvailableCardsByType[cardType].filter(\n          (card) => ids.indexOf(card.id) === -1\n        )\n\n        const cardCreationResult = createCardList(\n          stillAvailableCards,\n          [blueprint],\n          undefined,\n          acc.seed\n        )\n\n        return {\n          result: [\n            ...acc.result,\n            ...cardCreationResult.result.map((card) => card.id),\n          ],\n          seed: cardCreationResult.seed,\n        }\n      },\n      {\n        ...baseResult,\n        result: ids,\n      } as RewardResult // FIXME casting should technically not be necessary (but i could make it work without)\n    )\n  }\n}\n\nexport const getTreasureIds = ({\n  treasure,\n  stillAvailableTreasureIdsByLevel,\n  seed,\n}: {\n  treasure: types.TreasureRewardConfig | undefined\n  seed: types.Seed\n  stillAvailableTreasureIdsByLevel: {\n    1: string[]\n    2: string[]\n    3: string[]\n  }\n}) => {\n  const baseResult = {\n    result: [],\n    seed,\n  }\n\n  if (treasure === undefined) {\n    return baseResult\n  } else {\n    const ids = treasure.ids.filter(\n      (idOrRandom) => typeof idOrRandom === 'string'\n    )\n\n    const randomTreasureConfigs = treasure.ids.filter(\n      (idOrRandom): idOrRandom is { random: true; level: 1 | 2 | 3 } =>\n        typeof idOrRandom !== 'string'\n    )\n\n    return randomTreasureConfigs.reduce(\n      (acc: RewardResult, config) => {\n        const treasureLevel = config.level\n        const stillAvailableCards = stillAvailableTreasureIdsByLevel[\n          treasureLevel\n        ].filter((treasureId) => ids.indexOf(treasureId) === -1)\n\n        const treasureIdsResult = createIdList(\n          stillAvailableCards,\n          ['EMPTY'],\n          undefined,\n          acc.seed\n        )\n\n        return {\n          result: [...acc.result, ...treasureIdsResult.result],\n          seed: treasureIdsResult.seed,\n        }\n      },\n      {\n        ...baseResult,\n        result: ids,\n      } as RewardResult // FIXME casting should technically not be necessary (but i could make it work without)\n    )\n  }\n}\n\nexport const getMageIds = ({\n  mage,\n  stillAvailableMageIds,\n  seed,\n}: {\n  mage: types.MageRewardConfig | undefined\n  seed: types.Seed\n  stillAvailableMageIds: string[]\n}) => {\n  const baseResult = {\n    result: [],\n    seed,\n  }\n\n  if (mage === undefined) {\n    return baseResult\n  } else {\n    const ids = mage.ids.filter((idOrRandom) => typeof idOrRandom === 'string')\n\n    const randomTreasureConfigs = mage.ids.filter(\n      (idOrRandom): idOrRandom is { random: true } =>\n        typeof idOrRandom !== 'string'\n    )\n\n    return randomTreasureConfigs.reduce(\n      (acc: RewardResult, _) => {\n        const filteredMageIds = stillAvailableMageIds.filter(\n          (mageId) => ids.indexOf(mageId) === -1\n        )\n\n        const mageIdsResult = createIdList(\n          filteredMageIds,\n          ['EMPTY'],\n          undefined,\n          acc.seed\n        )\n\n        return {\n          result: [...acc.result, ...mageIdsResult.result],\n          seed: mageIdsResult.seed,\n        }\n      },\n      {\n        ...baseResult,\n        result: ids,\n      } as RewardResult // FIXME casting should technically not be necessary (but i could make it work without)\n    )\n  }\n}\n\n// TODO add tests\nexport const handleCustomRewards = (\n  state: ExpeditionsStateSlice &\n    CardsContentStateSlice &\n    TreasureContentStateSlice &\n    TreasureIdsStateSlice &\n    MagesContentStateSlice &\n    SelectedLanguagesStateSlice,\n  rewardConfig: {\n    type: 'custom'\n    treasure?: types.TreasureRewardConfig\n    mage?: types.MageRewardConfig\n    supply?: types.SupplyRewardConfig\n  },\n  expedition: types.Expedition\n) => {\n  const expeditionId = expedition.id\n\n  ///////////////////////\n  // Content Selection //\n  ///////////////////////\n\n  const stillAvailableCardsByType = {\n    Gem: selectors.getStillAvailableGems(state, {\n      expeditionId,\n    }),\n    Relic: selectors.getStillAvailableRelics(state, {\n      expeditionId,\n    }),\n    Spell: selectors.getStillAvailableSpells(state, {\n      expeditionId,\n    }),\n    EMPTY: [],\n    ANY: [],\n  }\n\n  const stillAvailableTreasureIdsByLevel = {\n    1: selectors.getStillAvailableTreasureIdsByLevel(state, {\n      treasureLevel: 1,\n      expeditionId,\n    }),\n    2: selectors.getStillAvailableTreasureIdsByLevel(state, {\n      treasureLevel: 2,\n      expeditionId,\n    }),\n    3: selectors.getStillAvailableTreasureIdsByLevel(state, {\n      treasureLevel: 3,\n      expeditionId,\n    }),\n  }\n\n  const stillAvailableMageIds = selectors.getStillAvailableMageIds(state, {\n    expeditionId,\n  })\n\n  ////////////\n  // Supply //\n  ////////////\n\n  const { supply } = rewardConfig\n  const supplyIdsResult = getSupplyIds({\n    supply,\n    seed: {\n      seed: expedition.seed.seed,\n      state: expedition.seed.supplyState,\n    },\n    stillAvailableCardsByType,\n  })\n\n  ///////////\n  // Mages //\n  ///////////\n\n  const { mage } = rewardConfig\n  const mageIdsResult = getMageIds({\n    mage,\n    seed: supplyIdsResult.seed,\n    stillAvailableMageIds,\n  })\n\n  ///////////////\n  // Treasures //\n  ///////////////\n\n  const { treasure } = rewardConfig\n  const treasureIdsResult = getTreasureIds({\n    treasure,\n    seed: mageIdsResult.seed,\n    stillAvailableTreasureIdsByLevel,\n  })\n\n  return {\n    rewards: {\n      supplyIds: supplyIdsResult.result,\n      treasure: treasureIdsResult.result,\n      mages: mageIdsResult.result,\n    },\n    seed: treasureIdsResult.seed,\n  }\n}\n","import { selectors } from 'Redux/Store'\nimport { getRandomEntity, GetStateFn } from 'Redux/helpers'\n\nimport * as types from 'aer-types/types'\n\nimport { rollTreasureIdsByLevel } from 'Redux/Store/Expeditions/Expeditions/sideEffects/rollWinRewards/rollTreasureIdsByLevel'\nimport { rollSupplyRewards } from 'Redux/Store/Expeditions/Expeditions/sideEffects/rollWinRewards/rollSupplyRewards'\n\nimport { handleCustomRewards } from '../helpers'\n\nexport const getTreasureAmount = (treasureLevel?: types.TreasureLevel) => {\n  return treasureLevel === 2 ? 3 : 5\n}\n\nexport const rollWinRewards = (\n  getState: GetStateFn,\n  battle: types.Battle\n): { battle: types.Battle; seed: types.Seed } => {\n  const state = getState()\n\n  const { expeditionId } = battle\n\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId }\n  )\n\n  const seed = {\n    seed: expedition.seed.seed,\n    state: expedition.seed.supplyState,\n  }\n\n  const stillAvailableTreasureIds =\n    battle.config.treasure.hasTreasure && battle.config.treasure.level\n      ? selectors.getStillAvailableTreasureIdsByLevel(state, {\n          treasureLevel: battle.config.treasure.level,\n          expeditionId,\n        })\n      : []\n\n  const treasureLevel = battle.config.treasure.level\n  const amountOfTreasures = getTreasureAmount(treasureLevel)\n\n  const newTreasuresResult = rollTreasureIdsByLevel(\n    stillAvailableTreasureIds,\n    amountOfTreasures,\n    getRandomEntity,\n    seed\n  )\n\n  const newTreasures = newTreasuresResult.result\n\n  const gemIds = selectors.getStillAvailableGemIds(state, {\n    expeditionId,\n  })\n  const relicIds = selectors.getStillAvailableRelicIds(state, {\n    expeditionId,\n  })\n  const spellIds = selectors.getStillAvailableSpellIds(state, {\n    expeditionId,\n  })\n\n  const supplyRewardsResult = rollSupplyRewards(\n    gemIds,\n    relicIds,\n    spellIds,\n    newTreasuresResult.seed\n  )\n  const supplyRewards = supplyRewardsResult.result\n\n  const updatedBattle: types.Battle = {\n    ...battle,\n    rewards: {\n      treasure: newTreasures,\n      supplyIds: supplyRewards,\n      mages: [], // we explicitely overwrite the mage reward from earlier losses\n    },\n  }\n  return {\n    battle: updatedBattle,\n    seed: supplyRewardsResult.seed,\n  }\n}\n\nconst handleRewardsFromConfig = (\n  getState: GetStateFn,\n  battle: types.Battle,\n  rewardsConfig: types.RewardsConfig\n): { battle: types.Battle; seed: types.Seed } => {\n  const state = getState()\n\n  const expeditionId = battle.expeditionId\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId }\n  )\n\n  if (rewardsConfig.type === 'regular') {\n    return rollWinRewards(getState, battle)\n  } else {\n    const result = handleCustomRewards(state, rewardsConfig, expedition)\n\n    const updatedBattle = {\n      ...battle,\n      ...result,\n    }\n\n    const seed = result.seed\n    return {\n      battle: updatedBattle,\n      seed,\n    }\n  }\n}\n\n// TODO add tests\nexport const createWinRewards = (\n  getState: GetStateFn,\n  battle: types.Battle\n): { battle: types.Battle; seed: types.Seed } => {\n  const rewardsConfig = battle.config.winRewards\n\n  if (rewardsConfig && rewardsConfig !== 'skip') {\n    return handleRewardsFromConfig(getState, battle, rewardsConfig)\n  } else {\n    // regular case\n    return rollWinRewards(getState, battle)\n  }\n}\n","import {\n  createArrayWithDefaultValues,\n  createIdList,\n  getRandomEntity,\n} from 'Redux/helpers'\n\nimport * as types from 'aer-types/types'\n\nexport const rollTreasureIdsByLevel = (\n  stillAvailableTreasureIds: string[],\n  amountOfTreasures: number,\n  getEntity: types.SeededEntityGetter = getRandomEntity,\n  seed: types.Seed\n) => {\n  const newTreasures =\n    stillAvailableTreasureIds.length > 0\n      ? createIdList(\n          stillAvailableTreasureIds,\n          createArrayWithDefaultValues(amountOfTreasures, 'EMPTY'),\n          getEntity,\n          seed\n        )\n      : { result: [], seed }\n\n  return newTreasures\n}\n","import { rollNewEntity } from '../helpers'\n\nimport { getRandomEntity } from 'Redux/helpers'\n\nimport * as types from 'aer-types/types'\n\nexport const rollSupplyRewards = (\n  gemIds: string[],\n  relicIds: string[],\n  spellIds: string[],\n  seed: types.Seed,\n  rollNewEntityFn: Function = rollNewEntity\n) => {\n  // We pack the values into arrays to make it possible to get empty values\n  // which are not null below\n  const newGemResult =\n    gemIds.length > 0\n      ? rollNewEntityFn(gemIds, getRandomEntity, seed)\n      : { result: undefined, seed }\n  const newGem = newGemResult.result ? [newGemResult.result] : []\n\n  const newRelicResult =\n    relicIds.length > 0\n      ? rollNewEntityFn(relicIds, getRandomEntity, newGemResult.seed)\n      : { result: undefined, seed: newGemResult.seed }\n  const newRelic = newRelicResult.result ? [newRelicResult.result] : []\n\n  const newSpellResult =\n    spellIds.length > 0\n      ? rollNewEntityFn(spellIds, getRandomEntity, newRelicResult.seed)\n      : { result: undefined, seed: newRelicResult.seed }\n  const newSpell = newSpellResult.result ? [newSpellResult.result] : []\n\n  return {\n    result: [...newGem, ...newRelic, ...newSpell],\n    seed: newSpellResult.seed,\n  }\n}\n","import * as types from 'aer-types/types'\n\nimport { getRandomEntity } from 'Redux/helpers'\nimport { rollNewEntity } from '../helpers'\n\nexport const handleTreasure = (\n  battle: types.Battle,\n  treasureIds: string[],\n  seed: types.Seed\n) => {\n  const newTreasureResult = rollNewEntity(treasureIds, getRandomEntity, seed)\n  const newTreasure = newTreasureResult.result\n\n  return {\n    ...battle,\n    rewards: {\n      treasure: newTreasure ? [newTreasure] : [],\n      mages: [],\n      supplyIds: [],\n    },\n    seed: newTreasureResult.seed,\n  }\n}\n","import * as types from 'aer-types/types'\n\nimport { getRandomEntity } from 'Redux/helpers'\nimport { rollNewEntity } from '../helpers'\n\nexport const handleSupply = (\n  battle: types.Battle,\n  supplyIds: string[],\n  seed: types.Seed\n) => {\n  const newSupplyItemResult = rollNewEntity(supplyIds, getRandomEntity, seed)\n  const newSupplyItemId = newSupplyItemResult.result\n\n  return {\n    ...battle,\n    rewards: {\n      treasure: [],\n      mages: [],\n      supplyIds: newSupplyItemId ? [newSupplyItemId] : [],\n    },\n    seed: newSupplyItemResult.seed,\n  }\n}\n","import { selectors } from 'Redux/Store'\n\nimport * as types from 'aer-types/types'\n\nimport {\n  RewardType,\n  BattleRewardsResult,\n  ExpeditionsStateSlice,\n} from '../../types'\nimport { handleMage } from 'Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/handleMage'\nimport { handleTreasure } from 'Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/handleTreasure'\nimport { handleSupply } from 'Redux/Store/Expeditions/Expeditions/sideEffects/rollLossRewards/handleSupply'\nimport { TreasureIdsStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/ids'\nimport { TreasureContentStateSlice } from 'Redux/Store/Settings/Expansions/Treasures/content'\nimport { MagesContentStateSlice } from 'Redux/Store/Settings/Expansions/Mages/content'\nimport { handleCustomRewards } from '../helpers'\nimport { CardsContentStateSlice } from 'Redux/Store/Settings/Expansions/Cards/content'\nimport { SelectedLanguagesStateSlice } from 'Redux/Store/Settings/Expansions/Languages'\nimport { GetStateFn } from 'Redux/helpers'\n\nexport const handleRewardType = ({\n  rewardType,\n  battle,\n  seed,\n  mageIds,\n  gemIds,\n  relicIds,\n  spellIds,\n  treasure1Ids,\n  treasure2Ids,\n  treasure3Ids,\n}: {\n  rewardType: RewardType\n  battle: types.Battle\n  seed: types.Seed\n  mageIds: string[]\n  gemIds: string[]\n  relicIds: string[]\n  spellIds: string[]\n  treasure1Ids: string[]\n  treasure2Ids: string[]\n  treasure3Ids: string[]\n}) => {\n  switch (rewardType) {\n    case 'mage': {\n      return handleMage(battle, mageIds, seed)\n    }\n\n    case 'gem': {\n      return handleSupply(battle, gemIds, seed)\n    }\n\n    case 'relic': {\n      return handleSupply(battle, relicIds, seed)\n    }\n\n    case 'spell': {\n      return handleSupply(battle, spellIds, seed)\n    }\n\n    case 'treasure1': {\n      return handleTreasure(battle, treasure1Ids, seed)\n    }\n\n    case 'treasure2': {\n      return handleTreasure(battle, treasure2Ids, seed)\n    }\n\n    case 'treasure3': {\n      return handleTreasure(battle, treasure3Ids, seed)\n    }\n\n    default: {\n      return { ...battle, seed }\n    }\n  }\n}\n\nconst rollLossRewards = (\n  getState: () => ExpeditionsStateSlice &\n    CardsContentStateSlice &\n    TreasureContentStateSlice &\n    TreasureIdsStateSlice &\n    MagesContentStateSlice &\n    SelectedLanguagesStateSlice,\n  battle: types.Battle,\n  rewardType: RewardType\n): BattleRewardsResult => {\n  const state = getState()\n\n  const expeditionId = battle.expeditionId\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId }\n  )\n  const seed = {\n    seed: expedition.seed.seed,\n    state: expedition.seed.supplyState,\n  }\n\n  const gemIds = selectors.getStillAvailableGemIds(state, {\n    expeditionId,\n  })\n  const relicIds = selectors.getStillAvailableRelicIds(state, {\n    expeditionId,\n  })\n  const spellIds = selectors.getStillAvailableSpellIds(state, {\n    expeditionId,\n  })\n\n  const treasure1Ids = selectors.getStillAvailableTreasureIdsByLevel(state, {\n    treasureLevel: 1,\n    expeditionId,\n  })\n  const treasure2Ids = selectors.getStillAvailableTreasureIdsByLevel(state, {\n    treasureLevel: 2,\n    expeditionId,\n  })\n  const treasure3Ids = selectors.getStillAvailableTreasureIdsByLevel(state, {\n    treasureLevel: 3,\n    expeditionId,\n  })\n\n  const mageIds = selectors.getStillAvailableMageIds(state, { expeditionId })\n\n  return handleRewardType({\n    rewardType,\n    battle,\n    seed,\n    mageIds,\n    gemIds,\n    relicIds,\n    spellIds,\n    treasure1Ids,\n    treasure2Ids,\n    treasure3Ids,\n  })\n}\n\n// TODO add tests\nconst handleRewardsFromConfig = (\n  getState: () => ExpeditionsStateSlice &\n    CardsContentStateSlice &\n    TreasureContentStateSlice &\n    TreasureIdsStateSlice &\n    MagesContentStateSlice &\n    SelectedLanguagesStateSlice,\n  battle: types.Battle,\n  rewardsConfig?: types.RewardsConfig,\n  rewardType?: RewardType\n) => {\n  const state = getState()\n\n  const expeditionId = battle.expeditionId\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId }\n  )\n  const seed = {\n    seed: expedition.seed.seed,\n    state: expedition.seed.supplyState,\n  }\n\n  const rewardTypeMissing = rewardsConfig?.type === 'regular' && !rewardType\n\n  if (!rewardsConfig || rewardTypeMissing) {\n    // If no config is left we simply return empty rewards\n\n    return {\n      ...battle,\n      rewards: {\n        treasure: [],\n        mages: [],\n        supplyIds: [],\n      },\n      seed,\n    }\n  }\n\n  if (rewardsConfig.type === 'regular' && rewardType) {\n    return rollLossRewards(getState, battle, rewardType)\n  } else if (rewardsConfig.type === 'custom') {\n    return {\n      ...battle,\n      ...handleCustomRewards(state, rewardsConfig, expedition),\n    }\n  }\n\n  // default (should never happen)\n  return {\n    ...battle,\n    rewards: {\n      treasure: [],\n      mages: [],\n      supplyIds: [],\n    },\n    seed,\n  }\n}\n\nexport const createLossRewards = (\n  getState: GetStateFn,\n  battle: types.Battle,\n  rewardType: RewardType\n): BattleRewardsResult => {\n  // RewardsConfig is used\n  const tryIndex = battle.tries - 1\n  const rewardsConfig =\n    battle.config.lossRewards && battle.config.lossRewards !== 'skip'\n      ? battle.config.lossRewards[tryIndex]\n      : undefined\n\n  if (rewardsConfig) {\n    return handleRewardsFromConfig(getState, battle, rewardsConfig, rewardType)\n  } else {\n    // regular case\n    return rollLossRewards(getState, battle, rewardType)\n  }\n}\n","import * as types from 'aer-types/types'\n\nimport { getRandomEntity } from 'Redux/helpers'\nimport { rollNewEntity } from '../helpers'\n\nexport const handleMage = (\n  battle: types.Battle,\n  mageIds: string[],\n  seed: types.Seed\n) => {\n  const newMageResult = rollNewEntity(mageIds, getRandomEntity, seed)\n  const newMage = newMageResult.result\n\n  return {\n    ...battle,\n    rewards: {\n      treasure: [],\n      mages: newMage ? [newMage] : [],\n      supplyIds: [],\n    },\n    seed: newMageResult.seed,\n  }\n}\n","import { saveAs } from 'file-saver'\n\nimport * as types from 'aer-types/types'\nimport { convertExpeditionToConfig } from 'Redux/Store/Expeditions/Expeditions/helpers'\n\nconst saveToFile = (json: string, name: string) => {\n  const blob = new Blob([json], { type: 'text/json;charset=utf-8' })\n\n  // We additionally copy the text to the clipboard, so that\n  // users with browsers where saveAs does not work still have an\n  // option to get the text\n  window.navigator.clipboard.writeText(json)\n\n  return saveAs(blob, `${name}.json`)\n}\n\nconst shareApi = (json: string, name: string) => {\n  // We additionally copy the text to the clipboard, so that\n  // users with browsers where saveAs does not work still have an\n  // option to get the text\n  window.navigator.clipboard.writeText(json)\n\n  if (window.navigator.share) {\n    return window.navigator.share({\n      title: name,\n      text: json,\n    })\n  }\n}\n\nexport const shareExpedition = (expedition: types.Expedition) => {\n  const config = convertExpeditionToConfig(expedition)\n\n  const json = JSON.stringify(config, undefined, 4)\n  const name = (expedition.name || expedition.id).replace(/\\s/g, '_')\n\n  if (window.navigator.share) {\n    return shareApi(json, name)\n  } else {\n    return saveToFile(json, name)\n  }\n}\n","import * as types from 'aer-types/types'\nimport { GetStateFn } from 'Redux/helpers'\n\nimport { selectors } from 'Redux/Store'\nimport { handleCustomRewards } from 'Redux/Store/Expeditions/Expeditions/sideEffects/helpers'\n\n// TODO add tests\nexport const createRewards = (getState: GetStateFn, reward: types.Reward) => {\n  const state = getState()\n  const expeditionId = reward.expeditionId\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId }\n  )\n\n  // FIXME\n  // it currently is possible that an id which is used as custom id is also being\n  // rolle before its part of a reward\n  // We definitely need a testcase for this, as well as the logic to avoid clashes like these\n\n  // The 'regular' RewardsConfig property should only be used in other contexts\n  // Which is why we opt out of doing anything, if it was mistakenly added to a\n  // Reward-Branch\n  if (reward.config.type === 'regular') {\n    return {\n      rewards: {\n        treasure: [],\n        mages: [],\n        supplyIds: [],\n      },\n      seed: {\n        seed: expedition.seed.seed,\n        state: expedition.seed.supplyState,\n      },\n      expeditionId,\n      branchId: reward.id,\n    }\n  } else {\n    return {\n      expeditionId,\n      branchId: reward.id,\n      ...handleCustomRewards(state, reward.config, expedition),\n    }\n  }\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\nimport * as types from 'aer-types/types'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nexport const EXPEDITIONS_DB_KEY = 'expeditions-1.11.0'\n\nexport const updateBattle = (\n  state: State,\n  battle: types.Battle,\n  additionalBattleProps?: {\n    status?: types.BattleStatus\n    tries?: number\n    rewards?: types.Rewards\n  }\n) => {\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const branches = oldExpedition.sequence.branches\n\n  const updatedBranches = {\n    ...branches,\n    [battle.id]: {\n      ...battle,\n      ...additionalBattleProps,\n    },\n  }\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { State } from '../types'\nimport * as sideEffects from '../sideEffects'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const createExpedition = (\n  state: State,\n  action: ReturnType<typeof actions.createExpedition>\n) => {\n  return loop(\n    state,\n    Cmd.run(sideEffects.createExpedition, {\n      args: [Cmd.getState, action.payload.baseConfig],\n      successActionCreator: actions.createExpeditionSuccess,\n    })\n  )\n}\n\nexport const createExpeditionSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.createExpeditionSuccess>\n) => {\n  const newExpedition = action.payload\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [newExpedition.id]: newExpedition,\n    },\n    expeditionIds: [newExpedition.id, ...state.expeditionIds],\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nexport const deleteExpedition = (\n  state: State,\n  action: ReturnType<typeof actions.deleteExpedition>\n) => {\n  const id = action.payload\n\n  const { [id]: expedition, ...rest } = state.expeditions\n\n  const newState = {\n    expeditions: { ...rest },\n    expeditionIds: state.expeditionIds.filter(\n      expeditionId => expeditionId !== id\n    ),\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport * as sideEffects from '../sideEffects'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const rollBattle = (\n  state: State,\n  action: ReturnType<typeof actions.rollBattle>\n) => {\n  const { battle } = action.payload\n\n  return loop(\n    state,\n    Cmd.run(sideEffects.createBattle, {\n      args: [Cmd.getState, battle],\n      successActionCreator: actions.rollBattleSuccess,\n    })\n  )\n}\n\nexport const rollBattleSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.rollBattleSuccess>\n) => {\n  const {\n    battle,\n    upgradedBasicNemesisCardIds,\n    nemesisSeedState,\n  } = action.payload\n\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const branches = oldExpedition.sequence.branches\n  const updatedBranches = {\n    ...branches,\n    [battle.id]: battle,\n  }\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        seed: {\n          ...oldExpedition.seed,\n          nemesisState: nemesisSeedState,\n        },\n        upgradedBasicNemesisCards: upgradedBasicNemesisCardIds,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport * as types from 'aer-types/types'\nimport * as helpers from '../helpers'\nimport * as sideEffects from '../sideEffects'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const winBattle = (\n  state: State,\n  action: ReturnType<typeof actions.winBattle>\n) => {\n  const battle = action.payload\n\n  return loop(\n    state,\n    Cmd.run(sideEffects.createWinRewards, {\n      args: [Cmd.getState, battle],\n      successActionCreator: actions.winBattleSuccess,\n    })\n  )\n}\n\nexport const winBattleSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.winBattleSuccess>\n) => {\n  const { battle, seed } = action.payload\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const { branches } = oldExpedition.sequence\n\n  const newStatus: types.BattleStatus = 'won'\n\n  const updatedBranches = {\n    ...branches,\n    [battle.id]: {\n      ...battle,\n      status: newStatus,\n    },\n  }\n\n  const battleScore = helpers.calcBattleScore(battle.tries)\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        seed: {\n          ...oldExpedition.seed,\n          supplyState: seed.state || true,\n        },\n        score: oldExpedition.score + battleScore,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { State } from '../types'\nimport { actions } from '../actions'\n\nimport { updateBattle } from './helpers'\n\nexport const startBattle = (\n  state: State,\n  action: ReturnType<typeof actions.startBattle>\n) => {\n  const { battle } = action.payload\n  return updateBattle(state, battle, {\n    tries: battle.tries + 1,\n    status: 'started',\n  })\n}\n","import { State } from '../types'\nimport { actions } from '../actions'\n\nimport { updateBattle } from './helpers'\n\nexport const loseBattle = (\n  state: State,\n  action: ReturnType<typeof actions.loseBattle>\n) => {\n  const { battle } = action.payload\n  return updateBattle(state, battle, { status: 'lost' })\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport * as sideEffects from '../sideEffects'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const rollLoss = (\n  state: State,\n  action: ReturnType<typeof actions.rollLoss>\n) => {\n  const { battle, rewardType } = action.payload\n\n  return loop(\n    state,\n    Cmd.run(sideEffects.createLossRewards, {\n      args: [Cmd.getState, battle, rewardType],\n      successActionCreator: actions.rollLossSuccess,\n    })\n  )\n}\n\nexport const rollLossSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.rollLossSuccess>\n) => {\n  const { seed, ...battle } = action.payload\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const { branches } = oldExpedition.sequence\n\n  const updatedBranches = {\n    ...branches,\n    [battle.id]: battle,\n  }\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        seed: {\n          ...oldExpedition.seed,\n          supplyState: seed.state || true,\n        },\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport * as types from 'aer-types/types'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nconst handleSkip = (\n  state: State,\n  action: ReturnType<typeof actions.acceptLoss>\n) => {\n  const { battle, banished, newSupplyIds } = action.payload\n\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const branches = oldExpedition.sequence.branches\n  // FIXME fix type casting\n  const branch = oldExpedition.sequence.branches[battle.id] as types.Battle\n\n  const { nextBranchId } = branch\n\n  // Battles do currently only have one outcome\n  const hasNext = !!nextBranchId && typeof nextBranchId === 'string'\n\n  const newStatus: types.BattleStatus = 'finished'\n  const nextBranchNewStatus: types.BattleStatus = 'unlocked'\n\n  const updatedBranches = {\n    ...branches,\n    [battle.id]: {\n      ...branch,\n      status: newStatus,\n      rewards: undefined,\n    },\n    ...(hasNext && {\n      [nextBranchId as string]: {\n        ...branches[nextBranchId as string],\n        status: nextBranchNewStatus,\n      },\n    }),\n  }\n\n  const newTreasureIds = battle.rewards ? battle.rewards.treasure : []\n  const newMageIds =\n    battle.rewards && battle.rewards.mages ? battle.rewards.mages : []\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n        barracks: {\n          ...oldExpedition.barracks,\n          treasureIds: [\n            ...oldExpedition.barracks.treasureIds,\n            ...newTreasureIds,\n          ],\n          supplyIds: newSupplyIds,\n          mageIds: [...oldExpedition.barracks.mageIds, ...newMageIds],\n        },\n        banished: [...oldExpedition.banished, ...banished],\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n\nconst handleRegular = (\n  state: State,\n  action: ReturnType<typeof actions.acceptLoss>\n) => {\n  const { battle, banished, newSupplyIds } = action.payload\n\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const branches = oldExpedition.sequence.branches\n  // FIXME fix type casting\n  const branch = oldExpedition.sequence.branches[battle.id] as types.Battle\n\n  const newStatus: types.BattleStatus = 'before_battle'\n\n  const updatedBranches = {\n    ...branches,\n    [battle.id]: {\n      ...branch,\n      status: newStatus,\n      rewards: undefined,\n    },\n  }\n\n  const newTreasureIds = battle.rewards ? battle.rewards.treasure : []\n  const newMageIds =\n    battle.rewards && battle.rewards.mages ? battle.rewards.mages : []\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n        barracks: {\n          ...oldExpedition.barracks,\n          treasureIds: [\n            ...oldExpedition.barracks.treasureIds,\n            ...newTreasureIds,\n          ],\n          supplyIds: newSupplyIds,\n          mageIds: [...oldExpedition.barracks.mageIds, ...newMageIds],\n        },\n        banished: [...oldExpedition.banished, ...banished],\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n\nexport const acceptLoss = (\n  state: State,\n  action: ReturnType<typeof actions.acceptLoss>\n) => {\n  const { battle } = action.payload\n\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  // FIXME fix type casting\n  const branch = oldExpedition.sequence.branches[battle.id] as types.Battle\n\n  switch (branch.config?.onLoss) {\n    case 'skip': {\n      return handleSkip(state, action)\n    }\n\n    default: {\n      return handleRegular(state, action)\n    }\n  }\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\nimport { BattleStatus } from 'aer-types/types'\n\nimport * as types from 'aer-types/types'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const finishBattle = (\n  state: State,\n  action: ReturnType<typeof actions.finishBattle>\n) => {\n  const { battle, newSupplyIds, banished } = action.payload\n  const oldExpedition = state.expeditions[battle.expeditionId]\n  const branches = oldExpedition.sequence.branches\n  // FIXME fix type casting\n  const branch = oldExpedition.sequence.branches[battle.id] as types.Battle\n\n  const { nextBranchId } = branch\n\n  // Battles do currently only have one outcome\n  const hasNext = !!nextBranchId && typeof nextBranchId === 'string'\n\n  const newStatus: BattleStatus = 'finished'\n  const nextBranchNewStatus: BattleStatus = 'unlocked'\n\n  const updatedBranches = {\n    ...branches,\n    [branch.id]: {\n      ...branch,\n      status: newStatus,\n    },\n    ...(hasNext && {\n      [nextBranchId as string]: {\n        ...branches[nextBranchId as string],\n        status: nextBranchNewStatus,\n      },\n    }),\n  }\n\n  const newTreasureIds = battle?.rewards?.treasure ?? []\n  const newMageIds = battle?.rewards?.mages ?? []\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [battle.expeditionId]: {\n        ...oldExpedition,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n        barracks: {\n          ...oldExpedition.barracks,\n          mageIds: [...oldExpedition.barracks.mageIds, ...newMageIds],\n          treasureIds: [\n            ...oldExpedition.barracks.treasureIds,\n            ...newTreasureIds,\n          ],\n          supplyIds: newSupplyIds,\n        },\n        banished: [...oldExpedition.banished, ...banished],\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\nimport { BattleStatus } from 'aer-types/types'\n\nimport * as helpers from '../helpers'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const finishExpedition = (\n  state: State,\n  action: ReturnType<typeof actions.finishExpedition>\n) => {\n  const { branch } = action.payload\n  const oldExpedition = state.expeditions[branch.expeditionId]\n  const branches = oldExpedition.sequence.branches\n\n  const newStatus: BattleStatus = 'finished'\n\n  const updatedBranches = {\n    ...branches,\n    [branch.id]: {\n      ...branch,\n      status: newStatus,\n    },\n  }\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [branch.expeditionId]: {\n        ...oldExpedition,\n        ...(branch.type === 'battle'\n          ? {\n              score:\n                oldExpedition.score + helpers.calcBattleScore(branch.tries),\n            }\n          : {}),\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n        finished: true,\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { get as getFromDb } from 'idb-keyval'\nimport { State, Action } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const fetchFromDB = (state: State, _: Action) => {\n  return loop(\n    state,\n    Cmd.run(getFromDb, {\n      args: [EXPEDITIONS_DB_KEY],\n      successActionCreator: actions.fetchFromDBSuccessful,\n      failActionCreator: actions.fetchFromDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { migrate } from '../migrations'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const migrateAfterFetch = (\n  state: State,\n  action: ReturnType<typeof actions.fetchFromDBSuccessful>\n) => {\n  const newState = action.payload as State\n  return loop(\n    state,\n    Cmd.run(migrate, {\n      args: [\n        Cmd.getState,\n        {\n          newState,\n        },\n      ],\n      successActionCreator: actions.migrateToSettingsSnapshotSuccessful,\n    })\n  )\n}\n\nexport const migrateAfterFetchSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.migrateToSettingsSnapshotSuccessful>\n) => {\n  const newState: State = action.payload || state\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\n\nimport * as sideEffects from '../sideEffects'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nexport const shareExpedition = (\n  state: State,\n  action: ReturnType<typeof actions.shareExpedition>\n) => {\n  const { expedition } = action.payload\n\n  return loop(\n    state,\n    Cmd.run(sideEffects.shareExpedition, {\n      args: [expedition],\n      successActionCreator: actions.shareExpeditionSuccess,\n      failActionCreator: actions.shareExpeditionFailure,\n    })\n  )\n}\n\n// NoOp - we still want it inside our dev tool logs, though\nexport const shareExpeditionSuccess = (\n  state: State,\n  _: ReturnType<typeof actions.shareExpeditionSuccess>\n) => {\n  return state\n}\n\n// NoOp - we still want it inside our dev tool logs, though\nexport const shareExpeditionFailure = (\n  state: State,\n  _: ReturnType<typeof actions.shareExpeditionFailure>\n) => {\n  return state\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport { Status } from 'aer-types/types'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nexport const resolveNarrative = (\n  state: State,\n  action: ReturnType<typeof actions.resolveNarrative>\n) => {\n  const { expeditionId, narrativeId, decision } = action.payload\n  const oldExpedition = state.expeditions[expeditionId]\n  const branches = oldExpedition.sequence.branches\n  const narrative = branches[narrativeId]\n\n  const nextBranchId = narrative.nextBranchId\n    ? narrative.nextBranchId[decision]\n    : false\n\n  const hasNext = !!nextBranchId\n\n  const newStatus: Status = 'finished'\n  const nextBranchNewStatus: Status = 'unlocked'\n\n  const updatedBranches = {\n    ...branches,\n    [narrative.id]: {\n      ...narrative,\n      status: newStatus,\n    },\n    ...(hasNext && {\n      [nextBranchId as string]: {\n        ...branches[nextBranchId as string],\n        status: nextBranchNewStatus,\n      },\n    }),\n  }\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [expeditionId]: {\n        ...oldExpedition,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport * as sideEffects from '../sideEffects'\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const generateRewards = (\n  state: State,\n  action: ReturnType<typeof actions.generateRewards>\n) => {\n  const { reward } = action.payload\n\n  return loop(\n    state,\n    Cmd.run(sideEffects.createRewards, {\n      args: [Cmd.getState, reward],\n      successActionCreator: actions.generateRewardsSuccess,\n    })\n  )\n}\n\nexport const generateRewardsSuccess = (\n  state: State,\n  action: ReturnType<typeof actions.generateRewardsSuccess>\n) => {\n  const { rewards, seed, expeditionId, branchId } = action.payload\n  const oldExpedition = state.expeditions[expeditionId]\n  const { branches } = oldExpedition.sequence\n  const branch = oldExpedition.sequence.branches[branchId]\n\n  const updatedBranches = {\n    ...branches,\n    [branchId]: {\n      ...branch,\n      rewards,\n    },\n  }\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [expeditionId]: {\n        ...oldExpedition,\n        seed: {\n          ...oldExpedition.seed,\n          supplyState: seed.state || true,\n        },\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { loop, Cmd } from 'redux-loop'\nimport { set as setToDb } from 'idb-keyval'\n\nimport * as types from 'aer-types/types'\n\nimport { State } from '../types'\nimport { actions } from '../actions'\n\nimport { EXPEDITIONS_DB_KEY } from './helpers'\n\nexport const acceptRewards = (\n  state: State,\n  action: ReturnType<typeof actions.acceptRewards>\n) => {\n  const { reward, banished, newSupplyIds } = action.payload\n\n  const oldExpedition = state.expeditions[reward.expeditionId]\n  const branches = oldExpedition.sequence.branches\n  // FIXME fix type casting\n  const branch = oldExpedition.sequence.branches[reward.id] as types.Reward\n\n  const nextBranchId = reward?.nextBranchId\n  const hasNext = !!nextBranchId\n\n  const newStatus: types.Status = 'finished'\n  const nextBranchNewStatus: types.Status = 'unlocked'\n\n  const updatedBranches = {\n    ...branches,\n    [reward.id]: {\n      ...branch,\n      status: newStatus,\n    },\n    ...(hasNext && {\n      [nextBranchId as string]: {\n        ...branches[nextBranchId as string],\n        status: nextBranchNewStatus,\n      },\n    }),\n  }\n\n  const newTreasureIds = reward.rewards ? reward.rewards.treasure : []\n  const newMageIds =\n    reward.rewards && reward.rewards.mages ? reward.rewards.mages : []\n\n  const newState = {\n    ...state,\n    expeditions: {\n      ...state.expeditions,\n      [reward.expeditionId]: {\n        ...oldExpedition,\n        sequence: {\n          ...oldExpedition.sequence,\n          branches: updatedBranches,\n        },\n        barracks: {\n          ...oldExpedition.barracks,\n          treasureIds: [\n            ...oldExpedition.barracks.treasureIds,\n            ...newTreasureIds,\n          ],\n          supplyIds: newSupplyIds,\n          mageIds: [...oldExpedition.barracks.mageIds, ...newMageIds],\n        },\n        banished: [...oldExpedition.banished, ...banished],\n      },\n    },\n  }\n\n  return loop(\n    newState,\n    Cmd.run(setToDb, {\n      args: [EXPEDITIONS_DB_KEY, newState],\n      successActionCreator: actions.setToDBSuccessful,\n      failActionCreator: actions.setToDBFailed,\n    })\n  )\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { State, Action, ActionTypes } from './types'\nimport * as reducerHelpers from './reducerHelpers'\n\nexport const initialState: State = {\n  expeditions: {},\n  expeditionIds: [],\n}\n\nexport const isExpeditionState = (value: unknown): value is State => {\n  if (typeof value !== 'object' || !value) {\n    return false\n  } else {\n    return 'expeditions' in value && 'expeditionIds' in value\n  }\n}\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.CREATE_EXPEDITION: {\n      return reducerHelpers.createExpedition(state, action)\n    }\n\n    case ActionTypes.CREATE_EXPEDITION_SUCCESS: {\n      return reducerHelpers.createExpeditionSuccess(state, action)\n    }\n\n    case ActionTypes.DELETE_EXPEDITION: {\n      return reducerHelpers.deleteExpedition(state, action)\n    }\n\n    case ActionTypes.ROLL_BATTLE: {\n      return reducerHelpers.rollBattle(state, action)\n    }\n\n    case ActionTypes.ROLL_BATTLE_SUCCESS: {\n      return reducerHelpers.rollBattleSuccess(state, action)\n    }\n\n    case ActionTypes.START_BATTLE: {\n      return reducerHelpers.startBattle(state, action)\n    }\n\n    case ActionTypes.WIN_BATTLE: {\n      return reducerHelpers.winBattle(state, action)\n    }\n\n    case ActionTypes.WIN_BATTLE_SUCCESS: {\n      return reducerHelpers.winBattleSuccess(state, action)\n    }\n\n    case ActionTypes.LOSE_BATTLE: {\n      return reducerHelpers.loseBattle(state, action)\n    }\n\n    case ActionTypes.ROLL_LOSS: {\n      return reducerHelpers.rollLoss(state, action)\n    }\n\n    case ActionTypes.ROLL_LOSS_SUCCESS: {\n      return reducerHelpers.rollLossSuccess(state, action)\n    }\n\n    case ActionTypes.ACCEPT_LOSS: {\n      return reducerHelpers.acceptLoss(state, action)\n    }\n\n    case ActionTypes.FINISH_BATTLE: {\n      return reducerHelpers.finishBattle(state, action)\n    }\n\n    case ActionTypes.FINISH_EXPEDITION: {\n      return reducerHelpers.finishExpedition(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return reducerHelpers.fetchFromDB(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      if (!action.payload) {\n        return state\n      }\n      return reducerHelpers.migrateAfterFetch(state, action)\n    }\n\n    case ActionTypes.SETTINGS_SNAPSHOT_MIGRATION_SUCCESS: {\n      return reducerHelpers.migrateAfterFetchSuccess(state, action)\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    case ActionTypes.EXPEDITION_SHARE: {\n      return reducerHelpers.shareExpedition(state, action)\n    }\n\n    case ActionTypes.EXPEDITION_SHARE_SUCCESS: {\n      return reducerHelpers.shareExpeditionSuccess(state, action)\n    }\n\n    case ActionTypes.EXPEDITION_SHARE_FAILURE: {\n      return reducerHelpers.shareExpeditionFailure(state, action)\n    }\n\n    case ActionTypes.NARRATIVE_RESOLVE: {\n      return reducerHelpers.resolveNarrative(state, action)\n    }\n\n    case ActionTypes.REWARDS_GENERATE: {\n      return reducerHelpers.generateRewards(state, action)\n    }\n\n    case ActionTypes.REWARDS_GENERATE_SUCCESS: {\n      return reducerHelpers.generateRewardsSuccess(state, action)\n    }\n\n    case ActionTypes.REWARDS_ACCEPT: {\n      return reducerHelpers.acceptRewards(state, action)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import * as types from 'aer-types/types'\nimport { createSelector } from 'reselect'\n\nimport { ExpeditionsStateSlice, ExpeditionIdsStateSlice } from './types'\n\nconst getExpeditions = (state: ExpeditionsStateSlice) =>\n  state.Expeditions.Expeditions.expeditions\n\nconst getExpeditionIds = (state: ExpeditionIdsStateSlice) =>\n  state.Expeditions.Expeditions.expeditionIds\n\nconst getExpeditionId = (_: unknown, props: { expeditionId: string }) =>\n  props.expeditionId\n\nconst getBranchId = (_: unknown, props: { branchId: string }) => props.branchId\n\nconst getChoiceIndex = (_: unknown, props: { choiceIndex: number }) =>\n  props.choiceIndex\n\nconst getExpeditionList = createSelector(\n  [getExpeditionIds, getExpeditions],\n  (ids, expeditions) => ids.map((id) => expeditions[id])\n)\n\nconst getExpeditionById = createSelector(\n  [getExpeditions, getExpeditionId],\n  (expeditions, id) => expeditions[id]\n)\n\nconst getExpeditionIsFinished = createSelector(\n  [getExpeditionById],\n  (expedition) => expedition.finished\n)\n\nconst getSettingsSnapshotByExpeditionId = createSelector(\n  [getExpeditionById],\n  (expedition) => expedition.settingsSnapshot\n)\n\nconst getHasNextBranch = createSelector(\n  [getExpeditionById, getBranchId],\n  (expedition, branchId) => {\n    return !!expedition.sequence.branches[branchId].nextBranchId\n  }\n)\n\nconst getNextBranch = createSelector(\n  [getExpeditionById, getBranchId, getChoiceIndex],\n  (expedition, branchId, choiceIndex) => {\n    const nextBranchId = expedition.sequence.branches[branchId].nextBranchId\n\n    if (typeof nextBranchId === 'string') {\n      return expedition.sequence.branches[nextBranchId]\n    } else if (typeof nextBranchId === 'object' && !!choiceIndex) {\n      // This is the case if we have multiple descisions each leading to a\n      // different branch id\n      const id = nextBranchId[choiceIndex]\n      return expedition.sequence.branches[id]\n    }\n\n    return null\n  }\n)\n\nconst getSupplyByExpeditionId = createSelector(\n  [getExpeditionById],\n  (expedition) => expedition.barracks.supplyIds\n)\n\nconst getBanishedByExpeditionId = createSelector(\n  [getExpeditionById],\n  (expedition) => expedition.banished\n)\n\nconst getMagesByExpeditionId = createSelector(\n  [getExpeditionById],\n  (expedition) => expedition.barracks.mageIds\n)\n\nconst getBranchIdListByExpeditionId = createSelector(\n  [getExpeditionById],\n  (expedition) => Object.keys(expedition.sequence.branches)\n)\n\nconst getBranchListByExpeditionId = createSelector(\n  [getExpeditionById, getBranchIdListByExpeditionId],\n  (expedition, branchIds) =>\n    branchIds.map((id) => expedition.sequence.branches[id])\n)\n\nconst getPreviousNemesesByExpeditionId = createSelector(\n  [getBranchListByExpeditionId],\n  (branches) =>\n    branches\n      .filter(\n        (branch: types.Branch): branch is types.Battle =>\n          branch.type === 'battle'\n      )\n      .reduce((acc: string[], battle: types.Battle) => {\n        if (battle.nemesisId) {\n          return [...acc, battle.nemesisId]\n        }\n\n        return acc\n      }, [])\n)\n\nconst getBarracksTreasureIdsByExpeditionId = createSelector(\n  [getExpeditionById],\n  (expedition) => expedition.barracks.treasureIds\n)\n\nexport const selectors = {\n  getExpeditions,\n  getExpeditionIds,\n  getExpeditionList,\n  getExpeditionById,\n  getNextBattle: getNextBranch,\n  getSupplyByExpeditionId,\n  getBanishedByExpeditionId,\n  getMagesByExpeditionId,\n  getExpeditionIsFinished,\n  getHasNextBranch,\n  getSettingsSnapshotByExpeditionId,\n  getPreviousNemesesByExpeditiionId: getPreviousNemesesByExpeditionId,\n  getBarracksTreasureIdsByExpeditionId,\n}\n","export type OldStyleNemesisTier = {\n  tier: 1 | 2 | 3 | 4\n  isNewTier: boolean\n}\n\nexport type PlayerCount = 1 | 2 | 3 | 4\n\nexport interface ICreature {\n  expansion: string\n  name: string\n  id: string\n}\n\nexport const CARD_TYPES = ['ANY', 'Gem', 'Relic', 'Spell', 'EMPTY'] as const\nexport type CardType = typeof CARD_TYPES[number]\n\nexport type ICard = {\n  type: CardType\n  expansion: string\n  name: string\n  id: string\n  cost: number\n  effect: string\n  keywords: string[]\n}\n\nexport type ExpansionType = 'standalone' | 'mini' | 'promo'\n\nexport type EntityType = 'nemeses' | 'mages' | 'cards'\nexport type Entity = ICard | ICreature\n\nexport type NemesisCardType = 'Power' | 'Minion' | 'Attack'\nexport type NemesisCardTier = 1 | 2 | 3\n\nexport type MinionCard = {\n  type: 'Minion'\n  hp: number\n  shields?: number\n}\n\nexport type PowerCard = {\n  type: 'Power'\n  power: number\n}\n\nexport type AttackCard = {\n  type: 'Attack'\n}\n\nexport type BasicNemesisCard = {\n  id: string\n  name: string\n  expansion: string\n  tier: NemesisCardTier\n  effect: string\n  // TODO do we already want to add the other optional values from Wills spreadsheet?\n} & (MinionCard | PowerCard | AttackCard)\n\n// FIXME should also just be a BasicNemesisCard -> we need to adjust all occurences\n// inside the app, as soon as we added the necessary information to our existing data set\nexport type UpgradedBasicNemesisCard = BasicNemesisCard & {\n  upgraded: boolean\n}\n\nexport interface IExpansion {\n  id: string\n  name: string\n  type: ExpansionType\n  nemeses: Array<Nemesis>\n  mages: Array<Mage>\n  cards: Array<ICard>\n  treasures?: Array<Treasure>\n  basicNemesisCards?: Array<BasicNemesisCard>\n  upgradedBasicNemesisCards?: Array<UpgradedBasicNemesisCard>\n}\n\nexport interface IExpansionData {\n  [key: string]: IExpansion\n}\n\nexport type Expansion = {\n  id: string\n  name: string\n  type: ExpansionType\n}\n\nexport type Expansions = {\n  [id: string]: Expansion\n}\n\nexport type ExpeditionRating = 1 | 2 | 3 | 4\n\nexport type Nemesis = ICreature & {\n  health: number | '*'\n  additionalInfo: string\n  difficulty: number\n  expeditionRating: ExpeditionRating\n}\n\nexport type Mage = ICreature & {\n  uniqueStarters: ICard[]\n  mageTitle: string | 'Custom'\n  ability: string | 'Custom'\n  complexityRating?: number // keep this optional\n  numberOfCharges: number | 'Custom'\n}\n\nexport type Nemeses = {\n  [id: string]: Nemesis\n}\n\nexport type Mages = {\n  [id: string]: Mage\n}\n\nexport type Cards = {\n  [id: string]: ICard\n}\n\nexport type TreasureLevel = 1 | 2 | 3\n\nexport type Treasure = {\n  id: string\n  expansion: string\n  name: string\n  level: TreasureLevel\n  subtype?: CardType\n  effect: string\n}\n\nexport type Treasures = {\n  [id: string]: Treasure\n}\n\nexport type BasicNemesisCards = {\n  [id: string]: BasicNemesisCard\n}\n\nexport type UpgradedBasicNemesisCards = {\n  [id: string]: UpgradedBasicNemesisCard\n}\n\nexport type NormalizedData = {\n  expansions: Expansions\n  nemeses: Nemeses\n  mages: Mages\n  cards: Cards\n  treasures: Treasures\n  basicNemesisCards: BasicNemesisCards\n  upgradedBasicNemesisCards: UpgradedBasicNemesisCards\n  expansionIds: string[]\n  nemesisIds: string[]\n  mageIds: string[]\n  cardIds: string[]\n  treasureIds: string[]\n  basicNemesisCardIds: string[]\n  upgradedBasicNemesisCardIds: string[]\n}\n","import { OldStyleNemesisTier, TreasureLevel } from './data'\nimport { IMarketSetup, IBluePrint } from './market'\nimport { Seed } from './index'\n\n//////////\n// Util //\n//////////\n\nexport type Variant = {\n  id: string\n  name: string\n  configList: Array<BattleConfig>\n}\n\nexport type BattleTreasure = { level?: TreasureLevel; hasTreasure: boolean }\n\nexport const variants: { [id: string]: Variant } = {\n  DEFAULT: {\n    id: 'DEFAULT',\n    name: 'Default',\n    configList: [\n      {\n        tier: 1,\n        newUBNCards: { type: 'regular', addRandom: false },\n        treasure: { level: 1, hasTreasure: true },\n      },\n      {\n        tier: 2,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { level: 2, hasTreasure: true },\n      },\n      {\n        tier: 3,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { level: 3, hasTreasure: true },\n      },\n      {\n        tier: 4,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { hasTreasure: false },\n      },\n    ],\n  },\n  SHORT: {\n    id: 'SHORT',\n    name: 'Short',\n    configList: [\n      {\n        tier: 2,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { level: 2, hasTreasure: true },\n      },\n      {\n        tier: 3,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { level: 3, hasTreasure: true },\n      },\n      {\n        tier: 4,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { hasTreasure: false },\n      },\n    ],\n  },\n  EXTENDED: {\n    id: 'EXTENDED',\n    name: 'Extended',\n    configList: [\n      {\n        tier: 1,\n        newUBNCards: { type: 'regular', addRandom: false },\n        treasure: { hasTreasure: false },\n      },\n      {\n        tier: 1,\n        newUBNCards: { type: 'regular', addRandom: false },\n        treasure: { level: 1, hasTreasure: true },\n      },\n      {\n        tier: 2,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { hasTreasure: false },\n      },\n      {\n        tier: 2,\n        newUBNCards: { type: 'regular', addRandom: false },\n        treasure: { level: 2, hasTreasure: true },\n      },\n      {\n        tier: 3,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { hasTreasure: false },\n      },\n      {\n        tier: 3,\n        newUBNCards: { type: 'regular', addRandom: false },\n        treasure: { level: 3, hasTreasure: true },\n      },\n      {\n        tier: 4,\n        newUBNCards: { type: 'regular', addRandom: true },\n        treasure: { hasTreasure: false },\n      },\n      {\n        tier: 4,\n        newUBNCards: { type: 'regular', addRandom: false },\n        treasure: { hasTreasure: false },\n      },\n    ],\n  },\n}\n\n// Automagically generate union type of variant ids from variants\n// object\nexport const variantIds = Object.values(variants).map((val) => val.id)\nexport type VariantId = typeof variantIds[number]\n\nexport type Status = 'locked' | 'unlocked' | 'finished'\n\nexport type BattleStatus = Status | 'before_battle' | 'started' | 'won' | 'lost'\n\nexport type SettingsSnapshotConfig = {\n  supplySetup: IMarketSetup\n  availableCardIds: string[]\n  availableMageIds: string[]\n  availableNemesisIds: string[]\n  availableTreasureIds: string[]\n  availableUpgradedBasicNemesisCardIds: string[]\n}\n\nexport type SettingsSnapshot = SettingsSnapshotConfig & {\n  usedExpansions: string[]\n}\n\nexport type ExpeditionSeedState = Object | true\nexport type ExpeditionSeed = Seed & {\n  supplyState: ExpeditionSeedState\n  nemesisState: ExpeditionSeedState\n}\n\n/*\n * @deprecated\n */\nexport type OldStyleBattle = {\n  id: string\n  expeditionId: string\n  nemesisId?: string\n  nemesisTier: OldStyleNemesisTier\n  treasure: BattleTreasure\n  status: BattleStatus\n  rewards?: { treasure: string[]; mage?: string; supplyIds: string[] }\n  tries: number\n}\n\n/*\n * @deprecated\n */\nexport type OldStyleExpedition = {\n  id: string\n  name: string\n  migrationVersion?: number\n  score: number\n  seed: ExpeditionSeed\n  settingsSnapshot: SettingsSnapshot\n  barracks: {\n    mageIds: string[]\n    supplyIds: string[]\n    treasureIds: string[]\n  }\n  upgradedBasicNemesisCards: string[]\n  banished: string[]\n  battles: OldStyleBattle[]\n  variantId: string\n  bigPocketVariant: boolean\n  finished: boolean\n}\n\nexport type NextBranchId = string | { [key: number]: string }\n\nexport type Barracks = {\n  mageIds: string[]\n  supplyIds: string[]\n  treasureIds: string[]\n}\n\nexport type OnLoss = 'skip'\n\nexport type NemesisTier = 1 | 2 | 3 | 4\n\n///////////////////\n// Configuration //\n///////////////////\n\nexport type TreasureRewardConfig = {\n  ids: Array<string | { random: true; level: 1 | 2 | 3 }>\n}\n\nexport type MageRewardConfig = {\n  ids: Array<string | { random: true }>\n}\n\nexport type SupplyRewardConfig = {\n  ids: Array<string | IBluePrint>\n  bigPocket?: boolean\n}\n\nexport type RewardsConfig =\n  | {\n      type: 'custom'\n      treasure?: TreasureRewardConfig\n      mage?: MageRewardConfig\n      supply?: SupplyRewardConfig\n    }\n  | { type: 'regular' }\n\nexport type BattleConfig = {\n  tier: NemesisTier\n  nemesisId?: string\n  newUBNCards:\n    | { ids: string[]; type: 'custom' }\n    | { type: 'regular'; addRandom: boolean }\n  specialRules?: string\n  lossRewards?: RewardsConfig[] | 'skip'\n  winRewards?: RewardsConfig | 'skip'\n  treasure: BattleTreasure\n  onLoss?: OnLoss\n}\n\nexport type BattleBranch = {\n  type: 'battle'\n  config: BattleConfig\n  nextBranchId?: string\n}\n\nexport type NarrativeConfig = {\n  text: string\n  decisions: string[] | false\n}\n\nexport type NarrativeBranch = {\n  type: 'narrative'\n  config: NarrativeConfig\n  nextBranchId?: string[]\n}\n\nexport type RewardBranch = {\n  type: 'reward'\n  config: RewardsConfig\n  nextBranchId: string // mandatory\n}\n\nexport type BranchConfig = BattleBranch | NarrativeBranch | RewardBranch\n\nexport type BranchesConfig = { [id: string]: BranchConfig }\n\nexport type SequenceConfig = {\n  firstBranchId: string\n  branches: BranchesConfig\n}\n\nexport type BaseExpeditionConfig = {\n  name: string\n  seedConfig?: string\n  sequenceConfig: SequenceConfig\n  bigPocketVariantConfig: boolean\n  initialBarracksConfig?: Partial<Barracks>\n  initialUBNCardsConfig?: string[]\n}\n\nexport type ImportedExpeditionConfig = BaseExpeditionConfig & {\n  settingsSnapshotConfig?: SettingsSnapshotConfig\n}\n\nexport type ExpeditionConfig = BaseExpeditionConfig & {\n  settingsSnapshotConfig: SettingsSnapshotConfig\n}\n\n////////////////\n// Expedition //\n////////////////\n\nexport type Rewards = {\n  treasure: string[]\n  mages: string[]\n  supplyIds: string[]\n}\n\nexport type Battle = BattleBranch & {\n  id: string\n  expeditionId: string\n  nemesisId?: string\n  status: BattleStatus\n  // These are actual rewards which where rolled, not config\n  rewards?: Rewards\n  tries: number\n}\n\nexport type Narrative = NarrativeBranch & {\n  id: string\n  status: Status\n  expeditionId: string\n}\n\nexport type Reward = RewardBranch & {\n  id: string\n  status: Status\n  // These are actual rewards which where rolled, not config\n  rewards?: Rewards\n  expeditionId: string\n}\n\nexport type Branch = Battle | Narrative | Reward\n\nexport type Branches = { [id: string]: Branch }\n\nexport type Sequence = {\n  firstBranchId: string\n  branches: Branches\n}\n\nexport type BaseExpedition = {\n  id: string\n  name: string\n  bigPocketVariant: boolean\n  score: number\n  seed: ExpeditionSeed\n  sequence: Sequence\n  barracks: Barracks\n  banished: string[]\n  upgradedBasicNemesisCards: string[]\n  finished: boolean\n  migrationVersion?: number\n  initialBarracksConfig?: Barracks\n  initialUBNCardsConfig?: string[]\n}\n\nexport type ExpeditionFromImportedConfig = BaseExpedition & {\n  settingsSnapshot?: Omit<SettingsSnapshot, 'usedExpansions'>\n}\n\nexport type Expedition = BaseExpedition & {\n  settingsSnapshot: SettingsSnapshot\n}\n\nexport type Expeditions = {\n  [id: string]: Expedition\n}\n","import * as Data from './data'\n\nexport type MarketType = 'official' | 'custom'\nexport const THRESHOLD_OPERATIONS = ['<', '>', '=', '<=', '>='] // Note: should not be a const, because we want to treat it as regular list\nexport const SUPPLY_OPERATIONS = [\n  ...THRESHOLD_OPERATIONS,\n  'ANY',\n  'OR',\n  'NoOp',\n] as const\nexport type Operation = typeof SUPPLY_OPERATIONS[number]\n\nexport interface IBluePrint {\n  id?: string | number\n  type: Data.CardType\n  operation: Operation\n  threshold?: number\n  values?: Array<number>\n}\n\nexport interface IEmptyBluePrint extends IBluePrint {\n  type: 'EMPTY'\n  operation: 'NoOp'\n}\nexport type Slot = IBluePrint | IEmptyBluePrint\n\nexport type MarketTile = {\n  id: string\n  type: Data.CardType\n  expansion?: string\n  name?: string\n  cost?: number\n  operation: Operation\n  threshold?: number\n  values?: Array<number>\n}\n\nexport type IMarketSetup = Readonly<{\n  id: string\n  name: string\n  type: MarketType\n  default?: boolean\n  active: boolean\n  tiles: Array<Slot>\n  isDirty?: boolean // Flag to mark new/edited items\n  isNew?: boolean // Flag to mark if an item has already been actively saved\n}>\n\nexport type MarketSetups = {\n  setups: { [id: string]: IMarketSetup }\n  ids: string[]\n}\n\nexport const isCard = (card: Data.ICard | Slot): card is Data.ICard => {\n  if (!card) return false\n  return (card as Data.ICard).name !== undefined\n}\n","export type Player =\n  | 'Player 1'\n  | 'Player 2'\n  | 'Player 3'\n  | 'Player 4'\n  | 'Player 1 (alternate)'\n  | 'Player 1/2'\n  | 'Player 3/4'\n  | 'Nemesis'\n  | 'Wild'\n  | 'Wild Token'\n  | 'Maelstrom Assault'\n  | 'Blitz'\n  | 'Thief Of Dreams Delirium'\n  | 'Myth'\n  | 'Bone'\n\nexport type TurnOrderCardType =\n  | 'player1'\n  | 'player2'\n  | 'player3'\n  | 'player4'\n  | 'player12'\n  | 'player34'\n  | 'wild'\n  | 'wild-token'\n  | 'nemesis'\n  | 'maelstrom'\n  | 'blitz'\n  | 'thief-of-dreams'\n  | 'myth'\n  | 'bone'\n\nexport interface ITurnOrderCard {\n  id: string\n  name: Player\n  type: TurnOrderCardType\n  alternate?: boolean\n  display?: boolean\n}\n\nexport interface ITurnOrderSetups {\n  [key: string]: ITurnOrderPlayerCount\n}\n\nexport interface ITurnOrderPlayerCount {\n  id: string\n  name: string\n  variations: ITurnOrderVariations\n}\n\nexport interface ITurnOrderVariations {\n  [key: string]: ITurnOrderSetup\n}\n\nexport interface ITurnOrderSetup {\n  id: string\n  name: string\n  turnOrderCards: Array<ITurnOrderCard>\n}\n\nexport const MODES = [\n  'Default',\n  'Maelstrom',\n  'Blitz',\n  'Blitz + Maelstrom',\n  'Thief Of Dreams',\n  'Paradox of Myth and Bone',\n] as const\nexport type Mode = typeof MODES[number] // automatically creates union from tuple\n\nexport const PLAYER_COUNT_IDS = [\n  'onePlayer',\n  'twoPlayers',\n  'threePlayers',\n  'fourPlayers',\n] as const\nexport type PlayerCountId = typeof PLAYER_COUNT_IDS[number]\n\nexport const TURNORDER_SETUP_VARIATION_IDS = [\n  'default',\n  '4toc',\n  '34alternating',\n  'wildToken',\n  'splitPlayers',\n] as const\nexport type TurnorderSetupVariationId = typeof TURNORDER_SETUP_VARIATION_IDS[number]\n","import { combineReducers, reduceReducers } from 'redux-loop'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as MainContentLoading from './MainContentLoading'\nimport * as Settings from './Settings'\nimport * as Randomizer from './Randomizer'\nimport * as TurnOrder from './TurnOrder'\nimport * as Expeditions from './Expeditions'\n\nimport * as topLevelSelectors from './selectors'\n\nexport type RootState = {\n  Settings: Settings.State\n  MainContentLoading: MainContentLoading.State\n  Randomizer: Randomizer.State\n  TurnOrder: TurnOrder.State\n  Expeditions: Expeditions.State\n}\n\nexport enum ActionTypes {\n  USER_CONFIGURATION_GET = 'ROOT/USER_CONFIGURATION_GET',\n}\n\nexport const mainActions = {\n  getUserConfiguration: () => createAction(ActionTypes.USER_CONFIGURATION_GET),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  Settings: Settings.actions,\n  Main: mainActions,\n  TurnOrder: TurnOrder.actions,\n  Randomizer: Randomizer.actions,\n  Expeditions: Expeditions.actions,\n}\n\nexport const selectors = {\n  Settings: Settings.selectors,\n  Main: {\n    ContentLoading: MainContentLoading.selectors,\n  },\n  TurnOrder: TurnOrder.selectors,\n  Randomizer: Randomizer.selectors,\n  Expeditions: Expeditions.selectors,\n\n  ...topLevelSelectors,\n}\n\nexport type RootAction =\n  | MainAction\n  | Settings.Action\n  | MainContentLoading.Action\n  | Randomizer.Action\n  | TurnOrder.Action\n  | Expeditions.Action\n\nexport const initialState = {\n  Settings: Settings.initialState,\n  MainContentLoading: MainContentLoading.initialState,\n  Randomizer: Randomizer.initialState,\n  TurnOrder: TurnOrder.initialState,\n  Expeditions: Expeditions.initialState,\n}\n\nexport const MainReducer: LoopReducer<RootState, RootAction> = (\n  state: RootState = initialState,\n  action: RootAction\n) => {\n  switch (action.type) {\n    case ActionTypes.USER_CONFIGURATION_GET: {\n      return loop(\n        state,\n        Cmd.list([\n          Cmd.action(\n            actions.Settings.Expansions.Expansions.selected.fetchFromDB()\n          ),\n          Cmd.action(actions.Settings.Expansions.Languages.fetchFromDB()),\n          Cmd.action(actions.Settings.Expansions.Cards.selected.fetchFromDB()),\n          Cmd.action(\n            actions.Settings.Expansions.Nemeses.selected.fetchFromDB()\n          ),\n          Cmd.action(actions.Settings.Expansions.Mages.selected.fetchFromDB()),\n          Cmd.action(\n            actions.Settings.Expansions.BasicNemesisCards.selected.fetchFromDB()\n          ),\n          Cmd.action(\n            actions.Settings.Expansions.UpgradedBasicNemesisCards.selected.fetchFromDB()\n          ),\n          Cmd.action(\n            actions.Settings.Expansions.Treasures.selected.fetchFromDB()\n          ),\n          Cmd.action(actions.Settings.SupplySetups.fetchFromDB()),\n          Cmd.action(actions.TurnOrder.Configuration.fetchFromDB()),\n          Cmd.action(actions.Expeditions.Expeditions.fetchFromDB()),\n        ])\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const RootReducer = reduceReducers(\n  MainReducer,\n  combineReducers<RootState>({\n    Settings: Settings.Reducer,\n    MainContentLoading: MainContentLoading.Reducer,\n    Randomizer: Randomizer.Reducer,\n    TurnOrder: TurnOrder.Reducer,\n    Expeditions: Expeditions.Reducer,\n  })\n)\n","import { combineReducers } from 'redux-loop'\n\nimport * as Expeditions from './Expeditions'\nimport * as Variants from './Variants'\n\nexport type State = {\n  Expeditions: Expeditions.State\n  Variants: Variants.State\n}\n\nexport type Action = Expeditions.Action | Variants.Action\n\nexport const selectors = {\n  Expeditions: Expeditions.selectors,\n  Variants: Variants.selectors,\n}\n\nexport const actions = {\n  Expeditions: Expeditions.actions,\n  Variants: Variants.actions,\n}\n\nexport const initialState = {\n  Expeditions: Expeditions.initialState,\n  Variants: Variants.initialState,\n}\n\nexport const Reducer = combineReducers({\n  Expeditions: Expeditions.Reducer,\n  Variants: Variants.Reducer,\n})\n","import { createSelector } from 'reselect'\n\nimport * as Settings from './Settings'\nimport * as Expeditions from './Expeditions'\nimport { getContentByIdWithLanguageFallback } from './Settings/Expansions/helpers'\n\nexport const getUpgradedBasicNemesisCardsByExpeditionId = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getExpeditionById,\n    Settings.selectors.Expansions.UpgradedBasicNemesisCards.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (expedition, content, languages) =>\n    expedition.upgradedBasicNemesisCards.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getExpeditionSupply = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getExpeditionById,\n    Settings.selectors.Expansions.Cards.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (expedition, content, languages) =>\n    expedition.barracks.supplyIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getExpeditionMages = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getExpeditionById,\n    Settings.selectors.Expansions.Mages.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (expedition, content, languages) =>\n    expedition.barracks.mageIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getExpeditionTreasure = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getExpeditionById,\n    Settings.selectors.Expansions.Treasures.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (expedition, content, languages) =>\n    expedition.barracks.treasureIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getExpeditionUpgradedBasicNemesis = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getExpeditionById,\n    Settings.selectors.Expansions.UpgradedBasicNemesisCards.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (expedition, content, languages) =>\n    expedition.upgradedBasicNemesisCards.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getExpeditionBanishedCards = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getExpeditionById,\n    Settings.selectors.Expansions.Cards.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (expedition, content, languages) =>\n    expedition.banished.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getAvailableNemesisForExpeditionId = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getSettingsSnapshotByExpeditionId,\n    Settings.selectors.Expansions.Nemeses.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (settingsSnapshot, content, languages) =>\n    settingsSnapshot.availableNemesisIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getAvailableCardsForExpeditionId = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getSettingsSnapshotByExpeditionId,\n    Settings.selectors.Expansions.Cards.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (settingsSnapshot, content, languages) =>\n    settingsSnapshot.availableCardIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getAvailableMagesForExpeditionId = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getSettingsSnapshotByExpeditionId,\n    Settings.selectors.Expansions.Mages.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (settingsSnapshot, content, languages) =>\n    settingsSnapshot.availableMageIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getAvailableTreasureForExpeditionId = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getSettingsSnapshotByExpeditionId,\n    Settings.selectors.Expansions.Treasures.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (settingsSnapshot, content, languages) =>\n    settingsSnapshot.availableTreasureIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getAvailableUpgradedBasicNemesisCardsForExpeditionId = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getSettingsSnapshotByExpeditionId,\n    Settings.selectors.Expansions.UpgradedBasicNemesisCards.content.getContent,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (settingsSnapshot, content, languages) =>\n    settingsSnapshot.availableUpgradedBasicNemesisCardIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, content, id)\n    )\n)\n\nexport const getStillAvailableGemIds = createSelector(\n  [\n    getAvailableCardsForExpeditionId,\n    Expeditions.selectors.Expeditions.getSupplyByExpeditionId,\n    Expeditions.selectors.Expeditions.getBanishedByExpeditionId,\n  ],\n  (availableCards, expeditionSupplyIds, banishedIds) =>\n    availableCards\n      .filter(card => card.type === 'Gem')\n      .map(card => card.id)\n      .filter(id => ![...expeditionSupplyIds, ...banishedIds].includes(id))\n)\n\nexport const getStillAvailableGems = createSelector(\n  [\n    Settings.selectors.Expansions.Cards.content.getContent,\n    getStillAvailableGemIds,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (cards, stillAvailableGemIds, languages) =>\n    stillAvailableGemIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, cards, id)\n    )\n)\n\nexport const getStillAvailableRelicIds = createSelector(\n  [\n    getAvailableCardsForExpeditionId,\n    Expeditions.selectors.Expeditions.getSupplyByExpeditionId,\n    Expeditions.selectors.Expeditions.getBanishedByExpeditionId,\n  ],\n  (availableCards, expeditionSupplyIds, banishedIds) =>\n    availableCards\n      .filter(card => card.type === 'Relic')\n      .map(card => card.id)\n      .filter(id => ![...expeditionSupplyIds, ...banishedIds].includes(id))\n)\n\nexport const getStillAvailableRelics = createSelector(\n  [\n    Settings.selectors.Expansions.Cards.content.getContent,\n    getStillAvailableRelicIds,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (cards, stillAvailableRelicIds, languages) =>\n    stillAvailableRelicIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, cards, id)\n    )\n)\n\nexport const getStillAvailableSpellIds = createSelector(\n  [\n    getAvailableCardsForExpeditionId,\n    Expeditions.selectors.Expeditions.getSupplyByExpeditionId,\n    Expeditions.selectors.Expeditions.getBanishedByExpeditionId,\n  ],\n  (availableCards, expeditionSupplyIds, banishedIds) =>\n    availableCards\n      .filter(card => card.type === 'Spell')\n      .map(card => card.id)\n      .filter(id => ![...expeditionSupplyIds, ...banishedIds].includes(id))\n)\n\nexport const getStillAvailableSpells = createSelector(\n  [\n    Settings.selectors.Expansions.Cards.content.getContent,\n    getStillAvailableSpellIds,\n    Settings.selectors.Expansions.Languages.getLanguagesByExpansion,\n  ],\n  (cards, stillAvailableSpellIds, languages) =>\n    stillAvailableSpellIds.map(id =>\n      getContentByIdWithLanguageFallback(languages, cards, id)\n    )\n)\n\nexport const getStillAvailableMageIds = createSelector(\n  [\n    getAvailableMagesForExpeditionId,\n    Expeditions.selectors.Expeditions.getMagesByExpeditionId,\n  ],\n  (availableMages, expeditionMageIds) =>\n    availableMages\n      .map(mage => mage.id)\n      .filter(id => !expeditionMageIds.includes(id))\n)\n\n// Inversion of control -> this is so that we can compose a selector with\n// the result of a consuming one. This selector returns a callback, which can\n// in turn be used inside the consuming selector.\n// We will denote such a callback with a '$' prefix for the consuming parameter\nconst getCallbackForAllTreasuresByLevelFromIdList = createSelector(\n  [Settings.selectors.Expansions.Treasures.getTreasureIdsByTreasureLevel],\n  tByLevel => (treasureIds: string[]) => {\n    return treasureIds.filter(id => tByLevel.includes(id))\n  }\n)\n\nexport const getStillAvailableTreasureIdsByLevel = createSelector(\n  [\n    Expeditions.selectors.Expeditions.getBarracksTreasureIdsByExpeditionId,\n    getAvailableTreasureForExpeditionId,\n    getCallbackForAllTreasuresByLevelFromIdList,\n  ],\n  (treasureIds, allAvailable, $getTreasuresByLevelFrom) => {\n    const stillAvailable = allAvailable\n      .map(t => t.id)\n      .filter(t => !treasureIds.includes(t))\n\n    return $getTreasuresByLevelFrom(stillAvailable)\n  }\n)\n","import styled from 'styled-components/macro'\n\nconst HeaderPlaceholder = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  justify-content: flex-end;\n\n  min-height: 56px;\n\n  @media (min-width: 0px) and (orientation: landscape) {\n    min-height: 48px;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 64px;\n  }\n`\n\nexport default HeaderPlaceholder\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  isLoading: boolean\n}\n\nconst Wrapper = styled('div')<Props>`\n  padding: ${props => props.theme.spacing.unit * 3}px;\n\n  ${props =>\n    props.isLoading\n      ? `\n      text-align: center;\n      padding-top: 150px;\n    `\n      : ''}\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst Card = styled(MuiCard)`\n  margin-top: 24px;\n`\n\nexport default Card\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst H1 = styled(Typography)`\n  font-size: 1.6rem;\n`\n\nexport default H1\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst H2 = styled(Typography)`\n  font-size: 1.4rem;\n`\n\nexport default H2\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst P = styled(Typography)`\n  margin: 10px 0;\n  font-size: 1rem;\n`\n\nexport default P\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst A = styled(Link)`\n  text-decoration: none;\n`\n\nexport default A\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Li = styled(Typography)`\n  font-size: 1rem;\n`\n\nexport default Li\n","import React from 'react'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport Card from '../../atoms/Card'\nimport H1 from '../../atoms/H1'\nimport H2 from '../../atoms/H2'\nimport P from '../../atoms/P'\nimport A from '../../atoms/A'\nimport Li from '../../atoms/Li'\n\nconst About = () => (\n  <Card>\n    <CardContent>\n      <H1>Aeons End Randomizer</H1>\n\n      <a href=\"https://on3iro.github.io/aeons-end-randomizer\">\n        <img\n          alt=\"docs\"\n          src=\"https://img.shields.io/badge/Docs-on3iro.github.io%2Faeons--end--randomizer-success\"\n        />\n      </a>\n\n      <P>\n        <b>Aeons End Randomizer</b> is an unofficial companion app for the\n        popular deck building game Aeons End. It helps you draw random mages,\n        nemeses and supply cards (gems, relics, spells) and also provides a\n        simulated turn order deck. You still need at least one Aeons End\n        standalone box to actually play the game.\n      </P>\n      <P>\n        To get started simply select which expansions you own and would like to\n        use for randomization inside the settings. You can also disable specific\n        cards/mages/nemeses inside the settings.\n        <A to=\"/settings\"> Click here to go to the settings</A>.\n      </P>\n      <H2>Supported Expansions</H2>\n      <P>\n        <b>Aeons End Randomizer</b> supports all expansions released to date as\n        well as all promos. The following expansions are supported:\n      </P>\n      <ul>\n        <Li>Aeons End</Li>\n        <Li>The Depths</Li>\n        <Li>The Nameless</Li>\n        <Li>Aeons End: War Eternal</Li>\n        <Li>The Void</Li>\n        <Li>The Outer Dark</Li>\n        <Li>Aeons End: Legacy</Li>\n        <Li>Buried Secrets</Li>\n        <Li>Aeons End: The New Age</Li>\n        <Li>Into The Wild</Li>\n        <Li>The Ancients</Li>\n        <Li>Shattered Dreams</Li>\n        <Li>Aeons End: Outcasts</Li>\n        <Li>Return To Gravehold</Li>\n        <Li>Southern Village</Li>\n      </ul>\n\n      <H2>Supported Languages</H2>\n      <P>\n        We currently do only support english as language for the user interface.\n        However some content has already been translated into different\n        languages. We will continue supporting multiple languages as they become\n        available in their respective countries and might even start adding\n        UI-translations in the future as well. The following languages are\n        currently (partly) supported:\n      </P>\n      <ul>\n        <Li>English (full support)</Li>\n        <Li>Polish</Li>\n        <Li>French</Li>\n        <Li>German</Li>\n      </ul>\n      <P>\n        <i>\n          If you are interested in contributing language files, please file an\n          issue inside our Github-repository or contact us on discord.\n        </i>\n      </P>\n\n      <H2>User documentation:</H2>\n      <P>\n        You can find our documentation on how to use the randomizer and how to\n        create custom expeditions here:{' '}\n        <a href=\"https://on3iro.github.io/aeons-end-randomizer/\">\n          https://on3iro.github.io/aeons-end-randomizer/\n        </a>\n      </P>\n\n      <H2>Premade expeditions</H2>\n      <P>\n        We've created{' '}\n        <a href=\"https://github.com/on3iro/aeons-end-randomizer/blob/main/expeditions/newAge.json\">\n          \"The New Age\"\n        </a>{' '}\n        as well as{' '}\n        <a href=\"https://github.com/on3iro/aeons-end-randomizer/blob/main/expeditions/intoTheWild.json\">\n          \"Into The Wild\"\n        </a>{' '}\n        as replayable expeditions. To play them, you also need the respective\n        expansions physically. You can then copy and import these expeditions,\n        whenever you create a new expedition from the expedition screen.\n      </P>\n\n      <H2>A note on collected user data</H2>\n      <P>We do not track any user specific data whatsoever.</P>\n      <H2>A note on official imagery</H2>\n      <P>\n        Unfortunately we cannot provide any official imagery. We do not want to\n        get into any legal trouble ;)\n      </P>\n      <H2>Copyright Disclaimer</H2>\n      <P>\n        Aeons End is copyrighted &#169; 2016-2019 by Indie Boards & Cards and\n        ActionPhase Games, all rights reserved.\n      </P>\n      <P>\n        All the used RPG-Icons are from Rpg-Awesome, Copyright (c) 2014, Daniela\n        Howe All rights reserved.\n      </P>\n    </CardContent>\n  </Card>\n)\n\nexport default React.memo(About)\n","import React from 'react'\n\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\n\nconst ExpansionPanelDetails = ({\n  children,\n  ...rest\n}: {\n  children: React.ReactNode\n}) => <MuiExpansionPanelDetails {...rest}>{children}</MuiExpansionPanelDetails>\n\nexport default React.memo(ExpansionPanelDetails)\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\n\nconst ExpansionPanel = styled(MuiExpansionPanel)`\n  border-radius: 4px;\n  margin-bottom: 15px;\n\n  transition: none;\n\n  &:before {\n    display: none;\n  }\n`\n\nExpansionPanel.displayName = 'ExpansionPanel'\n\nconst StyledExpansionPanel = ({\n  children,\n  ...rest\n}: {\n  expanded: boolean | undefined\n  onChange: (...args: any) => void\n  children: React.ReactNode\n}) => <ExpansionPanel {...rest}>{children}</ExpansionPanel>\n\nexport default React.memo(StyledExpansionPanel)\n","import styled from 'styled-components/macro'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\n\nconst StyledExpansionPanelSummary = styled(ExpansionPanelSummary)`\n  min-height: 48px;\n`\n\nexport default StyledExpansionPanelSummary\n","import Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components/macro'\n\nconst Heading = styled(Typography)`\n  font-size: ${props => props.theme.heading.fontSize};\n`\n\nexport default Heading\n","import React from 'react'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport ExpansionPanelDetails from './ExpansionPanelDetails'\nimport StyledExpansionPanel from './StyledExpansionPanel'\nimport StyledExpansionPanelSummary from './StyledExpansionPanelSummary'\n\nimport Heading from 'components/atoms/Heading'\n\ntype Props = {\n  expanded: string | boolean\n  expansionKey: string\n  summary: string\n  children: React.ReactNode\n  expansionHandler: (...args: any) => void\n  [key: string]: any\n}\n\nconst ExpansionPanel = ({\n  children,\n  expanded,\n  expansionHandler,\n  expansionKey,\n  summary,\n  ...rest\n}: Props) => {\n  const isExpanded = expanded === true || expanded === expansionKey\n\n  return (\n    <StyledExpansionPanel expanded={isExpanded} onChange={expansionHandler}>\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />} {...rest}>\n        <Heading>{summary}</Heading>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>{isExpanded && children}</ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n}\n\nexport default React.memo(ExpansionPanel)\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\ntype Props = {\n  label: string\n  children: React.ReactChild\n}\n\nconst ListWrapper = ({ label, children, ...rest }: Props) => (\n  <React.Fragment>\n    <FormLabel {...rest} style={{ marginTop: '24px' }}>\n      {label}\n    </FormLabel>\n    <FormGroup {...rest}>{children}</FormGroup>\n  </React.Fragment>\n)\n\nexport default React.memo(ListWrapper)\n","import styled from 'styled-components'\nimport MuiIconButton from '@material-ui/core/IconButton'\n\nconst IconButton = styled(MuiIconButton)``\n\nexport default IconButton\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport { useHistory } from 'react-router-dom'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport IconButton from 'components/atoms/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\n\nconst Wrapper = styled('div')``\n\ntype Props = {\n  id: string\n  checked: boolean\n  label: string\n  changeHandler: (selection: string) => void\n}\n\nconst CheckboxWithControls = ({ checked, label, changeHandler, id }: Props) => {\n  const history = useHistory()\n\n  return (\n    <Wrapper>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={() => changeHandler(id)}\n            value={id}\n          />\n        }\n        label={label}\n      />\n      <IconButton\n        color=\"primary\"\n        aria-label=\"Edit\"\n        onClick={() => history.push(`/settings/expansions/${id}`)}\n      >\n        <EditIcon />\n      </IconButton>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(CheckboxWithControls)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport CheckboxWithControls from '../../../../../molecules/CheckboxWithControls'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  expansion: types.Expansion\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.Expansions.selected.getIsSelected(\n      state,\n      { expansionId: ownProps.expansion.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ expansion, changeHandler, selected }: Props) => {\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  return (\n    <React.Fragment>\n      <CheckboxWithControls\n        id={expansion.id}\n        checked={selected}\n        label={expansion.name}\n        changeHandler={handleChange}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\n\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (\n  items: types.Expansion[],\n  changeHandler: ChangeHandler\n) =>\n  items.map((item) => (\n    <Checkbox key={item.id} expansion={item} changeHandler={changeHandler} />\n  ))\n\ntype Props = {\n  expansions: types.Expansion[]\n  handleChange: (selection: string) => void\n  label: string\n}\n\nconst ExpansionList = ({ handleChange, expansions, label }: Props) => {\n  return (\n    <React.Fragment>\n      <ListWrapper label={label}>\n        <React.Fragment>\n          {renderCheckboxes(expansions, handleChange)}\n        </React.Fragment>\n      </ListWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(ExpansionList)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport ExpansionList, { ChangeHandler } from './ExpansionList'\n\nconst mapStateToProps = (state: RootState) => ({\n  standalones: selectors.Settings.Expansions.Expansions.getStandaloneExpansions(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    handleChange: ChangeHandler\n  }\n\nconst Standalones = ({ standalones, handleChange }: Props) => (\n  <ExpansionList\n    label=\"Standalone Expansions\"\n    expansions={standalones}\n    handleChange={handleChange}\n  />\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Standalones))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from '../../../../../Redux/Store'\n\nimport ExpansionList, { ChangeHandler } from './ExpansionList'\n\nconst mapStateToProps = (state: RootState) => ({\n  miniExpansions: selectors.Settings.Expansions.Expansions.getMiniExpansions(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    handleChange: ChangeHandler\n  }\n\nconst Standalones = ({ miniExpansions, handleChange }: Props) => (\n  <ExpansionList\n    label=\"Mini Expansions\"\n    expansions={miniExpansions}\n    handleChange={handleChange}\n  />\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Standalones))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from '../../../../../Redux/Store'\n\nimport ExpansionList, { ChangeHandler } from './ExpansionList'\n\nconst mapStateToProps = (state: RootState) => ({\n  promos: selectors.Settings.Expansions.Expansions.getPromos(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    handleChange: ChangeHandler\n  }\n\nconst Standalones = ({ promos, handleChange }: Props) => (\n  <ExpansionList\n    label=\"Promos\"\n    expansions={promos}\n    handleChange={handleChange}\n  />\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Standalones))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport Standalones from './Standalones'\nimport Mini from './Mini'\nimport Promos from './Promos'\n\nconst mapStateToProps = (state: RootState) => ({\n  allSetsSelected: selectors.Settings.Expansions.Expansions.getAllExpansionsSelected(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleSelectAll: actions.Settings.Expansions.Expansions.main.toggleAll,\n  handleChange: actions.Settings.Expansions.Expansions.selected.toggleExpansion,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ActiveSets = ({\n  allSetsSelected,\n  handleSelectAll,\n  handleChange,\n}: Props) => (\n  <FormControl component={'fieldset' as 'div'}>\n    <FormLabel />\n    <FormGroup style={{ marginBottom: '20px' }}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={allSetsSelected}\n            onChange={handleSelectAll}\n            value={allSetsSelected ? 'Deselect All' : 'Select All'}\n          />\n        }\n        label={allSetsSelected ? 'Deselect All' : 'Select All'}\n      />\n    </FormGroup>\n    <Standalones handleChange={handleChange} />\n    <Mini handleChange={handleChange} />\n    <Promos handleChange={handleChange} />\n  </FormControl>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(ActiveSets))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\n\nimport ActiveSets from './ActiveSets'\n\nconst KEY = 'expansions'\n\nconst mapStateToProps = (state: RootState) => ({\n  accordionState: selectors.Settings.Accordions.getAccordionStateById(\n    state,\n    KEY\n  ),\n})\n\nconst mapDispatchToProps = {\n  toggleAccordion: actions.Settings.Accordions.toggle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Expansions = ({ accordionState, toggleAccordion }: Props) => {\n  const expansionHandler = useCallback(() => toggleAccordion(KEY), [\n    toggleAccordion,\n  ])\n\n  return (\n    <ExpansionPanel\n      expanded={accordionState}\n      expansionKey=\"expansions\"\n      expansionHandler={expansionHandler}\n      summary=\"Expansions\"\n      data-test=\"Expansions\"\n    >\n      <ActiveSets />\n    </ExpansionPanel>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Expansions))\n","import React, { useState } from 'react'\n\nconst useExpandedHandling = (defaultValue: boolean | string = false) => {\n  // Expansion handling\n  const [expanded, setExpanded] = useState<boolean | string>(defaultValue)\n\n  const createExpansionHandler = (panel: string) => (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => {\n    const panelExpanded = expanded ? panel : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, createExpansionHandler, setExpanded }\n}\n\nexport default useExpandedHandling\n","import styled from 'styled-components'\n\nconst Wrapper = styled('div')`\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10000;\n  padding: 24px;\n`\n\nexport default Wrapper\n","import styled from 'styled-components'\n\nconst Backdrop = styled('div')`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background: rgb(0, 0, 0, 0.3);\n`\n\nexport default Backdrop\n","import styled from 'styled-components'\n\nconst Content = styled('div')`\n  margin: auto;\n  height: 100%;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  position: relative;\n`\n\nexport default Content\n","import styled from 'styled-components'\n\nconst Header = styled('div')`\n  margin: auto;\n  height: 64px;\n  width: 100%;\n  padding: 0 24px;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`\n\nexport default Header\n","import styled from 'styled-components'\n\nconst Body = styled('div')`\n  height: calc(100% - 64px);\n`\n\nexport default Body\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport H1 from '../../atoms/H1'\n\ntype Props = {\n  themeColor: string\n}\n\n// NOTE: we need to take away additional props, so that they are not passed\n// to DOM elements by MUI Components (we really should get rid of MUI...)\nconst Title = styled(({ themeColor, ...rest }) => <H1 {...rest} />)<Props>`\n  color: ${props => props.themeColor};\n`\n\nexport default Title\n","import styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst CloseButton = styled(IconButton)`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`\n\nexport default CloseButton\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Wrapper from './Wrapper'\nimport Backdrop from './Backdrop'\nimport Content from './Content'\nimport Header from './Header'\nimport Body from './Body'\nimport Title from './Title'\nimport CloseButton from './CloseButton'\n\nimport CloseIcon from '@material-ui/icons/Close'\n\ntype Props = {\n  titleLabel: string\n  titleColor: string\n  children: React.ReactChild\n  closeModal: () => void\n}\n\nconst Modal = ({ titleColor, titleLabel, children, closeModal }: Props) => {\n  const domEl = document.getElementById('modal-root')\n\n  if (!domEl) return null\n\n  return ReactDOM.createPortal(\n    <React.Fragment>\n      <Wrapper data-test=\"modal\">\n        <Backdrop onClick={closeModal} />\n        <Content>\n          <Header>\n            <Title variant=\"h1\" themeColor={titleColor}>\n              {titleLabel}\n            </Title>\n            <CloseButton onClick={closeModal} data-test=\"modal__btn-close\">\n              <CloseIcon />\n            </CloseButton>\n          </Header>\n          <Body>{children}</Body>\n        </Content>\n      </Wrapper>\n    </React.Fragment>,\n    domEl\n  )\n}\n\nexport default React.memo(Modal)\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  hasFooter?: boolean\n}\n\nconst ModalBodyWrapper = styled('div')<Props>`\n  margin: auto;\n  height: ${props => (props.hasFooter ? 'calc(100% - 64px)' : '100%')};\n  width: 100%;\n  padding: 24px;\n  position: relative;\n  overflow-y: auto;\n\n  > *:first-child {\n    margin-top: 0;\n  }\n`\n\nexport default ModalBodyWrapper\n","import styled from 'styled-components/macro'\n\nconst ModalFooterWrapper = styled('div')`\n  margin: auto;\n  height: 64px;\n  width: 100%;\n  padding: 0 24px;\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  margin-top: -1px;\n\n  button {\n    width: 100%;\n  }\n\n  button + button {\n    margin-left: 16px;\n  }\n`\n\nexport default ModalFooterWrapper\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\nimport ModalBodyWrapper from '../atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from '../atoms/ModalFooterWrapper'\n\nconst Prompt = ({\n  yesHandler,\n  noHandler,\n  children,\n}: {\n  yesHandler: () => void\n  noHandler: () => void\n  children?: React.ReactChild\n}) => {\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper hasFooter={true}>{children}</ModalBodyWrapper>\n      <ModalFooterWrapper>\n        <Button\n          onClick={noHandler}\n          size=\"small\"\n          variant=\"contained\"\n          color=\"secondary\"\n          data-test=\"NO\"\n        >\n          No\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={yesHandler}\n          data-test=\"YES\"\n        >\n          Yes\n        </Button>\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(Prompt)\n","import React, { useState } from 'react'\n\nimport Modal from '../components/molecules/Modal'\nimport Prompt from '../components/molecules/Prompt'\n\ntype ModalProps = {\n  titleColor: string\n  titleLabel: string\n  children: React.ReactChild\n  closeCallback?: () => void\n}\n\nexport type RenderModalType = (props: ModalProps) => JSX.Element\n\n// Renders a modal to the modal root and handles the visibility state\n// of this modal.\n//\n// NOTE: Each modal you want to render should use a separate hook!!!\n// Otherwise your modals will share their visibility state which might lead\n// to overlapping and unclosable elements.\nexport const useModal = () => {\n  const [isVisible, setIsVisible] = useState(false)\n  const show = () => setIsVisible(true)\n  const hide = () => setIsVisible(false)\n  const RenderModal: RenderModalType = ({\n    titleColor,\n    titleLabel,\n    children,\n    closeCallback,\n  }) => {\n    const handleClose = () => {\n      hide()\n      if (closeCallback) {\n        closeCallback()\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {isVisible && (\n          <Modal\n            titleColor={titleColor}\n            titleLabel={titleLabel}\n            closeModal={handleClose}\n          >\n            {children}\n          </Modal>\n        )}\n      </React.Fragment>\n    )\n  }\n\n  return {\n    show,\n    hide,\n    RenderModal,\n  }\n}\n\ntype PromptProps = {\n  closeCallback?: () => void\n  children?: React.ReactChild\n  noHandler: () => void\n  titleColor: string\n  titleLabel: string\n  yesHandler: () => void\n}\n\nexport type RenderPromptType = (props: PromptProps) => JSX.Element\n\nexport const usePrompt = () => {\n  const { show, hide, RenderModal } = useModal()\n\n  const RenderPrompt: RenderPromptType = ({\n    children,\n    noHandler,\n    titleColor,\n    titleLabel,\n    yesHandler,\n  }) => (\n    <RenderModal\n      titleColor={titleColor}\n      titleLabel={titleLabel}\n      closeCallback={noHandler}\n    >\n      <Prompt yesHandler={yesHandler} noHandler={noHandler}>\n        {children}\n      </Prompt>\n    </RenderModal>\n  )\n\n  return {\n    show,\n    hide,\n    RenderPrompt,\n  }\n}\n","import React from 'react'\nimport IconButton from 'components/atoms/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\n\ntype Props = {\n  onClick: (...args: any) => void\n}\n\nconst EditButton = ({ onClick, ...rest }: Props) => (\n  <IconButton color=\"primary\" aria-label=\"Edit\" onClick={onClick} {...rest}>\n    <EditIcon />\n  </IconButton>\n)\n\nexport default React.memo(EditButton)\n","import React from 'react'\nimport IconButton from 'components/atoms/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\ntype Props = {\n  onClick: (...args: any) => void\n  className?: string\n}\n\nconst DeleteButton = ({ onClick, className, ...rest }: Props) => (\n  <IconButton\n    color=\"secondary\"\n    aria-label=\"Delete\"\n    onClick={onClick}\n    className={className}\n    {...rest}\n  >\n    <DeleteIcon />\n  </IconButton>\n)\n\nexport default React.memo(DeleteButton)\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  selected: boolean\n}\n\nconst Wrapper = styled('div')<Props>`\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? props.theme.colors.secondary.main\n        : 'rgba(0, 0, 0, 0.12)'};\n  padding: 4px 8px;\n  display: inline-block;\n  width: calc(100% - 16px);\n  margin: 24px 8px 0;\n  cursor: pointer;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\n\nconst TileList = styled('ul')`\n  margin: 0 -4px;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: calc(100% + 8px);\n`\n\nexport default TileList\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst TileListItem = styled('li')<Props>`\n  margin: 4px;\n  min-width: 36px;\n  width: calc(33.33333% - 8px);\n  height: 36px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${props => props.theme.colors.text.secondary};\n  background: ${props => props.theme.colors.cards[props.type].background};\n  font-family: 'Roboto', sans-serif;\n\n  @media all and (min-width: 502px) {\n    width: calc(11.11111% - 8px);\n  }\n`\n\nexport default TileListItem\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype Props = {\n  selected: boolean\n}\n\nconst SupplyName = styled(Typography)<Props>`\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.secondary.main\n      : props.theme.colors.text.secondary};\n`\n\nexport default SupplyName\n","import React from 'react'\nimport { IMarketSetup } from 'aer-types/types'\n\nimport { getOperationString } from '../../../Redux/helpers'\n\nimport Wrapper from './Wrapper'\nimport TileList from './TileList'\nimport TileListItem from './TileListItem'\nimport SupplyName from './SupplyName'\n\n// FIXME tiles are untyped!!!\nconst renderMarketSetupItems = (tiles: any) =>\n  tiles.map((tile: any, index: number) => (\n    <TileListItem key={index} type={tile.type.toLowerCase()}>\n      {getOperationString(tile.operation, tile.values, tile.threshold)}\n    </TileListItem>\n  ))\n\ntype Props = {\n  clickHandler: (event: any) => void\n  setup: IMarketSetup\n  selected?: boolean\n  showName?: boolean\n  className?: string\n}\n\nconst SupplyPreview = ({\n  clickHandler,\n  setup,\n  selected = false,\n  showName = true,\n  className,\n}: Props) => {\n  if (!setup.tiles || setup.tiles.length < 1) {\n    return null\n  }\n\n  return (\n    <Wrapper\n      className={className}\n      key={setup.id}\n      onClick={clickHandler}\n      data-value={setup.id}\n      selected={selected}\n    >\n      <TileList>{renderMarketSetupItems(setup.tiles)}</TileList>\n      {showName ? (\n        <SupplyName variant=\"caption\" selected={selected}>\n          {setup.name}\n        </SupplyName>\n      ) : null}\n    </Wrapper>\n  )\n}\n\nexport default React.memo(SupplyPreview)\n","import styled from 'styled-components'\n\nimport SupplyPreview from '../../../../molecules/SupplyPreview'\n\nconst PreviewWrapper = styled(SupplyPreview)`\n  width: 100%;\n  margin: 0;\n`\n\nexport default PreviewWrapper\n","import styled from 'styled-components'\n\nconst Wrapper = styled('div')`\n  margin-top: 8px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nexport default Wrapper\n","import React, { useCallback } from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { IMarketSetup } from 'aer-types/types'\n\nimport PreviewWrapper from './PreviewWrapper'\nimport Wrapper from './Wrapper'\n\ntype Props = {\n  changeHandler: (selection: string) => void\n  setup: IMarketSetup\n  children?: React.ReactNode\n}\n\nconst CheckboxWithPreview = ({\n  changeHandler,\n  setup,\n  children,\n  ...rest\n}: Props) => {\n  const handleSelection = useCallback(() => {\n    changeHandler(setup.id)\n  }, [changeHandler, setup.id])\n\n  return (\n    <Wrapper {...rest}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={setup.active}\n            onChange={handleSelection}\n            value={setup.id}\n          />\n        }\n        label={setup.name}\n      />\n      {children}\n      {setup ? (\n        <PreviewWrapper\n          clickHandler={handleSelection}\n          setup={setup}\n          showName={false}\n        />\n      ) : null}\n    </Wrapper>\n  )\n}\n\nexport default React.memo(CheckboxWithPreview)\n","import styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\nconst InputField = styled(TextField)`\n  margin-top: 0;\n  margin-bottom: 24px;\n`\n\nexport default InputField\n","import React from 'react'\nimport styled from 'styled-components'\nimport MuiSelect from '@material-ui/core/Select'\nimport MuiFormControl from '@material-ui/core/FormControl'\n\nconst Wrapper = styled(MuiFormControl)`\n  width: 50%;\n`\n\nconst Select = styled(MuiSelect)`\n  margin: 0 8px 16px;\n`\n\nconst SelectField = (props: any) => (\n  <Wrapper>\n    <Select {...props} />\n  </Wrapper>\n)\n\nexport default React.memo(SelectField)\n","import styled from 'styled-components'\n\nconst SelectFieldsWrapper = styled('div')`\n  display: flex;\n  margin: 0 -8px;\n`\n\nexport default SelectFieldsWrapper\n","import styled from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\ntype Props = {\n  type: types.CardType\n}\n\nconst BluePrintWrapper = styled('div')<Props>`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: ${(props) =>\n    props.type === 'EMPTY'\n      ? '#ecf0f1'\n      : props.theme.colors.cards[props.type.toLowerCase()].background};\n  padding: 30px 20px 15px;\n  margin: 8px 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nBluePrintWrapper.displayName = 'BluePrintWrapper'\n\nexport default BluePrintWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport IconButton from 'components/atoms/IconButton'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst CancelButton = (props: any) => (\n  <IconButton\n    className={props.className}\n    color=\"secondary\"\n    aria-label=\"Cancel\"\n    onClick={props.onClick}\n  >\n    <CancelIcon />\n  </IconButton>\n)\n\nconst StyledCancelButton = styled(React.memo(CancelButton))`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n`\n\nexport default StyledCancelButton\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport * as types from 'aer-types/types'\n\nimport InputField from './InputField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport SelectField from './SelectField'\nimport SelectFieldsWrapper from './SelectFieldsWrapper'\nimport BluePrintWrapper from './BluePrintWrapper'\nimport CancelButton from './CancelButton'\n\ntype Props = {\n  bluePrint: types.IBluePrint\n  dispatch: Function\n}\n\n// TODO refactor this file!\n\nconst isThresholdOperation = (operation: types.Operation) =>\n  types.THRESHOLD_OPERATIONS.includes(operation)\n\nconst renderInputFieldsByOperation = (\n  bluePrint: types.IBluePrint,\n  dispatch: Function\n) => {\n  if (isThresholdOperation(bluePrint.operation)) {\n    return (\n      <FormControl>\n        <InputField\n          id={`threshold-${bluePrint.id}`}\n          label=\"Threshold\"\n          value={bluePrint.threshold || ''}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: string }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                threshold: parseInt(e.target.value || '0'),\n              },\n            })\n          }\n          type=\"number\"\n          margin=\"normal\"\n          data-test=\"input-threshold\"\n        />\n      </FormControl>\n    )\n  }\n\n  // TODO allow more the two fields to be combined with logical or\n  if (bluePrint.operation === 'OR') {\n    const valueA =\n      bluePrint && bluePrint.values && bluePrint.values[0]\n        ? bluePrint.values[0].toString()\n        : ''\n    const valueB =\n      bluePrint && bluePrint.values && bluePrint.values[1]\n        ? bluePrint.values[1].toString()\n        : ''\n\n    return (\n      <React.Fragment>\n        <FormControl>\n          <InputField\n            id={`value-1-${bluePrint.id}`}\n            label=\"Value 1\"\n            value={valueA}\n            onChange={(\n              e: React.ChangeEvent<{ name?: string; value: string }>\n            ) =>\n              dispatch({\n                type: 'UPDATE',\n                payload: {\n                  ...bluePrint,\n                  values: [parseInt(e.target.value || '0'), parseInt(valueB)],\n                },\n              })\n            }\n            type=\"number\"\n            margin=\"normal\"\n            data-test=\"input-value-1\"\n          />\n        </FormControl>\n        <FormControl>\n          <InputField\n            id={`value-2-${bluePrint.id}`}\n            label=\"Value 2\"\n            value={valueB}\n            onChange={(\n              e: React.ChangeEvent<{ name?: string; value: string }>\n            ) =>\n              dispatch({\n                type: 'UPDATE',\n                payload: {\n                  ...bluePrint,\n                  values: [parseInt(valueA), parseInt(e.target.value || '0')],\n                },\n              })\n            }\n            type=\"number\"\n            margin=\"normal\"\n            data-test=\"input-value-2\"\n          />\n        </FormControl>\n      </React.Fragment>\n    )\n  }\n\n  return null\n}\n\nconst BluePrint = ({ bluePrint, dispatch, ...rest }: Props) => {\n  return (\n    <BluePrintWrapper type={bluePrint.type} {...rest}>\n      <CancelButton\n        onClick={() =>\n          dispatch({\n            type: 'DELETE',\n            payload: {\n              id: bluePrint.id,\n            },\n          })\n        }\n      />\n      <SelectFieldsWrapper>\n        <SelectField\n          key=\"type\"\n          value={bluePrint.type}\n          onChange={(\n            e: React.ChangeEvent<{ name?: string; value: unknown }>\n          ) => {\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                type: e.target.value,\n              },\n            })\n          }}\n          inputProps={{\n            name: 'type',\n            id: `type-${bluePrint.id}`,\n          }}\n          data-test=\"select-type\"\n        >\n          {types.CARD_TYPES.filter((TYPE) => TYPE !== 'EMPTY').map((TYPE) => (\n            <MenuItem key={TYPE} value={TYPE} data-test=\"select-type-menu-item\">\n              {TYPE}\n            </MenuItem>\n          ))}\n        </SelectField>\n        <SelectField\n          key=\"operation\"\n          value={bluePrint.operation}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                operation: e.target.value,\n              },\n            })\n          }\n          inputProps={{\n            name: 'operation',\n            id: `operation-${bluePrint.id}`,\n          }}\n          data-test=\"select-operation\"\n        >\n          {types.SUPPLY_OPERATIONS.filter(\n            (OPERATION) => OPERATION !== 'NoOp'\n          ).map((OPERATION) => (\n            <MenuItem\n              key={OPERATION}\n              value={OPERATION}\n              data-test=\"select-operation-menu-item\"\n            >\n              {OPERATION}\n            </MenuItem>\n          ))}\n        </SelectField>\n      </SelectFieldsWrapper>\n      {renderInputFieldsByOperation(bluePrint, dispatch)}\n    </BluePrintWrapper>\n  )\n}\n\nexport default React.memo(BluePrint)\n","import styled from 'styled-components'\n\nconst ListWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n`\n\nexport default ListWrapper\n","import React from 'react'\nimport * as types from 'aer-types/types'\nimport Button from '@material-ui/core/Button'\n\nimport BluePrint from './BluePrint'\nimport ListWrapper from './ListWrapper'\n\ntype Props = {\n  bluePrintList: types.Slot[]\n  dispatch: Function\n}\n\nconst BluePrintList = ({ bluePrintList, dispatch }: Props) => {\n  return (\n    <ListWrapper>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => dispatch({ type: 'ADD' })}\n        data-test=\"btn-add-supply-tile\"\n      >\n        Add Supply tile\n      </Button>\n      {bluePrintList.map((bluePrint) => (\n        <BluePrint\n          key={bluePrint.id}\n          bluePrint={bluePrint}\n          dispatch={dispatch}\n          data-test={'blueprint'}\n        />\n      ))}\n    </ListWrapper>\n  )\n}\n\nexport default React.memo(BluePrintList)\n","import styled from 'styled-components'\n\nconst MainControlsWrapper = styled('div')`\n  display: flex;\n  align-items: baseline;\n`\n\nexport default MainControlsWrapper\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nimport * as types from 'aer-types/types'\n\nimport InputField from './InputField'\nimport MainControlsWrapper from './MainControlsWrapper'\n\ntype Props = {\n  bluePrintList: types.IBluePrint[]\n  cancelEdit: Function\n  setup: types.IMarketSetup\n  setupName: string\n  setSetupName: Function\n  saveCustomSetup: Function\n}\n\nconst MainControls = ({\n  bluePrintList,\n  cancelEdit,\n  setup,\n  setupName,\n  setSetupName,\n  saveCustomSetup,\n}: Props) => {\n  return (\n    <MainControlsWrapper>\n      <InputField\n        id=\"setup-name\"\n        label=\"Setup Name\"\n        placeholder=\"Setup Name\"\n        value={setupName}\n        onChange={(e) => setSetupName(e.currentTarget.value)}\n        margin=\"normal\"\n        data-test=\"input-name\"\n      />\n      <IconButton\n        color=\"primary\"\n        aria-label=\"Save\"\n        onClick={() =>\n          saveCustomSetup({ ...setup, name: setupName, tiles: bluePrintList })\n        }\n        data-test=\"btn-save-custom-supply-setup\"\n      >\n        <SaveIcon />\n      </IconButton>\n      <IconButton\n        color=\"secondary\"\n        aria-label=\"Cancel\"\n        onClick={() => cancelEdit(setup.id)}\n        data-test=\"btn-cancel-edit-custom-supply-setup\"\n      >\n        <CancelIcon />\n      </IconButton>\n    </MainControlsWrapper>\n  )\n}\n\nexport default React.memo(MainControls)\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n\n  padding: 16px;\n  margin: 8px 0;\n`\n\nexport default Wrapper\n","import React, { useState, useReducer, useCallback } from 'react'\nimport shortid from 'shortid'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { RootState, actions } from 'Redux/Store'\n\nimport BluePrintList from './BluePrintList'\nimport MainControls from './MainControls'\nimport Wrapper from './Wrapper'\n\ntype BluePrintState = { [id: string]: types.IBluePrint }\ntype Action = { type: string; payload?: any }\n\nconst initialStateFromTiles = (tiles: types.IBluePrint[]) =>\n  tiles.reduce<BluePrintState>((acc, tile) => {\n    const id = tile.id || shortid.generate()\n    return { ...acc, [id]: { ...tile, id } }\n  }, {})\n\nconst bluePrintReducer = (\n  state: BluePrintState,\n  action: Action\n): BluePrintState => {\n  switch (action.type) {\n    case 'ADD': {\n      const id = shortid.generate()\n      return {\n        ...state,\n        [id]: {\n          id,\n          type: 'ANY',\n          operation: 'ANY',\n        },\n      }\n    }\n\n    case 'UPDATE': {\n      const blueprint = action.payload\n\n      return { ...state, [blueprint.id]: { ...blueprint } }\n    }\n\n    case 'DELETE': {\n      const { id } = action.payload\n      const { [id]: blueprint, ...rest } = state\n\n      return { ...rest }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  cancelEdit: actions.Settings.SupplySetups.cancelEdit,\n  saveCustomSetup: actions.Settings.SupplySetups.saveCustomSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    setup: types.IMarketSetup\n    saveCallback: () => void\n  }\n\nconst CustomSetupEdit = ({\n  setup,\n  cancelEdit,\n  saveCustomSetup,\n  saveCallback,\n}: Props) => {\n  const [setupName, setSetupName] = useState(setup.name || '')\n  const [bluePrints, dispatch] = useReducer(\n    bluePrintReducer,\n    setup.tiles,\n    initialStateFromTiles\n  )\n\n  // We reverse the list, so that the last added tile is shown on top\n  const bluePrintList = Object.values(bluePrints).reverse()\n\n  const handleSave = useCallback(\n    (setup) => {\n      saveCustomSetup(setup)\n      saveCallback()\n    },\n    [saveCallback, saveCustomSetup]\n  )\n\n  return (\n    <Wrapper>\n      <MainControls\n        bluePrintList={bluePrintList}\n        cancelEdit={cancelEdit}\n        setup={setup}\n        setupName={setupName}\n        setSetupName={setSetupName}\n        saveCustomSetup={handleSave}\n      />\n      <BluePrintList bluePrintList={bluePrintList} dispatch={dispatch} />\n    </Wrapper>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(CustomSetupEdit))\n","import styled from 'styled-components'\n\nconst CheckboxWithPreviewControls = styled('div')`\n  float: right;\n`\n\nexport default CheckboxWithPreviewControls\n","import React, { useCallback } from 'react'\n\nimport * as types from 'aer-types/types'\nimport { useModal, usePrompt } from 'hooks/useModal'\n\nimport EditButton from 'components/molecules/EditButton'\nimport DeleteButton from 'components/molecules/DeleteButton'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport P from 'components/atoms/P'\n\nimport CheckboxWithPreview from '../CheckboxWithPreview'\nimport CustomSetupEdit from '../CustomSetupEdit'\nimport CheckboxWithPreviewControls from './CheckboxWithPreviewControls'\n\ntype Props = {\n  setup: types.IMarketSetup\n  changeHandler: (id: string) => void\n  editSetup: (id: string) => void\n  deleteSetup: (id: string) => void\n  cancelEdit: (id: string) => void\n}\n\nconst CustomSetupCheckbox = ({\n  setup,\n  changeHandler,\n  editSetup,\n  deleteSetup,\n  cancelEdit,\n}: Props) => {\n  const {\n    show: showEditModal,\n    hide: hideEditModal,\n    RenderModal: RenderEditModal,\n  } = useModal()\n  const {\n    show: showDeletionDialog,\n    hide: hideDeletionDialog,\n    RenderPrompt: RenderDeletionPrompt,\n  } = usePrompt()\n  const modalTitle = 'Edit Setup'\n\n  const handleEdit = useCallback(() => {\n    showEditModal()\n    editSetup(setup.id)\n  }, [setup.id, showEditModal, editSetup])\n\n  const handleEditCancel = useCallback(() => cancelEdit(setup.id), [\n    cancelEdit,\n    setup.id,\n  ])\n\n  const openDeletionDialog = useCallback(() => {\n    showDeletionDialog()\n  }, [showDeletionDialog])\n\n  const handleDelete = useCallback(() => {\n    deleteSetup(setup.id)\n    hideDeletionDialog()\n  }, [setup.id, deleteSetup, hideDeletionDialog])\n\n  return (\n    <CheckboxWithPreview\n      setup={setup}\n      changeHandler={changeHandler}\n      data-test=\"supply-setup-wrapper\"\n    >\n      <CheckboxWithPreviewControls>\n        <EditButton\n          onClick={handleEdit}\n          data-test=\"btn-edit-custom-supply-setup\"\n        />\n        <DeleteButton\n          onClick={openDeletionDialog}\n          data-test=\"btn-delete-custom-supply-setup\"\n        />\n      </CheckboxWithPreviewControls>\n      <RenderEditModal\n        titleColor=\"#333\"\n        titleLabel={modalTitle}\n        closeCallback={handleEditCancel}\n      >\n        <ModalBodyWrapper>\n          <CustomSetupEdit setup={setup} saveCallback={hideEditModal} />\n        </ModalBodyWrapper>\n      </RenderEditModal>\n      <RenderDeletionPrompt\n        yesHandler={handleDelete}\n        noHandler={hideDeletionDialog}\n        titleColor=\"#333\"\n        titleLabel=\"Delete Setup\"\n      >\n        <P>Would you really like to delete setup: \"{setup.name}\"?</P>\n      </RenderDeletionPrompt>\n    </CheckboxWithPreview>\n  )\n}\n\nexport default React.memo(CustomSetupCheckbox)\n","import React, { useState, useCallback } from 'react'\nimport shortid from 'shortid'\nimport Button from '@material-ui/core/Button'\n\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\n\nimport CustomSetupEdit from '../CustomSetupEdit'\n\nconst createSetup = (): types.IMarketSetup => {\n  return {\n    id: shortid.generate(),\n    name: '',\n    type: 'custom',\n    active: false,\n    tiles: [],\n    isDirty: true,\n    isNew: true,\n  }\n}\n\nconst SetupCreation = () => {\n  const [newSetup, setNewSetup] = useState<types.IMarketSetup | null>(null)\n  const {\n    show: showEditModal,\n    hide: hideEditModal,\n    RenderModal: RenderEditModal,\n  } = useModal()\n\n  const handleCreation = useCallback(() => {\n    setNewSetup(createSetup())\n    showEditModal()\n  }, [setNewSetup, showEditModal])\n\n  const handleEditCancel = useCallback(() => {\n    hideEditModal()\n  }, [hideEditModal])\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={{ marginTop: '16px' }}\n        onClick={handleCreation}\n        data-test=\"btn-add-custom-supply-setup\"\n      >\n        Add\n      </Button>\n      <RenderEditModal\n        titleColor=\"#333\"\n        titleLabel=\"New Setup\"\n        closeCallback={handleEditCancel}\n      >\n        <ModalBodyWrapper>\n          {newSetup ? (\n            <CustomSetupEdit setup={newSetup} saveCallback={hideEditModal} />\n          ) : (\n            'Error'\n          )}\n        </ModalBodyWrapper>\n      </RenderEditModal>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(SetupCreation)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\n\nimport CustomSetupCheckbox from './Checkbox'\nimport SetupCreation from './SetupCreation'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = ({\n  customSetups,\n  handleSelection,\n  editSetup,\n  deleteSetup,\n  cancelEdit,\n}: {\n  customSetups: types.IMarketSetup[]\n  handleSelection: ChangeHandler\n  editSetup: ChangeHandler\n  deleteSetup: ChangeHandler\n  cancelEdit: ChangeHandler\n}) =>\n  customSetups.map((setup) => (\n    <CustomSetupCheckbox\n      key={setup.id}\n      setup={setup}\n      changeHandler={handleSelection}\n      editSetup={editSetup}\n      deleteSetup={deleteSetup}\n      cancelEdit={cancelEdit}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  customSetups: selectors.Settings.SupplySetups.getCustomList(state),\n})\n\nconst mapDispatchToProps = {\n  toggleSetup: actions.Settings.SupplySetups.toggleSetup,\n  editSetup: actions.Settings.SupplySetups.editCustomSetup,\n  deleteSetup: actions.Settings.SupplySetups.deleteCustomSetup,\n  cancelEdit: actions.Settings.SupplySetups.cancelEdit,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst CustomSetups = ({\n  customSetups,\n  toggleSetup,\n  editSetup,\n  deleteSetup,\n  cancelEdit,\n}: Props) => {\n  const handleSelection = useCallback((item) => toggleSetup(item, 'Custom'), [\n    toggleSetup,\n  ])\n\n  return (\n    <ListWrapper label=\"Custom Setups\">\n      <React.Fragment>\n        <React.Fragment>\n          <SetupCreation />\n          {renderCheckboxes({\n            customSetups,\n            handleSelection,\n            editSetup,\n            deleteSetup,\n            cancelEdit,\n          })}\n        </React.Fragment>\n      </React.Fragment>\n    </ListWrapper>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(CustomSetups))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { IMarketSetup } from 'aer-types/types'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\n\nimport CheckboxWithPreview from '../CheckboxWithPreview'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (\n  items: IMarketSetup[],\n  changeHandler: ChangeHandler\n) =>\n  items.map((item) => (\n    <CheckboxWithPreview\n      key={item.id}\n      setup={item}\n      changeHandler={changeHandler}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  predefinedSetups: selectors.Settings.SupplySetups.getPredefinedList(state),\n})\n\nconst mapDispatchToProps = {\n  toggleSetup: actions.Settings.SupplySetups.toggleSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst PredefinedSetups = ({ predefinedSetups, toggleSetup }: Props) => {\n  const handleSelection = useCallback(\n    (id: string) => {\n      toggleSetup(id, 'Predefined')\n    },\n    [toggleSetup]\n  )\n\n  return (\n    <React.Fragment>\n      <ListWrapper label=\"Predefined Setups\">\n        <React.Fragment>\n          {renderCheckboxes(predefinedSetups, handleSelection)}\n        </React.Fragment>\n      </ListWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(PredefinedSetups))\n","import styled from 'styled-components'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst SetupSelectionWrapper = styled(FormControl)`\n  width: 100%;\n`\n\nexport default SetupSelectionWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport { RootState, actions, selectors } from '../../../../../Redux/Store'\n\nimport CustomSetups from '../CustomSetups'\nimport PredefinedSetups from '../PredefinedSetups'\nimport SetupSelectionWrapper from './Wrapper'\n\nconst mapStateToProps = (state: RootState) => ({\n  allSetsSelected: selectors.Settings.SupplySetups.getAllSetsSelected(state),\n})\n\nconst mapDispatchToProps = {\n  toggleAll: actions.Settings.SupplySetups.toggleAll,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst SetupSelection = ({ allSetsSelected, toggleAll }: Props) => {\n  return (\n    <SetupSelectionWrapper component={'fieldset' as 'div'}>\n      <FormLabel />\n      <FormGroup data-test=\"supply-select-all\">\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={allSetsSelected}\n              onChange={toggleAll}\n              value={allSetsSelected ? 'Deselect All' : 'Select All'}\n            />\n          }\n          label={allSetsSelected ? 'Deselect All' : 'Select All'}\n        />\n      </FormGroup>\n      <CustomSetups />\n      <PredefinedSetups />\n    </SetupSelectionWrapper>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(SetupSelection))\n","import React from 'react'\n\nimport useExpansionHandling from 'hooks/useExpansionHandling'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\n\nimport SetupSelection from './SetupSelection'\n\nconst Supply = () => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n  const expansionKey = 'supplySets'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  return (\n    <ExpansionPanel\n      expanded={expanded}\n      expansionHandler={expansionHandler}\n      expansionKey={expansionKey}\n      summary=\"Supply Setups\"\n      data-test=\"SupplySetups\"\n    >\n      <SetupSelection />\n    </ExpansionPanel>\n  )\n}\n\nexport default React.memo(Supply)\n","import React from 'react'\n\nimport Expansions from './Expansions'\nimport Supply from './Supply'\n\nconst Settings = () => (\n  <React.Fragment>\n    <Expansions />\n    <Supply />\n  </React.Fragment>\n)\n\nexport default React.memo(Settings)\n","import AERData from 'aer-data/src/index'\n\nexport const LANGUAGE_KEYS = Object.keys(AERData.normalizedData)\nexport type LanguageKey = keyof typeof AERData.normalizedData\n","import styled from 'styled-components'\nimport A from '../../atoms/A'\n\nconst Link = styled(A)`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.colors.primary.main};\n  font-size: 0.875rem;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  letter-spacing: 0.01071em;\n  margin-left: -6px;\n\n  &:hover {\n    color: ${props => props.theme.colors.primary.light};\n  }\n`\n\nexport default Link\n","import React from 'react'\n\nimport Link from './Link'\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\ntype Props = {\n  to: string\n  label: string\n}\n\nconst BackLink = ({ to, label, ...rest }: Props) => (\n  <Link to={to} {...rest}>\n    <ChevronLeftIcon /> {label}\n  </Link>\n)\n\nexport default React.memo(BackLink)\n","import React from 'react'\nimport styled from 'styled-components'\nimport MuiSelect from '@material-ui/core/Select'\nimport MuiFormControl from '@material-ui/core/FormControl'\n\nexport const Wrapper = styled(MuiFormControl)`\n  width: 50%;\n`\n\nexport const Select = styled(MuiSelect)`\n  margin: 0 8px 16px;\n`\n\nconst SelectField = (props: any) => (\n  <Wrapper>\n    <Select {...props} />\n  </Wrapper>\n)\n\nexport default React.memo(SelectField)\n","import styled from 'styled-components/macro'\n\nconst AdditionalInfo = styled('span')`\n  color: #888;\n`\n\nexport default AdditionalInfo\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n  inCheckboxList?: boolean\n}\n\n// TODO refactor\n// we should probably have a keywords molecule instead which would also take care\n// of the rendering of keywords. This component here would then just be its wrapper\n// div.\nconst Keywords = styled(({ inCheckboxList, ...rest }) => <div {...rest} />)<\n  Props\n>`\n  margin: ${props => (props.inCheckboxList ? '0 -4px 16px 28px' : '16px -4px')};\n`\n\nexport default Keywords\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { withTheme } from 'styled-components/macro'\n\ntype Props = {\n  theme: any\n}\n\nconst Keyword = styled(({ theme, ...rest }) => <span {...rest} />)<Props>`\n  background: ${props => props.theme.colors.keywordBg};\n  padding: 4px 8px;\n  margin: 4px;\n  border-radius: 12px;\n  height: 24px;\n  min-width: 64px;\n\n  display: inline-block;\n  text-align: center;\n\n  color: ${props => props.theme.colors.text.primary};\n  font-size: 0.875rem;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n`\n\nexport default withTheme(Keyword)\n","import React from 'react'\n\nimport AdditionalInfo from './AdditionalInfo'\n\ntype Props = {\n  label: string\n  additionalInfo: string\n}\n\nconst Label = ({ label, additionalInfo }: Props) => {\n  return (\n    <>\n      <span>{label}</span>\n      <AdditionalInfo>{additionalInfo}</AdditionalInfo>\n    </>\n  )\n}\n\nexport default React.memo(Label)\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Keywords from '../atoms/Keywords'\nimport Keyword from '../atoms/Keyword'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport IconButton from 'components/atoms/IconButton'\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined'\nimport Label from './Label'\n\nexport const Wrapper = styled('div')``\n\ntype Props = {\n  id: string\n  checked: boolean\n  label: string\n  changeHandler: (selection: string) => void\n  showDetails: (id: string) => void\n  keywords?: string[]\n  type?: string\n}\n\nconst CheckboxWithDetails = ({\n  checked,\n  label,\n  changeHandler,\n  showDetails,\n  keywords,\n  id,\n}: Props) => {\n  const handleChange = useCallback(() => changeHandler(id), [id, changeHandler])\n  const handleDetails = useCallback(() => showDetails(id), [id, showDetails])\n  return (\n    <Wrapper>\n      <FormControlLabel\n        control={\n          <Checkbox checked={checked} onChange={handleChange} value={id} />\n        }\n        label={<Label label={label} additionalInfo={` (#Id: ${id})`} />}\n      />\n      <IconButton\n        color=\"primary\"\n        aria-label=\"Show details\"\n        onClick={handleDetails}\n      >\n        <VisibilityOutlinedIcon />\n      </IconButton>\n      {keywords && keywords.length >= 1 ? (\n        <Keywords inCheckboxList={true}>\n          {keywords.map(keyword => (\n            <Keyword key={keyword}>{keyword}</Keyword>\n          ))}\n        </Keywords>\n      ) : null}\n    </Wrapper>\n  )\n}\n\nexport default React.memo(CheckboxWithDetails)\n","import styled from 'styled-components'\n\nimport Link from 'components/molecules/BackLink/Link'\nimport AdditionalInfo from 'components/molecules/AdditionalInfo'\nimport { Wrapper as CheckboxWithDetailsWrapper } from 'components/molecules/CheckboxWithDetails'\nimport { Select } from 'components/atoms/SelectField'\n\nconst Wrapper = styled('div')`\n  ${Link} {\n    margin-bottom: 24px;\n  }\n\n  ${Select} {\n    margin: 16px 0 0;\n  }\n\n  ${AdditionalInfo} {\n    display: block;\n  }\n\n  ${CheckboxWithDetailsWrapper} {\n    margin: 4px 0;\n    display: flex;\n  }\n`\n\nexport default Wrapper\n","import styled from 'styled-components'\n\nimport { Wrapper } from 'components/atoms/SelectField'\nimport IconButton from 'components/atoms/IconButton'\n\nconst SelectWithTooltipWrapper = styled('div')`\n  display: flex;\n  margin-bottom: 32px;\n  align-items: center;\n\n  ${Wrapper} {\n    width: 100%;\n  }\n\n  ${IconButton} {\n    margin-left: 16px;\n  }\n`\n\nexport default SelectWithTooltipWrapper\n","import styled from 'styled-components/macro'\nimport ListItem from '@material-ui/core/ListItem'\n\nconst Wrapper = styled(ListItem)`\n  padding: 0;\n  display: flex;\n  flex-flow: row wrap;\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Info = styled(Typography)`\n  display: inline-block;\n`\n\nexport default Info\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst InfoLabel = styled(Typography)`\n  margin-right: 8px;\n  display: inline-block;\n`\n\nexport default InfoLabel\n","import React from 'react'\n\nimport Wrapper from './Wrapper'\nimport Info from './Info'\nimport InfoLabel from './InfoLabel'\n\ntype Props = {\n  label: string\n  info: string\n}\n\nconst InfoItem = ({ label, info, ...rest }: Props) => (\n  <Wrapper {...rest}>\n    <InfoLabel color=\"textSecondary\">{label}:</InfoLabel>\n    <Info component=\"span\">{info}</Info>\n  </Wrapper>\n)\n\nexport default React.memo(InfoItem)\n","import React from 'react'\nimport styled from 'styled-components'\nimport H2 from './H2'\n\ntype Props = {\n  themeColor: string\n}\n\nconst SectionHeadline = styled(({ themeColor, ...rest }) => <H2 {...rest} />)<\n  Props\n>`\n  color: ${props => props.themeColor};\n  font-weight: 300;\n  margin: 16px 0 8px;\n\n  + div {\n    margin-top: 0;\n  }\n`\n\nexport default SectionHeadline\n","import styled from 'styled-components/macro'\n\nconst AdditionalInfo = styled('div')`\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n\n  p {\n    color: rgba(0, 0, 0, 0.87);\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    letter-spacing: 0.01071em;\n  }\n`\n\nexport default AdditionalInfo\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport { Nemesis } from 'aer-types/types'\nimport { RootState, selectors } from 'Redux/Store'\n\nimport InfoItem from '../InfoItem'\nimport SectionHeadline from 'components/atoms/SectionHeadline'\n\nimport AdditionalInfo from './AdditionalInfo'\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const expansion = ownProps.nemesis\n    ? selectors.Settings.Expansions.Expansions.content.getExpansionById(state, {\n        expansionId: ownProps.nemesis.expansion,\n      })\n    : null\n\n  return {\n    expansion,\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype OwnProps = {\n  nemesis?: Nemesis\n  theme: any\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst NemesisInformation = ({ nemesis, expansion, theme }: Props) => {\n  if (!expansion || !nemesis) {\n    return null\n  }\n\n  return (\n    <React.Fragment>\n      <InfoItem label=\"Expansion\" info={expansion.name} />\n      <InfoItem label=\"Health\" info={nemesis.health.toString()} />\n      <InfoItem label=\"Difficulty\" info={nemesis.difficulty.toString()} />\n      <InfoItem\n        label=\"Expedition tier\"\n        info={nemesis.expeditionRating.toString()}\n      />\n      {nemesis.additionalInfo ? (\n        <React.Fragment>\n          <SectionHeadline\n            themeColor={theme.colors.turnOrderCards['nemesis'].normal}\n          >\n            Additional Information\n          </SectionHeadline>\n          <AdditionalInfo\n            dangerouslySetInnerHTML={{\n              __html: nemesis.additionalInfo,\n            }}\n          />\n        </React.Fragment>\n      ) : null}\n    </React.Fragment>\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, mapDispatchToProps)(React.memo(NemesisInformation))\n)\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport { RenderModalType } from 'hooks/useModal'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\n\nimport NemesisInformation from '../NemesisInformation'\n\ntype OwnProps = {\n  id: string\n  theme: any\n  RenderModal: RenderModalType\n}\n\n// FIXME\n// unfortunately ownProps has to have any type currently.\n// This is probably due to a typscript shortcoming, which is unable to\n// unwrap withTheme() and connect() at once.\nconst mapStateToProps = (state: RootState, ownProps: any) => ({\n  nemesis: ownProps.id\n    ? selectors.Settings.Expansions.Nemeses.content.getById(state, ownProps)\n    : undefined,\n})\n\ntype Props = ReturnType<typeof mapStateToProps> & OwnProps\n\nconst NemesisModal = ({ theme, RenderModal, nemesis }: Props) => {\n  if (!nemesis) {\n    return null\n  }\n\n  const titleColor = theme.colors.turnOrderCards.nemesis.normal\n  const titleLabel = nemesis ? nemesis.name : ''\n\n  return (\n    <RenderModal titleColor={titleColor} titleLabel={titleLabel}>\n      <ModalBodyWrapper>\n        <NemesisInformation nemesis={nemesis} />\n      </ModalBodyWrapper>\n    </RenderModal>\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, null)(React.memo(NemesisModal))\n)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport CheckboxWithDetails from 'components/molecules/CheckboxWithDetails'\nimport NemesisModal from 'components/molecules/NemesisModal'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  nemesis: types.Nemesis\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.Nemeses.selected.getIsSelected(\n      state,\n      { id: ownProps.nemesis.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ nemesis, changeHandler, selected }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  const handleDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <React.Fragment>\n      <CheckboxWithDetails\n        id={nemesis.id}\n        checked={selected}\n        label={nemesis.name}\n        changeHandler={handleChange}\n        showDetails={handleDetails}\n      />\n      <NemesisModal id={nemesis.id} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as types from 'aer-types/types'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\n\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (\n  items: types.Nemesis[],\n  changeHandler: ChangeHandler\n) =>\n  items.map((item) => (\n    <Checkbox key={item.id} nemesis={item} changeHandler={changeHandler} />\n  ))\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  selectedNemeses: selectors.Settings.Expansions.Nemeses.getNemesesByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleNemesisChange: actions.Settings.Expansions.Nemeses.selected.toggle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst Nemeses = ({ selectedNemeses, handleNemesisChange }: Props) => {\n  return (\n    <React.Fragment>\n      {selectedNemeses.length > 0 && (\n        <ListWrapper label=\"Nemeses\">\n          <React.Fragment>\n            {renderCheckboxes(selectedNemeses, handleNemesisChange)}\n          </React.Fragment>\n        </ListWrapper>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Nemeses))\n","import React from 'react'\nimport styled from 'styled-components'\nimport { withTheme } from 'styled-components/macro'\n\ntype Props = {\n  themeColor?: string\n  isMage?: boolean\n  theme: any\n}\n\nconst AbilityText = styled(({ themeColor, isMage, theme, ...rest }) => (\n  <div {...rest} />\n))<Props>`\n  color: ${props => props.theme.colors.text.primary};\n  font-size: 0.875rem;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  letter-spacing: 0.01071em;\n\n  ${props =>\n    props.isMage\n      ? `\n    border: 1px solid ${props.themeColor};\n    padding: 16px 24px;\n    border-radius: 4px;\n    margin: 24px 0 16px;\n\n    h2 {\n      font-weight: 300;\n      font-size: 1.2rem;\n      margin-bottom: 0;\n      margin-top: -16px;\n      background: #fff;\n      display: inline-block;\n      position: relative;\n      top: -25px;\n      color: ${props.themeColor};\n      padding: 0 8px;\n      margin-left: -8px;\n    }\n\n    .ability-activation {\n      text-decoration: underline;\n      margin-top: -16px;\n    }\n    `\n      : null}\n\n  .or {\n    display: block;\n    margin: 4px 0;\n  }\n\n  .aether {\n    width: 20px;\n    height: 20px;\n    background: ${props => props.theme.colors.text.primary};\n    border-radius: 100%;\n    display: inline-block;\n    color: ${props => props.theme.colors.white};\n    text-align: center;\n    font-size: 12px;\n    vertical-align: top;\n    line-height: 20px;\n  }\n\n  .hint {\n    color: ${props => props.theme.colors.text.hint};\n    display: block;\n  }\n\n  > p:last-child {\n    margin-bottom: 0;\n  }\n`\n\nexport default withTheme(AbilityText)\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n  themeColor: string\n}\n\nconst Button = styled(({ themeColor, ...rest }) => <button {...rest} />)<Props>`\n  margin: 0 16px 16px;\n  background: transparent;\n  border: 0;\n  padding: 0;\n  cursor: pointer;\n  color: ${props => props.themeColor};\n  outline: 0;\n  position: relative;\n  z-index: 1;\n\n  &:hover,\n  &:active {\n    opacity: 0.8;\n  }\n\n  svg {\n    vertical-align: middle;\n  }\n`\n\nexport default Button\n","import React from 'react'\nimport Button from './Button'\n\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined'\n\ntype Props = {\n  showDetails: (e: Event) => void\n  theme: any\n}\n\nconst ShowDetailsButton = ({ showDetails, theme }: Props) => (\n  <Button onClick={showDetails} themeColor={theme}>\n    <VisibilityOutlinedIcon /> Show details\n  </Button>\n)\n\nexport default React.memo(ShowDetailsButton)\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst selectedMixin = css`\n  border: 2px solid ${props => props.theme.colors.secondary.main} !important;\n`\n\ntype Props = {\n  themeColor: string\n  selected?: boolean\n  onClick?: any // FIXME refine type\n}\n\nconst Wrapper = styled(({ themeColor, ...rest }) => <MuiCard {...rest} />)<\n  Props\n>`\n  position: relative;\n\n  background: ${props => props.themeColor};\n\n  ${props => (props.selected ? selectedMixin : '')}\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst Content = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nexport default Content\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  iconColor: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.iconColor};\n`\n\nexport default Icon\n","import React from 'react'\n\nimport Icon from './Icon'\n\ntype Props = {\n  icon: string\n  iconColor: string\n}\n\nconst TypeIcon = ({ icon, iconColor }: Props) => (\n  <Icon iconColor={iconColor} className={`ra ra-lg ${icon}`} />\n)\n\nexport default React.memo(TypeIcon)\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n  themeColor: string\n}\n\nconst Button = styled(({ themeColor, ...rest }) => <button {...rest} />)<Props>`\n  margin: 0 16px 16px;\n  background: transparent;\n  border: 0;\n  padding: 0;\n  cursor: pointer;\n  color: ${(props) => props.themeColor};\n  outline: 0;\n  position: relative;\n  z-index: 1;\n\n  &:hover,\n  &:active {\n    opacity: 0.8;\n  }\n\n  svg {\n    vertical-align: middle;\n  }\n`\n\nexport default Button\n","import React from 'react'\nimport Button from './Button'\n\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport { Lock } from '@material-ui/icons'\n\ntype Props = {\n  lock: (e: Event) => void\n  isLocked?: boolean\n  theme: any\n}\n\nconst LockButton = ({ lock, theme, isLocked = false }: Props) => (\n  <Button onClick={lock} themeColor={theme}>\n    {isLocked ? <Lock /> : <LockOpenIcon />}\n  </Button>\n)\n\nexport default React.memo(LockButton)\n","import React from 'react'\n\nimport ShowDetailsButton from '../ShowDetailsButton'\n\nimport Wrapper from './Wrapper'\nimport Content from './Content'\nimport TypeIcon from './TypeIcon'\nimport LockButton from '../LockButton'\n\ntype Props = {\n  body: React.ReactElement | string\n  bgColor: string\n  fontColor: string\n  icon?: string\n  iconColor?: string\n  showDetails?: (e: Event) => void\n  lock?: (e: Event) => void\n  isLocked?: boolean\n  selected?: boolean\n  clickHandler?: Function\n}\n\nconst Tile = ({\n  body,\n  bgColor,\n  fontColor,\n  icon,\n  iconColor,\n  showDetails,\n  lock,\n  isLocked,\n  selected,\n  clickHandler,\n  ...rest\n}: Props) => (\n  <Wrapper\n    themeColor={bgColor}\n    selected={selected}\n    onClick={clickHandler}\n    {...rest}\n  >\n    <Content>{body}</Content>\n\n    {icon && iconColor ? <TypeIcon icon={icon} iconColor={iconColor} /> : null}\n\n    {showDetails ? (\n      <ShowDetailsButton showDetails={showDetails} theme={fontColor} />\n    ) : null}\n\n    {lock ? (\n      <LockButton lock={lock} theme={fontColor} isLocked={isLocked} />\n    ) : null}\n  </Wrapper>\n)\n\nexport default React.memo(Tile)\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  font-weight: bold;\n`\n\nexport default Name\n","import React from 'react'\n\nimport { ICard } from 'aer-types/types'\n\nimport AbilityText from '../../atoms/AbilityText'\nimport InfoItem from '../../molecules/InfoItem'\n\nimport Name from './Name'\n\nimport List from '@material-ui/core/List'\n\ntype Props = {\n  card: ICard\n}\n\nconst Body = ({ card }: Props) => (\n  <React.Fragment>\n    <Name>{card.name}</Name>\n    <List>\n      <InfoItem label=\"Type\" info={card.type} />\n      <InfoItem label=\"Cost\" info={card.cost.toString()} />\n    </List>\n\n    <AbilityText\n      dangerouslySetInnerHTML={{\n        __html: card.effect || '',\n      }}\n    />\n    {card.keywords ? card.keywords.map((keyword: string) => keyword) : null}\n  </React.Fragment>\n)\n\nexport default React.memo(Body)\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nconst UniqueStartersWrapper = styled(Grid)``\n\nexport default UniqueStartersWrapper\n","import React from 'react'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport { ICard } from 'aer-types/types'\n\nimport Tile from '../Tile'\n\nimport Body from './Body'\nimport UniqueStartersWrapper from './UniqueStartersWrapper'\n\ntype Props = {\n  card: ICard\n  theme: any\n}\n\nconst UniqueStarter = ({ card, theme }: Props) => (\n  <UniqueStartersWrapper item xs={12} sm={6} key={card.id}>\n    <Tile\n      body={<Body card={card} />}\n      bgColor={theme.colors.cards[card.type.toLowerCase()].background}\n      fontColor={theme.colors.text.primary}\n      icon={theme.icons[card.type.toLowerCase()]}\n      iconColor={theme.colors.cards[card.type.toLowerCase()].color}\n    />\n  </UniqueStartersWrapper>\n)\n\nexport default withTheme(React.memo(UniqueStarter))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { Mage, ICard } from 'aer-types/types'\n\nimport InfoItem from '../InfoItem'\n\nimport AbilityText from '../../atoms/AbilityText'\nimport SectionHeadline from '../../atoms/SectionHeadline'\n\nimport UniqueStarter from '../UniqueStarter'\n\nimport Grid from '@material-ui/core/Grid'\n\nconst renderUniqueStarters = (uniqueStarters: ICard[]) => {\n  return uniqueStarters.map((card: ICard) => (\n    <UniqueStarter key={card.id} card={card} />\n  ))\n}\n\ntype Props = {\n  mage: Mage\n  player: 'player1' | 'player2' | 'player3' | 'player4'\n  expansionName: string\n  theme: any\n}\n\nconst MageInformation = ({ mage, player, expansionName, theme }: Props) => (\n  <React.Fragment>\n    <InfoItem label=\"Title\" info={mage.mageTitle} />\n    <InfoItem label=\"Expansion\" info={expansionName} />\n    <InfoItem label=\"Charges\" info={mage.numberOfCharges.toString()} />\n    {mage.complexityRating ? (\n      <InfoItem label=\"Complexity\" info={mage.complexityRating.toString()} />\n    ) : null}\n\n    <AbilityText\n      isMage={true}\n      themeColor={\n        player\n          ? theme.colors.playerColors[player].normal\n          : theme.colors.playerColors['player1'].normal\n      }\n      dangerouslySetInnerHTML={{\n        __html: mage.ability,\n      }}\n    />\n\n    <SectionHeadline\n      themeColor={\n        player\n          ? theme.colors.playerColors[player].normal\n          : theme.colors.playerColors['player1'].normal\n      }\n    >\n      Unique Starters\n    </SectionHeadline>\n\n    {mage.uniqueStarters ? (\n      <Grid container spacing={16}>\n        {renderUniqueStarters(mage.uniqueStarters)}\n      </Grid>\n    ) : null}\n  </React.Fragment>\n)\n\nexport default withTheme(React.memo(MageInformation))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { connect } from 'react-redux'\nimport * as types from 'aer-types/types'\n\nimport { RootState, selectors } from '../../../Redux/Store'\n\nimport { RenderModalType } from '../../../hooks/useModal'\n\nimport ModalBodyWrapper from '../../atoms/ModalBodyWrapper'\n\nimport MageInformation from '../MageInformation'\n\nconst mapStateToProps = (state: RootState, _: any) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\ntype Props = ReturnType<typeof mapStateToProps> & {\n  mage: types.Mage\n  player: 'player1' | 'player2' | 'player3' | 'player4'\n  theme: any\n  RenderModal: RenderModalType\n}\n\nconst MageModal = ({ player, mage, expansions, theme, RenderModal }: Props) => {\n  const titleColor = player\n    ? theme.colors.playerColors[player].normal\n    : theme.colors.playerColors['player1'].normal\n\n  const titleLabel = mage ? mage.name : ''\n  const body = mage ? (\n    <MageInformation\n      mage={mage}\n      player={player}\n      expansionName={expansions.ENG[mage.expansion].name || ''}\n    />\n  ) : (\n    'No content'\n  )\n\n  return (\n    <RenderModal titleColor={titleColor} titleLabel={titleLabel}>\n      <ModalBodyWrapper>{body}</ModalBodyWrapper>\n    </RenderModal>\n  )\n}\n\nexport default withTheme(connect(mapStateToProps, null)(React.memo(MageModal)))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport CheckboxWithDetails from 'components/molecules/CheckboxWithDetails'\nimport MageModal from 'components/molecules/MageModal'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  mage: types.Mage\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.Mages.selected.getIsSelected(\n      state,\n      { id: ownProps.mage.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ mage, changeHandler, selected }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  const handleDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <React.Fragment>\n      <CheckboxWithDetails\n        id={mage.id}\n        checked={selected}\n        label={mage.name}\n        changeHandler={handleChange}\n        showDetails={handleDetails}\n      />\n      <MageModal mage={mage} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as types from 'aer-types/types'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\n\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (items: types.Mage[], changeHandler: ChangeHandler) =>\n  items.map((item) => (\n    <Checkbox key={item.id} mage={item} changeHandler={changeHandler} />\n  ))\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  selectedMages: selectors.Settings.Expansions.Mages.getMagesByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleMageChange: actions.Settings.Expansions.Mages.selected.toggle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst Mages = ({ selectedMages, handleMageChange }: Props) => {\n  return (\n    <React.Fragment>\n      {selectedMages.length > 0 && (\n        <ListWrapper label=\"Mages\">\n          <React.Fragment>\n            {renderCheckboxes(selectedMages, handleMageChange)}\n          </React.Fragment>\n        </ListWrapper>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Mages))\n","import React from 'react'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\nimport InfoItem from '../InfoItem'\n\nimport SectionHeadline from '../../atoms/SectionHeadline'\nimport Keywords from '../../atoms/Keywords'\nimport Keyword from '../../atoms/Keyword'\nimport AbilityText from '../../atoms/AbilityText'\n\ntype Props = {\n  card: {\n    selected: boolean\n    type: types.CardType\n    name: string\n    expansion: string\n    cost: number\n    keywords: string[]\n    effect: string\n  }\n  expansionName: string\n  theme: any\n}\n\nconst Body = ({ card, expansionName, theme }: Props) => (\n  <React.Fragment>\n    <InfoItem label=\"Expansion\" info={expansionName} />\n    <InfoItem label=\"Type\" info={card.type} />\n    <InfoItem label=\"Cost\" info={card.cost.toString()} />\n\n    <SectionHeadline\n      themeColor={theme.colors.cards[card.type.toLowerCase()].color}\n    >\n      Effect\n    </SectionHeadline>\n\n    <AbilityText\n      dangerouslySetInnerHTML={{\n        __html: card.effect || '',\n      }}\n    />\n    {card.keywords ? (\n      <Keywords>\n        {card.keywords.map((keyword) => (\n          <Keyword key={keyword}>{keyword}</Keyword>\n        ))}\n      </Keywords>\n    ) : null}\n  </React.Fragment>\n)\n\nexport default withTheme(React.memo(Body))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { connect } from 'react-redux'\nimport * as types from 'aer-types/types'\n\nimport { RootState, selectors } from '../../../Redux/Store'\n\nimport { RenderModalType } from '../../../hooks/useModal'\n\nimport ModalBodyWrapper from '../../atoms/ModalBodyWrapper'\n\nimport Body from '../SupplyCardInformation'\n\nexport type CardProperties = {\n  type: types.CardType\n  name: string\n  expansion: string\n  cost: number\n  keywords: string[]\n  effect: string\n  selected: boolean\n}\n\nconst mapStateToProps = (state: RootState, _: any) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\ntype Props = ReturnType<typeof mapStateToProps> & {\n  card: CardProperties\n  theme: any\n  RenderModal: RenderModalType\n}\n\nconst SupplyModal = ({ card, expansions, theme, RenderModal }: Props) => {\n  const titleColor = card\n    ? theme.colors.cards[card.type.toLowerCase()].color\n    : theme.colors.text\n  const titleLabel = card ? card.name : ''\n  const body = card ? (\n    <Body\n      card={card}\n      expansionName={expansions.ENG[card.expansion].name || ''}\n    />\n  ) : (\n    'No content'\n  )\n\n  return (\n    <RenderModal titleColor={titleColor} titleLabel={titleLabel}>\n      <ModalBodyWrapper>{body}</ModalBodyWrapper>\n    </RenderModal>\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, null)(React.memo(SupplyModal))\n)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport CheckboxWithDetails from 'components/molecules/CheckboxWithDetails'\nimport SupplyModal from 'components/molecules/SupplyModal'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  card: types.ICard\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.Cards.selected.getIsSelected(\n      state,\n      { cardId: ownProps.card.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ card, changeHandler, selected }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  const handleDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <React.Fragment>\n      <CheckboxWithDetails\n        id={card.id}\n        checked={selected}\n        label={card.name}\n        changeHandler={handleChange}\n        showDetails={handleDetails}\n      />\n      <SupplyModal card={card} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\n\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (items: types.ICard[], changeHandler: ChangeHandler) =>\n  items.map((item) => (\n    <Checkbox key={item.id} card={item} changeHandler={changeHandler} />\n  ))\n\ntype Props = {\n  entities: types.ICard[]\n  handleCheckboxChange: (...args: any) => void\n  label: string\n}\n\nconst CardListItem = ({ entities, handleCheckboxChange, label }: Props) => {\n  return (\n    <React.Fragment>\n      <ListWrapper label={label}>\n        <React.Fragment>\n          {renderCheckboxes(entities, handleCheckboxChange)}\n        </React.Fragment>\n      </ListWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(CardListItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport CardListItem from './CardListItem'\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  selectedGems: selectors.Settings.Expansions.Cards.getGemsByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleGemChange: actions.Settings.Expansions.Cards.selected.toggleCard,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst Gems = ({ selectedGems, handleGemChange }: Props) => (\n  <React.Fragment>\n    {selectedGems.length > 0 && (\n      <CardListItem\n        entities={selectedGems}\n        handleCheckboxChange={handleGemChange}\n        label=\"Gems\"\n      />\n    )}\n  </React.Fragment>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Gems))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport CardListItem from './CardListItem'\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  selectedRelics: selectors.Settings.Expansions.Cards.getRelicsByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleRelicChange: actions.Settings.Expansions.Cards.selected.toggleCard,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst Relics = ({ selectedRelics, handleRelicChange }: Props) => (\n  <React.Fragment>\n    {selectedRelics.length > 0 && (\n      <CardListItem\n        entities={selectedRelics}\n        handleCheckboxChange={handleRelicChange}\n        label=\"Relics\"\n      />\n    )}\n  </React.Fragment>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Relics))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport CardListItem from './CardListItem'\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  selectedSpells: selectors.Settings.Expansions.Cards.getSpellsByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleSpellChange: actions.Settings.Expansions.Cards.selected.toggleCard,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst Spells = ({ selectedSpells, handleSpellChange }: Props) => (\n  <React.Fragment>\n    {selectedSpells.length > 0 && (\n      <CardListItem\n        entities={selectedSpells}\n        handleCheckboxChange={handleSpellChange}\n        label=\"Spells\"\n      />\n    )}\n  </React.Fragment>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Spells))\n","import React from 'react'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\nimport InfoItem from 'components/molecules/InfoItem'\n\nimport SectionHeadline from 'components/atoms/SectionHeadline'\nimport AbilityText from 'components/atoms/AbilityText'\n\ntype Props = {\n  card: types.BasicNemesisCard | types.UpgradedBasicNemesisCard\n  expansionName: string\n  theme: any\n}\n\nconst Body = ({ card, expansionName, theme }: Props) => (\n  <React.Fragment>\n    <InfoItem label=\"Expansion\" info={expansionName} />\n    <InfoItem label=\"Tier\" info={card.tier.toString()} />\n    {card.type && <InfoItem label=\"Type\" info={card.type} />}\n    {card.type === 'Minion' && (\n      <InfoItem label=\"Hp\" info={card.hp.toString()} />\n    )}\n\n    <SectionHeadline themeColor={theme.colors.turnOrderCards['nemesis'].normal}>\n      Effect\n    </SectionHeadline>\n\n    <AbilityText\n      dangerouslySetInnerHTML={{\n        __html: card.effect || '',\n      }}\n    />\n  </React.Fragment>\n)\n\nexport default withTheme(React.memo(Body))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport * as types from 'aer-types/types'\n\nimport { RenderModalType } from 'hooks/useModal'\n\nimport Body from 'components/molecules/BasicNemesisCardInformation'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport P from 'components/atoms/P'\n\nconst mapStateToProps = (state: RootState, _: any) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\ntype Props = ReturnType<typeof mapStateToProps> & {\n  card: types.BasicNemesisCard | types.UpgradedBasicNemesisCard\n  theme: any\n  RenderModal: RenderModalType\n}\n\nconst BasicNemesisCardModal = ({\n  card,\n  expansions,\n  theme,\n  RenderModal,\n}: Props) => {\n  const titleColor = card\n    ? theme.colors.turnOrderCards['nemesis'].normal\n    : theme.colors.text.primary\n  const titleLabel = card ? card.name : ''\n\n  return (\n    <RenderModal titleColor={titleColor} titleLabel={titleLabel}>\n      <ModalBodyWrapper>\n        {card ? (\n          <Body\n            card={card}\n            expansionName={expansions.ENG[card.expansion].name || ''}\n          />\n        ) : (\n          <P>No content</P>\n        )}\n      </ModalBodyWrapper>\n    </RenderModal>\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, null)(React.memo(BasicNemesisCardModal))\n)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport CheckboxWithDetails from 'components/molecules/CheckboxWithDetails'\nimport BasicNemesisCardModal from 'components/molecules/BasicNemesisCardModal'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  card: types.BasicNemesisCard\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.BasicNemesisCards.selected.getIsSelected(\n      state,\n      { basicNemesisCardId: ownProps.card.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ card, changeHandler, selected }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  const handleDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <React.Fragment>\n      <CheckboxWithDetails\n        id={card.id}\n        checked={selected}\n        label={card.name}\n        changeHandler={handleChange}\n        showDetails={handleDetails}\n      />\n      <BasicNemesisCardModal card={card} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (\n  items: types.BasicNemesisCard[],\n  changeHandler: ChangeHandler\n) =>\n  items.map((item) => (\n    <Checkbox key={item.id} card={item} changeHandler={changeHandler} />\n  ))\n\ntype Props = {\n  entities: types.BasicNemesisCard[]\n  handleCheckboxChange: (...args: any) => void\n  label: string\n}\n\nconst NemesisCardListItem = ({\n  entities,\n  handleCheckboxChange,\n  label,\n}: Props) => {\n  return (\n    <React.Fragment>\n      <ListWrapper label={label}>\n        <React.Fragment>\n          {renderCheckboxes(entities, handleCheckboxChange)}\n        </React.Fragment>\n      </ListWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(NemesisCardListItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport NemesisCardListItem from './NemesisCardListItem'\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  basicNemesisCards: selectors.Settings.Expansions.BasicNemesisCards.getContentByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleBasicNemesisCardChange:\n    actions.Settings.Expansions.BasicNemesisCards.selected.toggleCard,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst BasicNemesisCards = ({\n  basicNemesisCards,\n  handleBasicNemesisCardChange,\n}: Props) => (\n  <React.Fragment>\n    {basicNemesisCards.length > 0 && (\n      <NemesisCardListItem\n        entities={basicNemesisCards}\n        handleCheckboxChange={handleBasicNemesisCardChange}\n        label=\"Basic Nemesis Cards\"\n      />\n    )}\n  </React.Fragment>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BasicNemesisCards))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport CheckboxWithDetails from 'components/molecules/CheckboxWithDetails'\nimport BasicNemesisCardModal from 'components/molecules/BasicNemesisCardModal'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  card: types.UpgradedBasicNemesisCard\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.UpgradedBasicNemesisCards.selected.getIsSelected(\n      state,\n      { id: ownProps.card.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ card, changeHandler, selected }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  const handleDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <React.Fragment>\n      <CheckboxWithDetails\n        id={card.id}\n        checked={selected}\n        label={card.name}\n        changeHandler={handleChange}\n        showDetails={handleDetails}\n      />\n      <BasicNemesisCardModal card={card} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (\n  items: types.UpgradedBasicNemesisCard[],\n  changeHandler: ChangeHandler\n) =>\n  items.map((item) => (\n    <Checkbox key={item.id} card={item} changeHandler={changeHandler} />\n  ))\n\ntype Props = {\n  entities: types.UpgradedBasicNemesisCard[]\n  handleCheckboxChange: (...args: any) => void\n  label: string\n}\n\nconst UpgradedNemesisCardListItem = ({\n  entities,\n  handleCheckboxChange,\n  label,\n}: Props) => {\n  return (\n    <React.Fragment>\n      <ListWrapper label={label}>\n        <React.Fragment>\n          {renderCheckboxes(entities, handleCheckboxChange)}\n        </React.Fragment>\n      </ListWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(UpgradedNemesisCardListItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport UpgradedNemesisCardListItem from './UpgradedNemesisCardListItem'\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  selectedUpgradedBasicNemesisCards: selectors.Settings.Expansions.UpgradedBasicNemesisCards.getUpgradedBasicNemesisCardsByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleUpgradedBasicNemesisCardChange:\n    actions.Settings.Expansions.UpgradedBasicNemesisCards.selected.toggle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst UpgradedBasicNemesisCards = ({\n  selectedUpgradedBasicNemesisCards,\n  handleUpgradedBasicNemesisCardChange,\n}: Props) => (\n  <React.Fragment>\n    {selectedUpgradedBasicNemesisCards.length > 0 && (\n      <UpgradedNemesisCardListItem\n        entities={selectedUpgradedBasicNemesisCards}\n        handleCheckboxChange={handleUpgradedBasicNemesisCardChange}\n        label=\"Upgraded Basic Nemesis Cards\"\n      />\n    )}\n  </React.Fragment>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(UpgradedBasicNemesisCards))\n","import React from 'react'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\nimport InfoItem from 'components/molecules/InfoItem'\n\nimport SectionHeadline from 'components/atoms/SectionHeadline'\nimport AbilityText from 'components/atoms/AbilityText'\n\ntype Props = {\n  card: types.Treasure\n  expansionName: string\n  theme: any\n}\n\nconst Body = ({ card, expansionName, theme }: Props) => (\n  <React.Fragment>\n    <InfoItem label=\"Set\" info={expansionName} />\n    <InfoItem label=\"Treasure Level\" info={card.level.toString()} />\n    {card.subtype && <InfoItem label=\"Subtype\" info={card.subtype} />}\n\n    <SectionHeadline themeColor={theme.colors.text.primary}>\n      Effect\n    </SectionHeadline>\n\n    <AbilityText\n      dangerouslySetInnerHTML={{\n        __html: card.effect || '',\n      }}\n    />\n  </React.Fragment>\n)\n\nexport default withTheme(React.memo(Body))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport * as types from 'aer-types/types'\n\nimport { RenderModalType } from 'hooks/useModal'\n\nimport Body from 'components/molecules/TreasureInformation'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport P from 'components/atoms/P'\n\nconst mapStateToProps = (state: RootState, _: any) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\ntype Props = ReturnType<typeof mapStateToProps> & {\n  card: types.Treasure\n  theme: any\n  RenderModal: RenderModalType\n}\n\nconst TreasureModal = React.memo(\n  ({ card, expansions, theme, RenderModal }: Props) => {\n    const titleColor = theme.colors.text.primary\n    const titleLabel = card ? card.name : ''\n\n    return (\n      <RenderModal titleColor={titleColor} titleLabel={titleLabel}>\n        <ModalBodyWrapper>\n          {card ? (\n            <Body\n              card={card}\n              expansionName={expansions.ENG[card.expansion].name || ''}\n            />\n          ) : (\n            <P>No content</P>\n          )}\n        </ModalBodyWrapper>\n      </RenderModal>\n    )\n  }\n)\n\nexport default withTheme(connect(mapStateToProps, null)(TreasureModal))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport CheckboxWithDetails from 'components/molecules/CheckboxWithDetails'\nimport TreasureModal from 'components/molecules/TreasureModal'\n\nimport { ChangeHandler } from './index'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  treasure: types.Treasure\n  changeHandler: ChangeHandler\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    selected: selectors.Settings.Expansions.Treasures.selected.getIsSelected(\n      state,\n      { id: ownProps.treasure.id }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Checkbox = ({ treasure, changeHandler, selected }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleChange = useCallback(\n    (id: string) => {\n      changeHandler(id)\n    },\n    [changeHandler]\n  )\n\n  const handleDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <React.Fragment>\n      <CheckboxWithDetails\n        id={treasure.id}\n        checked={selected}\n        label={treasure.name}\n        changeHandler={handleChange}\n        showDetails={handleDetails}\n      />\n      <TreasureModal card={treasure} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Checkbox))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from 'components/molecules/ListWrapper'\nimport Checkbox from './Checkbox'\n\nexport type ChangeHandler = (id: string) => void\n\nconst renderCheckboxes = (\n  items: types.Treasure[],\n  changeHandler: ChangeHandler\n) =>\n  items.map((item) => (\n    <Checkbox key={item.id} treasure={item} changeHandler={changeHandler} />\n  ))\n\ntype Props = {\n  entities: types.Treasure[]\n  handleCheckboxChange: (...args: any) => void\n  label: string\n}\n\nconst TreasureListItem = ({ entities, handleCheckboxChange, label }: Props) => {\n  return (\n    <React.Fragment>\n      <ListWrapper label={label}>\n        <React.Fragment>\n          {renderCheckboxes(entities, handleCheckboxChange)}\n        </React.Fragment>\n      </ListWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(TreasureListItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\n\nimport TreasureListItem from './TreasureListItem'\n\nconst mapStateToProps = (state: RootState, props: { expansionId: string }) => ({\n  treasures: selectors.Settings.Expansions.Treasures.getTreasuresByExpansionId(\n    state,\n    props\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleTreasureChange: actions.Settings.Expansions.Treasures.selected.toggle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionId: string\n  }\n\nconst Treasures = ({ treasures, handleTreasureChange }: Props) => (\n  <React.Fragment>\n    {treasures.length > 0 && (\n      <TreasureListItem\n        entities={treasures}\n        handleCheckboxChange={handleTreasureChange}\n        label=\"Treasures\"\n      />\n    )}\n  </React.Fragment>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Treasures))\n","import React, { useState } from 'react'\nimport MuiTooltip from '@material-ui/core/Tooltip'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport InfoIcon from '@material-ui/icons/Info'\nimport IconButton from 'components/atoms/IconButton'\n\ntype Props = {\n  children: React.ReactChild\n}\n\nconst Tooltip = ({ children }: Props) => {\n  const [tooltipOpen, setTooltipOpen] = useState<boolean>(false)\n\n  const handleTooltipClose = () => {\n    setTooltipOpen(false)\n  }\n\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!tooltipOpen)\n  }\n\n  return (\n    <ClickAwayListener onClickAway={handleTooltipClose}>\n      <MuiTooltip\n        title={children}\n        PopperProps={{\n          disablePortal: true,\n          modifiers: {\n            arrow: {\n              enabled: true,\n            },\n          },\n        }}\n        onClose={handleTooltipClose}\n        open={tooltipOpen}\n        disableFocusListener\n        disableHoverListener\n        disableTouchListener\n      >\n        <IconButton\n          color=\"primary\"\n          aria-label=\"Show language select info\"\n          onClick={handleTooltipOpen}\n        >\n          <InfoIcon />\n        </IconButton>\n      </MuiTooltip>\n    </ClickAwayListener>\n  )\n}\n\nexport default Tooltip\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\nimport {\n  LANGUAGE_KEYS,\n  LanguageKey,\n} from 'Redux/Store/Settings/Expansions/types'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { FormGroup, MenuItem, InputLabel, Checkbox } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport BackLink from 'components/molecules/BackLink'\nimport SelectField from 'components/atoms/SelectField'\n\nimport Wrapper from './Wrapper'\nimport SelectWithTooltipWrapper from './SelectWithTooltipWrapper'\nimport Nemeses from './Nemeses'\nimport Mages from './Mages'\nimport Gems from './Gems'\nimport Relics from './Relics'\nimport Spells from './Spells'\nimport BasicNemesisCards from './BasicNemesisCards'\nimport UpgradedBasicNemesisCards from './UpgradedBasicNemesisCards'\nimport Treasures from './Treasures'\nimport Tooltip from 'components/molecules/Tooltip'\n\ntype OwnProps = { expansionId: string }\n\nconst mapStateToProps = (state: RootState, { expansionId }: OwnProps) => {\n  return {\n    lang: selectors.Settings.Expansions.Languages.getSelectedLanguageByExpansionId(\n      state,\n      { expansionId }\n    ),\n    allExpansionContentSelected: selectors.Settings.Expansions.getAllContentOfExpansionSelected(\n      state,\n      { expansionId }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {\n  // FIXME use available expansions instead\n  selectLanguage: actions.Settings.Expansions.Languages.select,\n  handleSelectAllExpansionContent:\n    actions.Settings.Expansions.main.toggleAllExpansionContent,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst ContentCustomization = ({\n  expansionId,\n  lang,\n  allExpansionContentSelected,\n  selectLanguage,\n  handleSelectAllExpansionContent,\n}: Props) => {\n  const handleCheckboxChange = () => {\n    allExpansionContentSelected\n      ? handleSelectAllExpansionContent(expansionId, 'deselect')\n      : handleSelectAllExpansionContent(expansionId, 'select')\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Wrapper>\n          <BackLink to=\"/settings\" label=\"Back to settings\" />\n          <FormControl component={'fieldset' as 'div'}>\n            <SelectWithTooltipWrapper>\n              <FormGroup style={{ minWidth: '50%' }}>\n                <InputLabel shrink>Language</InputLabel>\n                <SelectField\n                  key=\"lang\"\n                  value={lang}\n                  onChange={(\n                    e: React.ChangeEvent<{ name?: string; value: LanguageKey }>\n                  ) => {\n                    selectLanguage(expansionId, e.target.value)\n                  }}\n                  inputProps={{\n                    name: 'lang',\n                    id: `lang-${lang}`,\n                  }}\n                  data-test=\"select-type\"\n                >\n                  {LANGUAGE_KEYS.map((language) => (\n                    <MenuItem\n                      key={language}\n                      value={language}\n                      data-test=\"select-type-menu-item\"\n                    >\n                      {language}\n                    </MenuItem>\n                  ))}\n                </SelectField>\n              </FormGroup>\n\n              <Tooltip>\n                Content without available translations will fallback to english!\n              </Tooltip>\n            </SelectWithTooltipWrapper>\n\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={allExpansionContentSelected}\n                    onChange={handleCheckboxChange}\n                    value={\n                      allExpansionContentSelected\n                        ? 'Deselect All'\n                        : 'Select All'\n                    }\n                  />\n                }\n                label={\n                  allExpansionContentSelected ? 'Deselect All' : 'Select All'\n                }\n              />\n            </FormGroup>\n            <Nemeses expansionId={expansionId} />\n            <Mages expansionId={expansionId} />\n            <Gems expansionId={expansionId} />\n            <Relics expansionId={expansionId} />\n            <Spells expansionId={expansionId} />\n            <BasicNemesisCards expansionId={expansionId} />\n            <UpgradedBasicNemesisCards expansionId={expansionId} />\n            <Treasures expansionId={expansionId} />\n          </FormControl>\n        </Wrapper>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(ContentCustomization))\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport Fab from '@material-ui/core/Fab'\n\ntype Props = {\n  withBottomNav?: boolean\n}\n\nconst ShuffleButton = styled(({ withBottomNav, ...rest }) => <Fab {...rest} />)<\n  Props\n>`\n  position: fixed;\n  bottom: ${props => (props.withBottomNav ? '80px' : '24px')};\n  right: 24px;\n  z-index: 10;\n`\n\nShuffleButton.displayName = 'ShuffleButton'\n\nexport default ShuffleButton\n","import styled from 'styled-components/macro'\nimport MuiTableCell from '@material-ui/core/TableCell'\n\nconst Cell = styled(MuiTableCell)`\n  padding: 4px 8px;\n\n  &:first-child {\n    padding-left: 16px;\n  }\n\n  &:last-child {\n    padding-right: 8px;\n  }\n`\n\nCell.displayName = 'Cell'\n\nexport default Cell\n","import styled from 'styled-components/macro'\nimport MuiTableRow from '@material-ui/core/TableRow'\n\nimport { TurnOrderCardType } from 'aer-types/types'\nimport { TurnOrderColors } from '../../../../mainTheme'\n\ntype Props = {\n  type: TurnOrderCardType\n}\n\nconst getTurnOrderCardStyles = (\n  turnOrderCardColors: TurnOrderColors,\n  type: TurnOrderCardType\n) => {\n  if (!turnOrderCardColors[type]) {\n    return `\n      background: #fff;\n      &:first-child {\n        background: #fff;\n      }\n    `\n  }\n\n  return `\n    background: ${turnOrderCardColors[type].light};\n    &:first-child {\n      background: ${turnOrderCardColors[type].normal};\n    }\n  `\n}\n\nconst RowWrapper = styled(MuiTableRow)<Props>`\n  ${(props) =>\n    getTurnOrderCardStyles(props.theme.colors.turnOrderCards, props.type)}\n\n  &:first-child {\n    & * {\n      color: #fff;\n    }\n  }\n\n  & td {\n    border-bottom: 4px solid #fafafa;\n  }\n`\n\nexport default RowWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport IconButton from 'components/atoms/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\nimport { ITurnOrderCard } from 'aer-types/types'\n\nimport { RootState, actions } from 'Redux/Store'\n\nimport Cell from './Cell'\nimport RowWrapper from './RowWrapper'\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  addToTop: actions.TurnOrder.ActiveGame.addToTop,\n  addToBottom: actions.TurnOrder.ActiveGame.addToBottom,\n  shuffleIntoDeck: actions.TurnOrder.ActiveGame.shuffleIntoDeck,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    card: ITurnOrderCard\n  }\n\nconst Row = ({ card, addToTop, addToBottom, shuffleIntoDeck }: Props) => (\n  <RowWrapper type={card.type}>\n    <Cell>\n      <Typography component=\"p\">{card.name}</Typography>\n    </Cell>\n    <Cell align=\"right\">\n      <IconButton\n        aria-label=\"Add to top\"\n        title=\"Add to top\"\n        onClick={() => addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </Cell>\n    <Cell align=\"right\">\n      <IconButton\n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </Cell>\n    <Cell align=\"right\">\n      <IconButton\n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </Cell>\n  </RowWrapper>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Row))\n","import styled from 'styled-components/macro'\nimport MuiTable from '@material-ui/core/Table'\n\nconst Table = styled(MuiTable)`\n  margin-top: 24px;\n  border-collapse: collapse;\n`\n\nexport default Table\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport TableBody from '@material-ui/core/TableBody'\nimport { ITurnOrderCard } from 'aer-types/types'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport Row from './Row'\nimport Table from './Table'\n\nconst renderRows = (discard: ITurnOrderCard[]) =>\n  discard.map((card, i) => {\n    if (card.display === false) {\n      return null\n    }\n\n    return <Row key={i} card={card} />\n  })\n\nconst mapStateToProps = (state: RootState) => ({\n  discard: selectors.TurnOrder.ActiveGame.getDiscard(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst DiscardTable = ({ discard }: Props) => (\n  <Table>\n    <TableBody>{renderRows(discard)}</TableBody>\n  </Table>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(DiscardTable))\n","import styled from 'styled-components/macro'\n\nconst Wrapper = styled('div')`\n  height: 42px;\n  display: flex;\n  align-items: center;\n  float: right;\n`\n\nexport default Wrapper\n","import React from 'react'\n\nimport InfoItem from 'components/molecules/InfoItem'\nimport Wrapper from './Wrapper'\n\ntype Props = {\n  count: number\n}\n\nconst RoundCount = ({ count }: Props) => {\n  return (\n    <Wrapper>\n      <InfoItem label=\"Round\" info={count.toString()}></InfoItem>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(RoundCount)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport { RootState, selectors, actions } from '../../../Redux/Store'\n\nimport ShuffleButton from '../../atoms/ShuffleButton'\n\nimport DiscardTable from './DiscardTable'\nimport RoundCount from './RoundCount'\n\nconst mapStateToProps = (state: RootState) => ({\n  deck: selectors.TurnOrder.ActiveGame.getDeck(state),\n  discard: selectors.TurnOrder.ActiveGame.getDiscard(state),\n  roundCount: selectors.TurnOrder.ActiveGame.getRoundCount(state),\n})\n\nconst mapDispatchToProps = {\n  resetGame: actions.TurnOrder.ActiveGame.resetGame,\n  drawCard: actions.TurnOrder.ActiveGame.draw,\n  newRound: actions.TurnOrder.ActiveGame.newRound,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ActiveTurnOrder = ({\n  deck,\n  discard,\n  roundCount,\n  resetGame,\n  newRound,\n  drawCard,\n}: Props) => (\n  <React.Fragment>\n    {deck.length === 0 ? (\n      <Button\n        size=\"large\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => newRound(discard)}\n      >\n        New Round\n      </Button>\n    ) : (\n      <Button\n        size=\"large\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={drawCard}\n      >\n        Draw a card\n      </Button>\n    )}\n\n    <RoundCount count={roundCount} />\n\n    <DiscardTable />\n\n    <ShuffleButton color=\"primary\" variant=\"extended\" onClick={resetGame}>\n      Reset Game\n    </ShuffleButton>\n  </React.Fragment>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(ActiveTurnOrder))\n","import styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nimport { TurnOrderCardType } from 'aer-types/types'\n\ntype Props = {\n  type: TurnOrderCardType\n}\n\nconst ConfigurationCardDisplay = styled(Typography)<Props>`\n  display: block;\n  padding: 5px 10px;\n  margin-bottom: 2px;\n\n  color: #fff;\n  background: ${(props) =>\n    props.theme.colors.turnOrderCards[props.type].normal};\n`\n\nexport default ConfigurationCardDisplay\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport { ITurnOrderSetup } from 'aer-types/types'\n\nimport Card from 'components/atoms/Card'\n\nimport ConfigurationCardDisplay from './ConfigurationCardDisplay'\n\nconst renderCardNames = (turnOrderSetup: ITurnOrderSetup) =>\n  turnOrderSetup.turnOrderCards.map((card, i) => (\n    <ConfigurationCardDisplay component=\"p\" key={i} type={card.type}>\n      {card.name}\n    </ConfigurationCardDisplay>\n  ))\n\ntype Props = {\n  turnOrderSetup: ITurnOrderSetup\n}\n\nconst CardNameDisplay = ({ turnOrderSetup }: Props) => (\n  <Card>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        Turn order cards\n      </Typography>\n      {renderCardNames(turnOrderSetup)}\n    </CardContent>\n  </Card>\n)\n\nexport default React.memo(CardNameDisplay)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport { MODES } from 'aer-types/types'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport Card from '../../atoms/Card'\n\nconst renderModeOptions = () =>\n  MODES.map((mode) => (\n    <FormControlLabel\n      key={mode}\n      value={mode}\n      control={<Radio />}\n      label={mode}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  mode: selectors.TurnOrder.Configuration.getMode(state),\n})\n\nconst mapDispatchToProps = {\n  setMode: actions.TurnOrder.Configuration.setMode,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ModeSelection = ({ mode, setMode }: Props) => (\n  <Card>\n    <CardContent>\n      <FormLabel>Mode</FormLabel>\n      <RadioGroup\n        aria-label=\"mode\"\n        name=\"turnOrderMode\"\n        value={mode}\n        onChange={(event: React.ChangeEvent<any>) =>\n          setMode(event.currentTarget.value)\n        }\n      >\n        {renderModeOptions()}\n      </RadioGroup>\n    </CardContent>\n  </Card>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(ModeSelection))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport AERData from 'aer-data/src/index'\nimport { RootState, actions, selectors } from 'Redux/Store'\n\nconst renderPlayerCountOptions = () =>\n  Object.values(AERData.turnordersetups).map((playerCount) => (\n    <FormControlLabel\n      key={playerCount.id}\n      value={playerCount.id}\n      control={<Radio />}\n      label={playerCount.name}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  selectPlayerCount: actions.TurnOrder.Configuration.selectPlayerCount,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst PlayerCountSelection = ({\n  selectPlayerCount,\n  selectedPlayerCount,\n}: Props) => (\n  <Card>\n    <CardContent>\n      <FormControl component={'fieldset' as 'div'}>\n        <FormLabel>Amount of Players</FormLabel>\n        <RadioGroup\n          aria-label=\"Players\"\n          name=\"turnOrderPlayerCountOptions\"\n          value={selectedPlayerCount.id}\n          onChange={(event: React.ChangeEvent<any>) => {\n            selectPlayerCount(event.currentTarget.value)\n          }}\n          row={true}\n        >\n          {renderPlayerCountOptions()}\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(PlayerCountSelection))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport { ITurnOrderPlayerCount } from 'aer-types/types'\n\nimport AERData from 'aer-data/src/index'\nimport { RootState, actions, selectors } from 'Redux/Store'\n\nimport Card from '../../atoms/Card'\n\nconst renderSetupOptions = (selectedPlayerCount: ITurnOrderPlayerCount) =>\n  Object.values(\n    AERData.turnordersetups[selectedPlayerCount.id].variations\n  ).map((setup) => (\n    <FormControlLabel\n      key={setup.id}\n      value={setup.id}\n      control={<Radio />}\n      label={setup.name}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n  selectedSetup: selectors.TurnOrder.Configuration.getSelectedSetup(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: actions.TurnOrder.Configuration.selectSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst SetupSelection = ({\n  selectSetup,\n  selectedSetup,\n  selectedPlayerCount,\n}: Props) => (\n  <Card>\n    <CardContent>\n      <FormControl component={'fieldset' as 'div'}>\n        <FormLabel>Player Cards Variants</FormLabel>\n        <RadioGroup\n          aria-label=\"Players Variant\"\n          name=\"turnOrderOptions\"\n          value={selectedSetup.id}\n          onChange={(event: React.ChangeEvent<any>) => {\n            selectSetup(event.currentTarget.value)\n          }}\n        >\n          {renderSetupOptions(selectedPlayerCount)}\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(SetupSelection))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport ShuffleButton from '../../atoms/ShuffleButton'\n\nimport CardNameDisplay from './CardNameDisplay'\nimport ModeSelection from './ModeSelection'\nimport PlayerCountSelection from './PlayerCountSelection'\nimport SetupSelection from './SetupSelection'\n\nconst mapStateToProps = (state: RootState) => ({\n  currentConfiguration: selectors.TurnOrder.Configuration.getConfiguration(\n    state\n  ),\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  startGame: actions.TurnOrder.ActiveGame.startGame,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst TurnOrderConfiguration = ({\n  currentConfiguration,\n  startGame,\n  selectedPlayerCount,\n}: Props) => {\n  const availableVariations = Object.keys(\n    selectedPlayerCount.variations\n  ).map(key => [selectedPlayerCount.variations[key]])\n\n  const hasMoreThanOneVariant: boolean = availableVariations.length > 1\n\n  return (\n    <React.Fragment>\n      <PlayerCountSelection />\n      {hasMoreThanOneVariant ? <SetupSelection /> : null}\n      <ModeSelection />\n      <CardNameDisplay turnOrderSetup={currentConfiguration} />\n      <ShuffleButton\n        color=\"primary\"\n        variant=\"extended\"\n        onClick={() => startGame(currentConfiguration.turnOrderCards)}\n      >\n        Start Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(TurnOrderConfiguration))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from '../../../Redux/Store'\n\nimport ActiveGame from './ActiveGame'\nimport TurnOrderConfiguration from './TurnOrderConfiguration'\n\nconst mapStateToProps = (state: RootState) => ({\n  gameHasStarted: selectors.TurnOrder.ActiveGame.getHasStarted(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    gameHasStarted: boolean\n  }\n\nconst TurnOrder = ({ gameHasStarted }: Props) => (\n  <React.Fragment>\n    {gameHasStarted ? <ActiveGame /> : <TurnOrderConfiguration />}\n  </React.Fragment>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(TurnOrder))\n","import styled from 'styled-components'\n\nconst List = styled('ul')`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`\n\nexport default List\n","import styled from 'styled-components'\n\nimport DeleteButton from 'components/molecules/DeleteButton'\n\nconst Delete = styled(DeleteButton)`\n  z-index: 1;\n`\nexport default Delete\n","import React from 'react'\nimport CopyIcon from '@material-ui/icons/FileCopy'\n\nimport IconButton from 'components/atoms/IconButton'\n\ntype Props = {\n  onClick: (...args: any) => void\n  className?: string\n}\n\nconst CopyButton = ({ onClick, className, ...rest }: Props) => (\n  <IconButton\n    color=\"primary\"\n    aria-label=\"Copy\"\n    onClick={onClick}\n    className={className}\n    {...rest}\n  >\n    <CopyIcon />\n  </IconButton>\n)\n\nexport default React.memo(CopyButton)\n","import styled from 'styled-components'\n\nimport CopyButton from 'components/molecules/CopyButton'\n\nconst Copy = styled(CopyButton)`\n  z-index: 1;\n`\nexport default Copy\n","import React from 'react'\nimport IconButton from 'components/atoms/IconButton'\nimport ShareIcon from '@material-ui/icons/Share'\n\ntype Props = {\n  onClick: (...args: any) => void\n  className?: string\n}\n\nconst ShareButton = ({ onClick, className, ...rest }: Props) => (\n  <IconButton\n    color=\"primary\"\n    aria-label=\"Delete\"\n    onClick={onClick}\n    className={className}\n    {...rest}\n  >\n    <ShareIcon />\n  </IconButton>\n)\n\nexport default React.memo(ShareButton)\n","import styled from 'styled-components'\n\nimport ShareButton from 'components/molecules/ShareButton'\n\nconst Share = styled(ShareButton)`\n  z-index: 1;\n`\nexport default Share\n","import styled from 'styled-components'\n\nconst ListItem = styled('li')`\n  position: relative;\n  margin-bottom: 16px;\n`\n\nexport default ListItem\n","import styled from 'styled-components'\n\nconst Controls = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  display: flex;\n  flex-flow: column nowrap;\n\n  margin: 10px;\n  width: 50px;\n`\n\nexport default Controls\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  padding-right: 48px;\n`\n\nName.displayName = 'Name'\n\nexport default Name\n","import styled from 'styled-components'\n\nimport MuiList from '@material-ui/core/List'\n\nconst List = styled(MuiList)`\n  margin-right: 50px;\n`\n\nexport default List\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Expedition } from 'aer-types/types'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport InfoItem from 'components/molecules/InfoItem'\n\nimport Name from './Name'\nimport List from './List'\n\ntype OwnProps = {\n  expedition: Expedition\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  usedExpansions: selectors.Settings.Expansions.Expansions.getExpansionNamesByIdList(\n    state,\n    { expansionIds: ownProps.expedition.settingsSnapshot.usedExpansions }\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Body = ({ expedition, usedExpansions }: Props) => (\n  <React.Fragment>\n    <Name variant=\"h6\" component=\"h2\">\n      {expedition.name || expedition.id}\n    </Name>\n    <List>\n      <InfoItem\n        label=\"Finished\"\n        info={expedition.finished ? 'Yes' : 'No'}\n        data-test=\"info--expedition-finished\"\n      />\n      <InfoItem\n        label=\"Score\"\n        info={expedition.score.toString()}\n        data-test=\"info--score\"\n      />\n      <InfoItem\n        label=\"Big Pocket\"\n        info={expedition.bigPocketVariant ? 'Yes' : 'No'}\n        data-test=\"info--big-pocket\"\n      />\n      <InfoItem\n        label=\"Seed\"\n        info={expedition.seed.seed}\n        data-test=\"info--seed\"\n      />\n      <InfoItem\n        label=\"Used expansions\"\n        info={usedExpansions.join(', ')}\n        data-test=\"info--expansions\"\n      />\n    </List>\n  </React.Fragment>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Body))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { Expedition } from 'aer-types/types'\n\nimport A from 'components/atoms/A'\nimport Tile from 'components/molecules/Tile'\n\nimport Body from './Body'\n\ntype Props = {\n  url: string\n  expedition: Expedition\n  theme: any\n}\n\nconst ExpeditionTile = ({ url, expedition, theme }: Props) => (\n  <A to={url}>\n    <Tile\n      body={<Body expedition={expedition} />}\n      bgColor={theme.colors.white}\n      fontColor={theme.colors.text.primary}\n    />\n  </A>\n)\n\nexport default withTheme(React.memo(ExpeditionTile))\n","import styled from 'styled-components'\n\nimport MuiFormControl from '@material-ui/core/FormControl'\n\nconst FormControl = styled(MuiFormControl)`\n  margin-bottom: 16px;\n  display: block;\n`\n\nexport default FormControl\n","import styled from 'styled-components'\n\nimport MuiFormLabel from '@material-ui/core/FormLabel'\n\nconst FormLabel = styled(MuiFormLabel)`\n  display: block;\n  margin-bottom: 15px;\n`\n\nexport default FormLabel\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '../FormControl'\nimport FormLabel from './FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\ntype Props = {\n  bigPocketVariant: boolean\n  changeBigPocketVariant: (value: boolean) => any\n}\n\nconst BigPocketSelect = ({\n  bigPocketVariant,\n  changeBigPocketVariant,\n}: Props) => {\n  return (\n    <FormControl component={'fieldset' as 'div'}>\n      <FormLabel>Loot distribution</FormLabel>\n      <FormControlLabel\n        control={\n          <Checkbox\n            id=\"bigPocket\"\n            checked={bigPocketVariant}\n            onChange={() => changeBigPocketVariant(!bigPocketVariant)}\n          />\n        }\n        label=\"Big Pocket Variant\"\n      />\n    </FormControl>\n  )\n}\n\nexport default React.memo(BigPocketSelect)\n","import styled from 'styled-components'\n\nconst ContentWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: column nowrap;\n\n  width: 100%;\n`\n\nexport default ContentWrapper\n","import styled from 'styled-components'\n\nconst ConfigTextField = styled('textarea')`\n  resize: none;\n  min-width: 100%;\n  min-height: 100px;\n\n  margin-top: 10px;\n  padding: 10px;\n\n  @media screen and (min-width: 600px) {\n    & {\n      min-height: 210px;\n    }\n  }\n\n  @media screen and (min-width: 900px) {\n    & {\n      min-height: 300px;\n    }\n  }\n`\n\nexport default ConfigTextField\n","import styled from 'styled-components'\n\nimport Input from '@material-ui/core/Input'\n\nconst FileUpload = styled(Input)`\n  margin: 15px 0 30px;\n`\n\nexport default FileUpload\n","import React from 'react'\nimport styled from 'styled-components'\nimport MuiButton from '@material-ui/core/Button'\n\nconst Button = styled(MuiButton)``\n\nexport default React.memo(Button)\n","import styled from 'styled-components'\n\nimport Button from 'components/atoms/Button'\n\nconst ImportButton = styled(Button)``\n\nexport default ImportButton\n","// This schema has been created by using https://github.com/YousefED/typescript-json-schema\n// To recreate the schema run and replace it in here:\n//\n// typescript-json-schema tsconfig.json ImportedExpeditionConfig --include src/aer-types/types/index.ts --required --aliasRefs\n\nexport const schema = {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  allOf: [\n    {\n      properties: {\n        bigPocketVariantConfig: {\n          type: 'boolean',\n        },\n        initialBarracksConfig: {\n          $ref: '#/definitions/Partial',\n        },\n        initialUBNCardsConfig: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        name: {\n          type: 'string',\n        },\n        seedConfig: {\n          type: 'string',\n        },\n        sequenceConfig: {\n          $ref: '#/definitions/SequenceConfig',\n        },\n      },\n      required: ['bigPocketVariantConfig', 'name', 'sequenceConfig'],\n      type: 'object',\n    },\n    {\n      properties: {\n        settingsSnapshotConfig: {\n          $ref: '#/definitions/SettingsSnapshotConfig',\n        },\n      },\n      type: 'object',\n    },\n  ],\n  definitions: {\n    Array: {\n      items: {\n        anyOf: [\n          {\n            properties: {\n              level: {\n                enum: [1, 2, 3],\n                type: 'number',\n              },\n              random: {\n                enum: [true],\n                type: 'boolean',\n              },\n            },\n            required: ['level', 'random'],\n            type: 'object',\n          },\n          {\n            type: 'string',\n          },\n        ],\n      },\n      type: 'array',\n    },\n    Array_1: {\n      items: {\n        anyOf: [\n          {\n            properties: {\n              random: {\n                enum: [true],\n                type: 'boolean',\n              },\n            },\n            required: ['random'],\n            type: 'object',\n          },\n          {\n            type: 'string',\n          },\n        ],\n      },\n      type: 'array',\n    },\n    Array_2: {\n      items: {\n        anyOf: [\n          {\n            $ref: '#/definitions/IBluePrint',\n          },\n          {\n            type: 'string',\n          },\n        ],\n      },\n      type: 'array',\n    },\n    Array_3: {\n      items: {\n        type: 'number',\n      },\n      type: 'array',\n    },\n    Array_4: {\n      items: {\n        anyOf: [\n          {\n            $ref: '#/definitions/IBluePrint',\n          },\n          {\n            $ref: '#/definitions/IEmptyBluePrint',\n          },\n        ],\n      },\n      type: 'array',\n    },\n    BattleConfig: {\n      $ref: '#/definitions/__type_2',\n    },\n    BattleTreasure: {\n      $ref: '#/definitions/__type_3',\n    },\n    BranchesConfig: {\n      $ref: '#/definitions/__type_1',\n    },\n    CardType: {\n      enum: ['ANY', 'EMPTY', 'Gem', 'Relic', 'Spell'],\n      type: 'string',\n    },\n    IBluePrint: {\n      properties: {\n        id: {\n          type: ['string', 'number'],\n        },\n        operation: {\n          $ref: '#/definitions/Operation',\n        },\n        threshold: {\n          type: 'number',\n        },\n        type: {\n          $ref: '#/definitions/CardType',\n        },\n        values: {\n          $ref: '#/definitions/Array_3',\n        },\n      },\n      required: ['operation', 'type'],\n      type: 'object',\n    },\n    IEmptyBluePrint: {\n      properties: {\n        id: {\n          type: ['string', 'number'],\n        },\n        operation: {\n          enum: ['NoOp'],\n          type: 'string',\n        },\n        threshold: {\n          type: 'number',\n        },\n        type: {\n          enum: ['EMPTY'],\n          type: 'string',\n        },\n        values: {\n          $ref: '#/definitions/Array_3',\n        },\n      },\n      required: ['operation', 'type'],\n      type: 'object',\n    },\n    MageRewardConfig: {\n      properties: {\n        ids: {\n          $ref: '#/definitions/Array_1',\n        },\n      },\n      required: ['ids'],\n      type: 'object',\n    },\n    MarketType: {\n      enum: ['custom', 'official'],\n      type: 'string',\n    },\n    NarrativeConfig: {\n      $ref: '#/definitions/__type_4',\n    },\n    NemesisTier: {\n      enum: [1, 2, 3, 4],\n      type: 'number',\n    },\n    OnLoss: {\n      enum: ['skip'],\n      type: 'string',\n    },\n    Operation: {\n      type: 'string',\n    },\n    Partial: {\n      $ref: '#/definitions/Partial<Barracks>',\n      description: 'Make all properties in T optional',\n    },\n    'Partial<Barracks>': {\n      properties: {\n        mageIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        supplyIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        treasureIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n      },\n      type: 'object',\n    },\n    RewardsConfig: {\n      anyOf: [\n        {\n          properties: {\n            mage: {\n              $ref: '#/definitions/MageRewardConfig',\n            },\n            supply: {\n              $ref: '#/definitions/SupplyRewardConfig',\n            },\n            treasure: {\n              $ref: '#/definitions/TreasureRewardConfig',\n            },\n            type: {\n              enum: ['custom'],\n              type: 'string',\n            },\n          },\n          required: ['type'],\n          type: 'object',\n        },\n        {\n          properties: {\n            type: {\n              enum: ['regular'],\n              type: 'string',\n            },\n          },\n          required: ['type'],\n          type: 'object',\n        },\n      ],\n    },\n    SequenceConfig: {\n      $ref: '#/definitions/__type',\n    },\n    SettingsSnapshotConfig: {\n      properties: {\n        availableCardIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        availableMageIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        availableNemesisIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        availableTreasureIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        availableUpgradedBasicNemesisCardIds: {\n          items: {\n            type: 'string',\n          },\n          type: 'array',\n        },\n        supplySetup: {\n          properties: {\n            active: {\n              type: 'boolean',\n            },\n            default: {\n              type: 'boolean',\n            },\n            id: {\n              type: 'string',\n            },\n            isDirty: {\n              type: 'boolean',\n            },\n            isNew: {\n              type: 'boolean',\n            },\n            name: {\n              type: 'string',\n            },\n            tiles: {\n              $ref: '#/definitions/Array_4',\n            },\n            type: {\n              $ref: '#/definitions/MarketType',\n            },\n          },\n          required: ['active', 'id', 'name', 'tiles', 'type'],\n          type: 'object',\n        },\n      },\n      required: [\n        'availableCardIds',\n        'availableMageIds',\n        'availableNemesisIds',\n        'availableTreasureIds',\n        'availableUpgradedBasicNemesisCardIds',\n        'supplySetup',\n      ],\n      type: 'object',\n    },\n    SupplyRewardConfig: {\n      properties: {\n        bigPocket: {\n          type: 'boolean',\n        },\n        ids: {\n          $ref: '#/definitions/Array_2',\n        },\n      },\n      required: ['ids'],\n      type: 'object',\n    },\n    TreasureLevel: {\n      enum: [1, 2, 3],\n      type: 'number',\n    },\n    TreasureRewardConfig: {\n      properties: {\n        ids: {\n          $ref: '#/definitions/Array',\n        },\n      },\n      required: ['ids'],\n      type: 'object',\n    },\n    __type: {\n      properties: {\n        branches: {\n          $ref: '#/definitions/BranchesConfig',\n        },\n        firstBranchId: {\n          type: 'string',\n        },\n      },\n      required: ['branches', 'firstBranchId'],\n      type: 'object',\n    },\n    __type_1: {\n      additionalProperties: {\n        anyOf: [\n          {\n            properties: {\n              config: {\n                $ref: '#/definitions/BattleConfig',\n              },\n              nextBranchId: {\n                type: 'string',\n              },\n              type: {\n                enum: ['battle'],\n                type: 'string',\n              },\n            },\n            required: ['config', 'type'],\n            type: 'object',\n          },\n          {\n            properties: {\n              config: {\n                $ref: '#/definitions/NarrativeConfig',\n              },\n              nextBranchId: {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n              type: {\n                enum: ['narrative'],\n                type: 'string',\n              },\n            },\n            required: ['config', 'type'],\n            type: 'object',\n          },\n          {\n            properties: {\n              config: {\n                $ref: '#/definitions/RewardsConfig',\n              },\n              nextBranchId: {\n                type: 'string',\n              },\n              type: {\n                enum: ['reward'],\n                type: 'string',\n              },\n            },\n            required: ['config', 'nextBranchId', 'type'],\n            type: 'object',\n          },\n        ],\n      },\n      type: 'object',\n    },\n    __type_2: {\n      properties: {\n        lossRewards: {\n          anyOf: [\n            {\n              items: {\n                anyOf: [\n                  {\n                    properties: {\n                      mage: {\n                        $ref: '#/definitions/MageRewardConfig',\n                      },\n                      supply: {\n                        $ref: '#/definitions/SupplyRewardConfig',\n                      },\n                      treasure: {\n                        $ref: '#/definitions/TreasureRewardConfig',\n                      },\n                      type: {\n                        enum: ['custom'],\n                        type: 'string',\n                      },\n                    },\n                    required: ['type'],\n                    type: 'object',\n                  },\n                  {\n                    properties: {\n                      type: {\n                        enum: ['regular'],\n                        type: 'string',\n                      },\n                    },\n                    required: ['type'],\n                    type: 'object',\n                  },\n                ],\n              },\n              type: 'array',\n            },\n            {\n              enum: ['skip'],\n              type: 'string',\n            },\n          ],\n        },\n        nemesisId: {\n          type: 'string',\n        },\n        newUBNCards: {\n          anyOf: [\n            {\n              properties: {\n                ids: {\n                  items: {\n                    type: 'string',\n                  },\n                  type: 'array',\n                },\n                type: {\n                  enum: ['custom'],\n                  type: 'string',\n                },\n              },\n              required: ['ids', 'type'],\n              type: 'object',\n            },\n            {\n              properties: {\n                addRandom: {\n                  type: 'boolean',\n                },\n                type: {\n                  enum: ['regular'],\n                  type: 'string',\n                },\n              },\n              required: ['addRandom', 'type'],\n              type: 'object',\n            },\n          ],\n        },\n        onLoss: {\n          $ref: '#/definitions/OnLoss',\n        },\n        specialRules: {\n          type: 'string',\n        },\n        tier: {\n          $ref: '#/definitions/NemesisTier',\n        },\n        treasure: {\n          $ref: '#/definitions/BattleTreasure',\n        },\n        winRewards: {\n          anyOf: [\n            {\n              properties: {\n                mage: {\n                  $ref: '#/definitions/MageRewardConfig',\n                },\n                supply: {\n                  $ref: '#/definitions/SupplyRewardConfig',\n                },\n                treasure: {\n                  $ref: '#/definitions/TreasureRewardConfig',\n                },\n                type: {\n                  enum: ['custom'],\n                  type: 'string',\n                },\n              },\n              required: ['type'],\n              type: 'object',\n            },\n            {\n              properties: {\n                type: {\n                  enum: ['regular'],\n                  type: 'string',\n                },\n              },\n              required: ['type'],\n              type: 'object',\n            },\n            {\n              enum: ['skip'],\n              type: 'string',\n            },\n          ],\n        },\n      },\n      required: ['newUBNCards', 'tier', 'treasure'],\n      type: 'object',\n    },\n    __type_3: {\n      properties: {\n        hasTreasure: {\n          type: 'boolean',\n        },\n        level: {\n          $ref: '#/definitions/TreasureLevel',\n        },\n      },\n      required: ['hasTreasure'],\n      type: 'object',\n    },\n    __type_4: {\n      properties: {\n        decisions: {\n          anyOf: [\n            {\n              items: {\n                type: 'string',\n              },\n              type: 'array',\n            },\n            {\n              enum: [false],\n              type: 'boolean',\n            },\n          ],\n        },\n        text: {\n          type: 'string',\n        },\n      },\n      required: ['decisions', 'text'],\n      type: 'object',\n    },\n  },\n}\n","import React, { useState, useCallback } from 'react'\n\nimport Ajv from 'ajv'\n\nimport * as types from 'aer-types/types'\nimport useExpandedHandling from 'hooks/useExpansionHandling'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\nimport P from 'components/atoms/P'\n\nimport FormLabel from '../FormLabel'\nimport FormControl from '../../FormControl'\n\nimport ContentWrapper from './ContentWrapper'\nimport ConfigTextField from './ConfigTextField'\nimport FileUpload from './FileUpload'\nimport ImportButton from './ImportButton'\nimport { schema as expeditionJsonSchema } from './expeditionJsonSchema'\nimport Tooltip from 'components/molecules/Tooltip'\n\ntype Props = {\n  configImportHandler: (config: types.ExpeditionConfig) => void\n}\n\nconst ConfigImport = ({ configImportHandler }: Props) => {\n  const { expanded, createExpansionHandler } = useExpandedHandling()\n  const expansionKey = 'import'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  const [expeditionJsonConfig, changeExpeditionJsonConfig] = useState<string>(\n    ''\n  )\n\n  const [validationError, changeValidiationError] = useState<string>('')\n\n  const expeditionJsonConfigHandler = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      changeExpeditionJsonConfig(e.currentTarget.value)\n    },\n    [changeExpeditionJsonConfig]\n  )\n\n  const handleConfigImport = useCallback(\n    (e: React.ChangeEvent<any>) => {\n      // TODO refactor and cleanup\n      if (!!expeditionJsonConfig) {\n        try {\n          const config = JSON.parse(expeditionJsonConfig)\n\n          const schemaValidator = new Ajv()\n\n          if (schemaValidator.validate(expeditionJsonSchema, config)) {\n            configImportHandler(config)\n            changeValidiationError('')\n            expansionHandler(e, false)\n          } else {\n            const firstError = (schemaValidator?.errors &&\n              schemaValidator?.errors[0]) || {\n              dataPath: '<unknown>',\n              message: 'Unknown error',\n            }\n            const message = `${firstError.dataPath}: ${firstError.message}`\n            changeValidiationError(message)\n          }\n        } catch (e) {\n          changeValidiationError(e.message)\n        }\n      }\n    },\n    [expeditionJsonConfig, configImportHandler, expansionHandler]\n  )\n\n  const handleFileUpload = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reader = new FileReader()\n      reader.onload = () => {\n        if (typeof reader.result === 'string') {\n          changeExpeditionJsonConfig(reader.result)\n        }\n      }\n\n      if (e?.currentTarget?.files && e?.currentTarget?.files.length > 0) {\n        const blob = e.currentTarget.files[0]\n        reader.readAsText(blob)\n      }\n    },\n    [changeExpeditionJsonConfig]\n  )\n\n  return (\n    <FormControl component={'fieldset' as 'div'}>\n      <FormLabel>Import</FormLabel>\n      <ExpansionPanel\n        expanded={expanded}\n        expansionKey={expansionKey}\n        summary=\"Expedition Import\"\n        expansionHandler={expansionHandler}\n      >\n        <ContentWrapper>\n          <Tooltip>\n            This allows you to import an existing expedition either by uploading\n            a correctly formatted JSON-file or by directly pasting the\n            JSON-configuration into the text field below. If you you don't\n            change any of the expeditions parameters (variant, market setup or\n            seed) you will experience the original expedition with the exact\n            same random rolls. To get an idea of what a correctly formatted\n            config looks like, simply press the share button on an existing\n            expedition and either save the configuration to a file or paste it\n            from your clipboard into a text editor.\n          </Tooltip>\n          <ImportButton\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={handleConfigImport}\n            disabled={expeditionJsonConfig.length <= 0}\n          >\n            Import\n          </ImportButton>\n          {!!validationError.length && (\n            <P style={{ color: 'red' }}>\n              The following error was encountered: <br />\n              {validationError}\n            </P>\n          )}\n          <ConfigTextField\n            onChange={expeditionJsonConfigHandler}\n            value={expeditionJsonConfig}\n          />\n          <FileUpload\n            type=\"file\"\n            inputProps={{ accept: '.json' }}\n            onChange={handleFileUpload}\n          />\n        </ContentWrapper>\n      </ExpansionPanel>\n    </FormControl>\n  )\n}\n\nexport default React.memo(ConfigImport)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleExpeditionCreation: () => void\n}\n\nconst CreateButton = ({ handleExpeditionCreation, ...rest }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={handleExpeditionCreation}\n      {...rest}\n    >\n      Create Expedition\n    </Button>\n  )\n}\n\nexport default React.memo(CreateButton)\n","import styled from 'styled-components/macro'\n\nconst MarketOptionsWrapper = styled('div')`\n  margin: 0 -8px;\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport default MarketOptionsWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as types from 'aer-types/types'\nimport * as helpers from 'helpers'\n\nimport { RootState, selectors } from 'Redux/Store'\nimport useExpandedHandling from 'hooks/useExpansionHandling'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\nimport SupplyPreview from 'components/molecules/SupplyPreview'\n\nimport MarketOptionsWrapper from './MarketOptionsWrapper'\n\ntype OwnProps = {\n  clickHandler: (id: string) => void\n  selectedMarketId: string\n  additionalSetups?: types.IMarketSetup[]\n}\n\nconst getCustomAndPredefined = selectors.Settings.SupplySetups.makeGetCustomAndPredefined()\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const activeMarketSetups = [\n    ...selectors.Settings.SupplySetups.getActiveSetups(state),\n    ...(ownProps.additionalSetups ?? []),\n  ].filter(helpers.distinctById)\n\n  const additionalSetupsLookup: {\n    [id: string]: types.IMarketSetup\n  } = ownProps.additionalSetups\n    ? ownProps.additionalSetups.reduce((acc, s) => {\n        return {\n          ...acc,\n          [s.id]: s,\n        }\n      }, {})\n    : {}\n\n  return {\n    activeMarketSetups,\n    allMarketSetups: {\n      ...getCustomAndPredefined(state),\n      ...additionalSetupsLookup,\n    },\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst MarketSelect = ({\n  activeMarketSetups,\n  allMarketSetups,\n  selectedMarketId,\n  clickHandler,\n}: Props) => {\n  const { expanded, createExpansionHandler } = useExpandedHandling()\n  const expansionKey = 'setup'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  const selectedMarketSetup = allMarketSetups[selectedMarketId]\n\n  const handleClick = (id: string) => {\n    expansionHandler(undefined, false)\n    clickHandler(id)\n  }\n\n  return (\n    <ExpansionPanel\n      expanded={expanded}\n      expansionKey={expansionKey}\n      summary={selectedMarketSetup.name}\n      expansionHandler={expansionHandler}\n      data-test=\"Supply\"\n    >\n      <MarketOptionsWrapper>\n        {activeMarketSetups.map((setup) => (\n          <SupplyPreview\n            key={setup.id}\n            setup={setup}\n            clickHandler={() => handleClick(setup.id)}\n            selected={setup.id === selectedMarketSetup.id}\n          />\n        ))}\n      </MarketOptionsWrapper>\n    </ExpansionPanel>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(MarketSelect))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport FormControl from '../FormControl'\nimport FormLabel from './FormLabel'\n\nimport MoleculeMarketSelect from 'components/molecules/MarketSelect'\n\ntype Props = {\n  clickHandler: (id: string) => void\n  selectedMarketId: string\n  additionalSetups?: types.IMarketSetup[]\n}\n\nconst MarketSelect = ({\n  additionalSetups,\n  selectedMarketId,\n  clickHandler,\n}: Props) => {\n  return (\n    <FormControl component={'fieldset' as 'div'}>\n      <FormLabel>Market</FormLabel>\n      <MoleculeMarketSelect\n        selectedMarketId={selectedMarketId}\n        clickHandler={clickHandler}\n        additionalSetups={additionalSetups}\n      />\n    </FormControl>\n  )\n}\n\nexport default React.memo(MarketSelect)\n","import styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\nconst Input = styled(TextField)`\n  margin-top: 0;\n  margin-bottom: 16px;\n  width: 100%;\n`\n\nexport default Input\n","import React from 'react'\n\nimport Input from '../Input'\nimport FormLabel from './FormLabel'\nimport FormControl from '../FormControl'\n\ntype Props = {\n  expeditionName: string\n  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst NameInput = ({ expeditionName, handleInputChange, ...rest }: Props) => {\n  return (\n    <FormControl component={'fieldset' as 'div'}>\n      <FormLabel>General</FormLabel>\n\n      <Input\n        id=\"expeditionName\"\n        label=\"Expedition Name\"\n        placeholder=\"Expedition Name\"\n        value={expeditionName}\n        onChange={handleInputChange}\n        margin=\"normal\"\n        variant=\"outlined\"\n        {...rest}\n      />\n    </FormControl>\n  )\n}\n\nexport default React.memo(NameInput)\n","import React from 'react'\n\nimport FormControl from '../FormControl'\nimport FormLabel from './FormLabel'\nimport Input from '../Input'\nimport Tooltip from 'components/molecules/Tooltip'\n\ntype Props = {\n  seed: string\n  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SeedInput = ({ seed, handleInputChange }: Props) => {\n  return (\n    <FormControl component={'fieldset' as 'div'}>\n      <FormLabel>Seed Settings</FormLabel>\n\n      <Tooltip>\n        The seed makes each expeditions rolls completely deterministic. By\n        importing/copying an existing expedition and re-using its seed each roll\n        will be exactly the same as in the original provided that all parameters\n        are unchanged and you perform exactly the same actions. That way you can\n        try to beat your highscore or let other players enjoy a particular\n        expedition by sharing your configuration.\n      </Tooltip>\n\n      <Input\n        id=\"expeditionSeed\"\n        label=\"Seed\"\n        placeholder=\"Custom Seed\"\n        value={seed}\n        onChange={handleInputChange}\n        margin=\"normal\"\n        variant=\"outlined\"\n        data-test=\"input-seed\"\n      />\n    </FormControl>\n  )\n}\n\nexport default React.memo(SeedInput)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store/'\n\nimport FormControl from '../FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from './FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    variants: selectors.Expeditions.Variants.getVariantList(state),\n  }\n}\n\ntype OwnProps = {\n  selectedVariantId: string\n  handleVariantChange: (e: React.ChangeEvent<{}>) => void\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & OwnProps\n\nconst VariantSelect = ({\n  selectedVariantId,\n  handleVariantChange,\n  variants,\n}: Props) => {\n  return (\n    <FormControl component={'fieldset' as 'div'}>\n      <FormLabel>Expedition Variant</FormLabel>\n      <RadioGroup\n        aria-label=\"Expedition Variant\"\n        name=\"variant\"\n        value={selectedVariantId}\n        onChange={handleVariantChange}\n      >\n        {variants.map(variant => (\n          <FormControlLabel\n            id={variant.id}\n            key={variant.id}\n            value={variant.id}\n            control={<Radio />}\n            label={variant.name}\n          />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  )\n}\n\nexport default connect(mapStateToProps, {})(React.memo(VariantSelect))\n","import React, { useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\n\nimport BigPocketSelect from 'components/pages/Expeditions/CreationDialog/BigPocketSelect'\nimport ConfigImport from './ConfigImport'\nimport CreateButton from 'components/pages/Expeditions/CreationDialog/CreateButton'\nimport MarketSelect from './MarketSelect'\nimport NameInput from 'components/pages/Expeditions/CreationDialog/NameInput'\nimport SeedInput from 'components/pages/Expeditions/CreationDialog/SeedInput'\nimport VariantSelect from 'components/pages/Expeditions/CreationDialog/VariantSelect'\n\ntype OwnProps = {\n  finisher: Function\n  existingExpeditionConfig?: types.ImportedExpeditionConfig\n}\n\nconst mapStateToProps = (_: RootState) => ({})\n\nconst mapDispatchToProps = {\n  createExpedition: actions.Expeditions.Expeditions.createExpedition,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst CreationDialog = ({\n  finisher,\n  existingExpeditionConfig,\n  createExpedition,\n}: Props) => {\n  const [expeditionConfig, changeExpeditionConfig] = useState<\n    types.ImportedExpeditionConfig | undefined\n  >(existingExpeditionConfig)\n\n  const [expeditionName, changeExpeditionName] = useState(\n    expeditionConfig ? `${expeditionConfig.name} Copy` : ''\n  )\n  const [bigPocketVariant, changeBigPocketVariant] = useState(\n    expeditionConfig?.bigPocketVariantConfig || false\n  )\n  const [selectedMarketId, selectMarketId] = useState(\n    expeditionConfig?.settingsSnapshotConfig?.supplySetup?.id || 'random'\n  )\n  const [selectedVariant, selectVariant] = useState(\n    expeditionConfig\n      ? undefined // We will have a ready made sequence instead\n      : 'DEFAULT'\n  )\n  const [seedValue, changeSeedValue] = useState(\n    expeditionConfig?.seedConfig || ''\n  )\n\n  const supplySelectHandler = (id: string) => {\n    selectMarketId(id)\n  }\n\n  const handleNameChange = (e: any) =>\n    changeExpeditionName(e.currentTarget.value)\n\n  const handleSeedChange = (e: any) => changeSeedValue(e.currentTarget.value)\n\n  const handleVariantChange = (e: any) => selectVariant(e.currentTarget.value)\n\n  const handleExpeditionCreation = () => {\n    createExpedition({\n      expeditionConfig,\n      variantId: selectedVariant,\n      name: expeditionName,\n      bigPocketVariant,\n      marketId: selectedMarketId,\n      seedValue,\n    })\n    finisher()\n  }\n\n  const configImportHandler = useCallback(\n    (expeditionConfig: types.ExpeditionConfig) => {\n      changeExpeditionConfig(expeditionConfig)\n      changeExpeditionName(expeditionConfig?.name)\n      changeBigPocketVariant(expeditionConfig?.bigPocketVariantConfig || false)\n      selectMarketId(\n        expeditionConfig?.settingsSnapshotConfig?.supplySetup?.id || 'random'\n      )\n      selectVariant(undefined)\n      changeSeedValue(expeditionConfig?.seedConfig || '')\n    },\n    [\n      selectMarketId,\n      changeExpeditionConfig,\n      changeExpeditionName,\n      selectVariant,\n      changeSeedValue,\n    ]\n  )\n\n  const additionalSetups = (() => {\n    if (existingExpeditionConfig?.settingsSnapshotConfig?.supplySetup) {\n      return [existingExpeditionConfig.settingsSnapshotConfig.supplySetup]\n    } else if (expeditionConfig?.settingsSnapshotConfig?.supplySetup) {\n      return [expeditionConfig.settingsSnapshotConfig.supplySetup]\n    } else {\n      return []\n    }\n  })()\n\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper hasFooter={true}>\n        <ConfigImport configImportHandler={configImportHandler} />\n\n        <NameInput\n          expeditionName={expeditionName}\n          handleInputChange={handleNameChange}\n          data-test=\"input-name\"\n        />\n\n        <BigPocketSelect\n          bigPocketVariant={bigPocketVariant}\n          changeBigPocketVariant={changeBigPocketVariant}\n        />\n\n        {selectedVariant && (\n          <VariantSelect\n            handleVariantChange={handleVariantChange}\n            selectedVariantId={selectedVariant}\n          />\n        )}\n\n        <MarketSelect\n          selectedMarketId={selectedMarketId}\n          clickHandler={supplySelectHandler}\n          additionalSetups={additionalSetups}\n        />\n\n        <SeedInput seed={seedValue} handleInputChange={handleSeedChange} />\n      </ModalBodyWrapper>\n\n      <ModalFooterWrapper>\n        <CreateButton\n          handleExpeditionCreation={handleExpeditionCreation}\n          data-test=\"btn-expedition-create\"\n        />\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(CreationDialog))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { Expedition } from 'aer-types/types'\n\nimport { actions } from 'Redux/Store'\nimport { usePrompt, useModal } from 'hooks/useModal'\n\nimport H2 from 'components/atoms/H2'\n\nimport Delete from './Delete'\nimport Copy from './Copy'\nimport Share from './Share'\nimport ListItem from './ListItem'\nimport Controls from './Controls'\nimport ExpeditionTile from './ExpeditionTile'\nimport CreationDialog from 'components/pages/Expeditions/CreationDialog'\nimport { convertExpeditionToConfig } from 'Redux/Store/Expeditions/Expeditions/helpers'\n\ntype OwnProps = {\n  expedition: Expedition\n}\n\nconst mapStateToProps = () => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  deleteHandler: actions.Expeditions.Expeditions.deleteExpedition,\n  shareHandler: actions.Expeditions.Expeditions.shareExpedition,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst OverviewEntry = ({ expedition, deleteHandler, shareHandler }: Props) => {\n  const deletionPrompt = usePrompt()\n  const openDeletionDialog = () => {\n    deletionPrompt.show()\n  }\n  const yesHandler = () => {\n    deleteHandler(expedition.id)\n  }\n\n  const handleShare = useCallback(() => {\n    shareHandler(expedition)\n  }, [shareHandler, expedition])\n\n  const creationModal = useModal()\n\n  const url = `/expeditions/${expedition.id}`\n  const deletionDialogTitle = `Would you really like to delete Expedition: \"${\n    expedition.name || expedition.id\n  }\"?`\n\n  return (\n    <React.Fragment>\n      <ListItem key={expedition.id} data-test={expedition.name}>\n        <ExpeditionTile url={url} expedition={expedition} />\n        <Controls>\n          <Share onClick={handleShare} data-test=\"btn-share\" />\n          <Copy onClick={creationModal.show} data-test=\"btn-copy\" />\n          <Delete onClick={openDeletionDialog} data-test=\"btn-delete\" />\n        </Controls>\n      </ListItem>\n\n      <creationModal.RenderModal titleColor=\"#333\" titleLabel=\"New Expedition\">\n        <CreationDialog\n          finisher={creationModal.hide}\n          existingExpeditionConfig={convertExpeditionToConfig(expedition)}\n        />\n      </creationModal.RenderModal>\n\n      <deletionPrompt.RenderPrompt\n        titleColor=\"#333\"\n        titleLabel=\"Delete Expedition\"\n        yesHandler={yesHandler}\n        noHandler={deletionPrompt.hide}\n      >\n        <H2>{deletionDialogTitle}</H2>\n      </deletionPrompt.RenderPrompt>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(OverviewEntry))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Expedition } from 'aer-types/types'\n\nimport { RootState, selectors } from '../../../Redux/Store'\n\nimport P from '../../atoms/P'\n\nimport List from './List'\nimport OverviewEntry from './OverviewEntry'\n\nconst renderExpeditions = (expeditions: Array<Expedition>) => {\n  return expeditions.map((expedition) => (\n    <OverviewEntry key={expedition.id} expedition={expedition} />\n  ))\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  expeditions: selectors.Expeditions.Expeditions.getExpeditionList(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ExpeditionList = ({ expeditions }: Props) => {\n  return (\n    <React.Fragment>\n      {expeditions.length > 0 ? (\n        <List>{renderExpeditions(expeditions)}</List>\n      ) : (\n        <P>No expeditions</P>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(ExpeditionList))\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Text = styled(Typography)``\n\nexport default Text\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from '../../../Redux/Store'\nimport { useModal } from '../../../hooks/useModal'\n\nimport ShuffleButton from '../../atoms/ShuffleButton'\n\nimport ExpeditionList from './ExpeditionList'\nimport CreationDialog from './CreationDialog'\nimport Text from 'components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/Text'\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.Expansions.getHasStandaloneExpansion(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Expeditions = ({ hasStandaloneExpansionSelected }: Props) => {\n  const { show, hide, RenderModal } = useModal()\n\n  return (\n    <React.Fragment>\n      {!hasStandaloneExpansionSelected && (\n        <Text color=\"error\">\n          Note: You currently do not have any standalone expansions selected.\n          You can still import expeditions, but just creating an expedition,\n          will leave it blank. To be able to create regular expeditions activate\n          at least one stand alone expansion inside the settings.\n        </Text>\n      )}\n\n      <ExpeditionList />\n\n      <RenderModal titleColor=\"#333\" titleLabel=\"New Expedition\">\n        <CreationDialog finisher={hide} />\n      </RenderModal>\n\n      <ShuffleButton\n        onClick={show}\n        color=\"primary\"\n        variant=\"extended\"\n        data-test=\"btn-start-expedition\"\n      >\n        Start new expedition\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nExpeditions.displayName = 'Expeditions'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Expeditions))\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n  width: 100%;\n`\n\nexport default MageGridWrapper\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nconst Wrapper = styled(Grid)``\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst ExpansionName = styled(Typography)`\n  color: #fff;\n`\n\nexport default ExpansionName\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  color: #fff;\n`\n\nexport default Name\n","import React from 'react'\n\nimport { Mage } from 'aer-types/types'\n\nimport ExpansionName from './ExpansionName'\nimport Name from './Name'\n\ntype Props = {\n  mage: Mage\n  expansionName: string\n}\n\nconst Body = ({ mage, expansionName }: Props) => (\n  <React.Fragment>\n    <ExpansionName color=\"textSecondary\">{expansionName}</ExpansionName>\n    <Name variant=\"h6\" component=\"h2\">\n      {mage.name}\n    </Name>\n  </React.Fragment>\n)\n\nexport default React.memo(Body)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport { Mage } from 'aer-types/types'\nimport { useModal } from '../../../../hooks/useModal'\n\nimport Tile from '../../Tile'\nimport MageModal from '../../MageModal'\n\nimport Wrapper from './Wrapper'\nimport Body from './Body'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype Player = 'player1' | 'player2' | 'player3' | 'player4'\n\ntype OwnProps = {\n  mage: Mage\n  playerNumber: number\n  theme: any\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    expansion: selectors.Settings.Expansions.Expansions.content.getExpansionById(\n      state,\n      { expansionId: ownProps.mage.expansion }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst MageTile = ({ mage, playerNumber, theme, expansion }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const player =\n    playerNumber >= 1 && playerNumber <= 4\n      ? (`player${playerNumber}` as Player)\n      : 'default'\n\n  const bgColor = theme.colors.playerColors[player].normal\n\n  const handleMageDetails = useCallback(() => {\n    show()\n  }, [show])\n\n  return (\n    <Wrapper item xs={12} sm={6} md={3} data-test=\"mage-tile\">\n      <Tile\n        body={<Body mage={mage} expansionName={expansion.name} />}\n        bgColor={bgColor}\n        fontColor={theme.colors.white}\n        icon={theme.icons.mage}\n        iconColor={theme.colors.cards.mage.color}\n        showDetails={handleMageDetails}\n      />\n      <MageModal mage={mage} RenderModal={RenderModal} player={player} />\n    </Wrapper>\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, mapDispatchToProps)(React.memo(MageTile))\n)\n","import React from 'react'\n\nimport { Mage } from 'aer-types/types'\n\nimport MageGridWrapper from './MageGridWrapper'\nimport MageTile from './MageTile'\n\nimport Grid from '@material-ui/core/Grid'\n\ntype Props = {\n  mages: ReadonlyArray<Mage | undefined>\n}\n\nconst MageList = ({ mages }: Props) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {mages\n        .filter((m): m is Mage => !!m)\n        .map((mage, index) => (\n          <MageTile mage={mage} key={mage.id} playerNumber={index + 1} />\n        ))}\n    </Grid>\n  </MageGridWrapper>\n)\n\nexport default React.memo(MageList)\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\nimport MageList from 'components/molecules/MageList'\n\ntype Props = {\n  mages: types.Mage[]\n  expansionKey: string\n  expansionHandler: (\n    e: React.ChangeEvent<any> | undefined,\n    expanded: string | boolean\n  ) => void\n  expanded: boolean | string\n}\n\nconst Mages = ({ mages, expansionKey, expansionHandler, expanded }: Props) => (\n  <ExpansionPanel\n    summary=\"Mages\"\n    expansionKey={expansionKey}\n    expansionHandler={expansionHandler}\n    expanded={expanded}\n  >\n    <MageList mages={mages} />\n  </ExpansionPanel>\n)\n\nexport default React.memo(Mages)\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n  width: 100%;\n`\n\nexport default ListWrapper\n","import styled from 'styled-components/macro'\n\nimport TileWrapper from '../Tile/Wrapper'\n\nconst Wrapper = styled('div')`\n  > p {\n    margin-top: 0;\n  }\n\n  ${TileWrapper} {\n    border: 2px solid transparent;\n\n    &:hover {\n      border-color: ${props => props.theme.colors.primary.main};\n    }\n  }\n`\n\nexport default Wrapper\n","import React from 'react'\n\nimport SupplyList, { Props as ListProps } from '../SupplyList'\n\nimport SectionHeadline from '../../atoms/SectionHeadline'\n\nimport InfoItem from '../InfoItem'\n\nimport Wrapper from './Wrapper'\n\ntype ContextProps = {\n  listId?: string\n  selectionHandler: (val: any) => void\n}\n\nexport const SelectionHandlerContext = React.createContext<ContextProps>({\n  listId: undefined,\n  selectionHandler: (_: string) => undefined,\n})\n\ntype List = ListProps & {\n  title?: string\n  id: string\n}\n\n// FIXME refine types\nconst renderLists = (lists: List[], selectionHandler: (val: any) => void) =>\n  lists.map(list => {\n    const selectionContextValue = {\n      selectionHandler,\n      listId: list.id,\n    }\n\n    return (\n      <div key={list.id}>\n        <SelectionHandlerContext.Provider value={selectionContextValue}>\n          {list.title && <SectionHeadline>{list.title}</SectionHeadline>}\n          <SupplyList {...list} />\n        </SelectionHandlerContext.Provider>\n      </div>\n    )\n  })\n\ntype Props = {\n  lists: List[]\n  handleSelection: (val: any) => void\n  amountOfCardsToSelect: number\n  selectedCardsCount: number\n}\n\nconst SupplySelection = ({\n  amountOfCardsToSelect,\n  selectedCardsCount,\n  lists,\n  handleSelection,\n}: Props) => {\n  return (\n    <Wrapper>\n      <SectionHeadline>\n        Please select {amountOfCardsToSelect} cards to banish!\n      </SectionHeadline>\n      <InfoItem\n        label=\"Cards selected\"\n        info={`${selectedCardsCount}/${amountOfCardsToSelect}`}\n      ></InfoItem>\n      {renderLists(lists, handleSelection)}\n    </Wrapper>\n  )\n}\n\nexport default React.memo(SupplySelection)\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nimport { default as TileWrapper } from '../Tile/Wrapper'\n\nconst Wrapper = styled(Grid)`\n  ${TileWrapper} {\n    min-height: 148px;\n    min-width: 30px;\n    height: 100%;\n  }\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  font-weight: bold;\n`\n\nexport default Name\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst CostOperation = styled(Typography)``\n\nexport default CostOperation\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\nimport { getOperationString } from '../../../Redux/helpers'\n\nimport InfoItem from '../InfoItem'\n\nimport Name from './Name'\nimport CostOperation from './CostOperation'\n\nimport List from '@material-ui/core/List'\n\ntype Props = {\n  supplyCard: {\n    id?: string | number\n    type: types.CardType\n    expansion?: string\n    name?: string\n    cost?: number\n    operation?: types.Operation\n    threshold?: number\n    values?: Array<number>\n  }\n  expansionName: string\n}\n\nconst Body = ({ supplyCard, expansionName }: Props) => {\n  const { type, operation, values, threshold } = supplyCard\n\n  return (\n    <React.Fragment>\n      {operation && (\n        <CostOperation color=\"textSecondary\">\n          {type} {getOperationString(operation, values, threshold)}\n        </CostOperation>\n      )}\n      <Name component=\"p\">\n        {supplyCard && supplyCard.name ? supplyCard.name : '-'}\n      </Name>\n      <List>\n        <InfoItem\n          label=\"Set\"\n          info={expansionName !== '' ? expansionName : '-'}\n        />\n        <InfoItem\n          label=\"Cost\"\n          info={\n            supplyCard && supplyCard.cost ? supplyCard.cost.toString() : '-'\n          }\n          data-test=\"market-tile-cost\"\n        />\n      </List>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(Body)\n","import React, { useContext, useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport { RootState, selectors, actions } from 'Redux/Store'\nimport * as types from 'aer-types/types'\nimport { useModal } from 'hooks/useModal'\n\nimport Tile from '../Tile'\nimport { SelectionHandlerContext } from '../SupplySelection'\nimport SupplyModal from '../SupplyModal'\n\nimport Wrapper from './Wrapper'\nimport Body from './Body'\nimport { LockedCard } from 'Redux/Store/Randomizer/Supply/LockedCards'\n\n// FIXME\n// This is currently a typing hack\n// We ensure that our modal will only be shown\ntype MaybeMarketTile =\n  | {\n      id?: string | number\n      type?: types.CardType\n      name?: string\n      expansion?: string\n      cost?: number\n      keywords?: string[]\n      effect?: string\n    }\n  | undefined\n\ntype MaybeOutputMarketTile =\n  | {\n      id: string\n      type: types.CardType\n      name: string\n      expansion: string\n      cost: number\n      keywords: string[]\n      effect: string\n    }\n  | undefined\n\nconst getCard = (marketTile: MaybeMarketTile): MaybeOutputMarketTile => {\n  if (!marketTile) {\n    return undefined\n  }\n\n  const { id, type, name, expansion, cost, keywords, effect } = marketTile\n\n  return id &&\n    typeof id === 'string' &&\n    type &&\n    name &&\n    expansion &&\n    cost &&\n    keywords &&\n    effect !== undefined\n    ? {\n        id,\n        type,\n        name,\n        expansion,\n        cost,\n        keywords,\n        effect,\n      }\n    : undefined\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    marketTile: {\n      id?: string | number\n      blueprintId?: string | number\n      type: types.CardType\n      expansion?: string\n      name?: string\n      effect?: string\n      keywords?: string[]\n      cost?: number\n      operation?: types.Operation\n      threshold?: number\n      values?: Array<number>\n      visualSelection?: boolean\n    }\n    theme: any\n    lockedCards?: ReadonlyArray<LockedCard>\n    toggleLock?: typeof actions.Randomizer.Supply.LockedCards.toggleLock\n  }\n\nconst MarketTile = ({\n  marketTile,\n  expansions,\n  theme,\n  lockedCards,\n  toggleLock,\n  ...rest\n}: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const { selectionHandler, listId } = useContext(SelectionHandlerContext)\n  const handleSelection = useCallback(() => {\n    selectionHandler({ supplyCardId: marketTile.id, listId })\n  }, [selectionHandler, marketTile, listId])\n\n  const handleDetails = useCallback(\n    (e: Event) => {\n      e.stopPropagation()\n      show()\n    },\n    [show]\n  )\n\n  const card = getCard(marketTile)\n\n  const handleLock = useCallback(() => {\n    if (\n      toggleLock &&\n      card &&\n      card.id &&\n      marketTile.blueprintId !== undefined &&\n      card.cost\n    ) {\n      toggleLock({\n        id: card.id,\n        blueprintId: marketTile.blueprintId,\n        type: card.type,\n        cost: card.cost,\n      })\n    }\n  }, [toggleLock, card, marketTile])\n\n  const isLocked = lockedCards\n    ? lockedCards.findIndex((lockedCard) => lockedCard.id === marketTile?.id) >\n      -1\n    : false\n\n  return (\n    <>\n      {marketTile && (\n        <Wrapper item xs={12} sm={6} md={4} {...rest}>\n          <Tile\n            clickHandler={handleSelection}\n            selected={marketTile.visualSelection}\n            body={\n              <Body\n                supplyCard={marketTile}\n                expansionName={\n                  marketTile.expansion\n                    ? expansions.ENG[marketTile.expansion].name\n                    : ''\n                }\n              />\n            }\n            bgColor={\n              theme.colors.cards[marketTile.type.toLowerCase()].background\n            }\n            fontColor={theme.colors.text.primary}\n            icon={theme.icons[marketTile.type.toLowerCase()]}\n            iconColor={theme.colors.cards[marketTile.type.toLowerCase()].color}\n            showDetails={card ? handleDetails : undefined}\n            lock={card ? handleLock : undefined}\n            isLocked={isLocked}\n            data-test={`market-tile-${marketTile.type.toLocaleLowerCase()}`}\n          />\n          <SupplyModal card={card} RenderModal={RenderModal} />\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, mapDispatchToProps)(React.memo(MarketTile))\n)\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport { actions } from 'Redux/Store'\n\nimport * as types from 'aer-types/types'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from '../MarketTile'\nimport { LockedCard } from 'Redux/Store/Randomizer/Supply/LockedCards'\n\n// We don't want to rely on any data here (expcept the type).\n// Therefore we define a markettile where pretty much every property is optional.\n// To eliminate resulting errors we check for issues inside the respective sub-components\n// TODO this needs some cleanup\nexport type OptionalTile = {\n  id?: string | number\n  type: types.CardType\n  expansion?: string\n  name?: string\n  cost?: number\n  operation?: types.Operation\n  threshold?: number\n  values?: Array<number>\n}\n\nconst renderTiles = (\n  tiles: ReadonlyArray<OptionalTile>,\n  lockedCards?: ReadonlyArray<LockedCard>,\n  toggleLock?: typeof actions.Randomizer.Supply.LockedCards.toggleLock\n) => {\n  return tiles.map((marketTile, i) => (\n    <MarketTile\n      key={i}\n      marketTile={marketTile}\n      lockedCards={lockedCards}\n      toggleLock={toggleLock}\n    />\n  ))\n}\n\nexport type Props = {\n  lockedCards?: ReadonlyArray<LockedCard>\n  toggleLock?: typeof actions.Randomizer.Supply.LockedCards.toggleLock\n  tiles: ReadonlyArray<OptionalTile>\n}\n\nconst SupplyList = ({ tiles, lockedCards, toggleLock }: Props) => (\n  <ListWrapper>\n    <Grid container spacing={16}>\n      {renderTiles(tiles, lockedCards, toggleLock)}\n    </Grid>\n  </ListWrapper>\n)\n\nexport default React.memo(SupplyList)\n","import React from 'react'\n\nimport ExpansionPanel from '../../../../molecules/ExpansionPanel'\nimport SupplyList, { OptionalTile } from '../../../../molecules/SupplyList'\n\ntype Props = {\n  tiles: OptionalTile[]\n  expansionKey: string\n  expansionHandler: (\n    e: React.ChangeEvent<any> | undefined,\n    expanded: string | boolean\n  ) => void\n  expanded: boolean | string\n}\n\nconst Supply = ({ tiles, expansionKey, expansionHandler, expanded }: Props) => (\n  <ExpansionPanel\n    summary=\"Supply\"\n    expansionKey={expansionKey}\n    expansionHandler={expansionHandler}\n    expanded={expanded}\n    data-test=\"supply\"\n  >\n    <SupplyList tiles={tiles} />\n  </ExpansionPanel>\n)\nSupply.displayName = 'Supply'\n\nexport default React.memo(Supply)\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nimport TileWrapper from '../../Tile/Wrapper'\n\nconst Wrapper = styled(Grid)`\n  ${TileWrapper} {\n    min-height: 148px;\n    min-width: 30px;\n    height: 100%;\n  }\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  font-weight: bold;\n`\n\nexport default Name\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport List from '@material-ui/core/List'\n\nimport { Treasure } from 'aer-types/types'\nimport { RootState, selectors } from 'Redux/Store'\n\nimport AbilityText from 'components/atoms/AbilityText'\n\nimport InfoItem from '../../InfoItem'\n\nimport Name from './Name'\n\ntype OwnProps = {\n  treasure: Treasure\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Body = ({ treasure, expansions }: Props) => (\n  <React.Fragment>\n    <Name component=\"p\">{treasure.name}</Name>\n    <List>\n      <InfoItem\n        label=\"Set\"\n        info={expansions.ENG[treasure.expansion]?.name || ''}\n      />\n      <InfoItem label=\"Treasure Level\" info={treasure.level.toString()} />\n      {treasure.subtype && <InfoItem label=\"Subtype\" info={treasure.subtype} />}\n    </List>\n    <AbilityText dangerouslySetInnerHTML={{ __html: treasure.effect }} />\n  </React.Fragment>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Body))\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { Treasure } from 'aer-types/types'\n\nimport Tile from '../../Tile'\n\nimport Wrapper from './Wrapper'\nimport Body from './Body'\n\ntype Props = {\n  treasure: Treasure\n  theme: any\n}\n\nconst TreasureTile = ({ treasure, theme }: Props) => (\n  <Wrapper item xs={12} sm={6} md={3}>\n    <Tile\n      body={<Body treasure={treasure} />}\n      bgColor={theme.colors.cards[`treasure${treasure.level}`].light}\n      fontColor={theme.colors.white}\n      icon={theme.icons['treasure']}\n      iconColor={theme.colors.cards[`treasure${treasure.level}`].normal}\n    />\n  </Wrapper>\n)\n\nexport default withTheme(React.memo(TreasureTile))\n","import styled from 'styled-components/macro'\n\nconst TreasureGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default TreasureGridWrapper\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport * as types from 'aer-types/types'\n\nimport TreasureTile from './TreasureTile'\nimport TreasureGridWrapper from './TreasureGridWrapper'\n\nconst renderTreasures = (treasures: types.Treasure[]) =>\n  treasures.map((treasure) => (\n    <TreasureTile key={treasure.id} treasure={treasure} />\n  ))\n\ntype Props = {\n  treasures: types.Treasure[]\n}\n\nconst TreasureList = ({ treasures }: Props) => (\n  <TreasureGridWrapper>\n    <Grid container spacing={16}>\n      {renderTreasures(treasures)}\n    </Grid>\n  </TreasureGridWrapper>\n)\n\nexport default React.memo(TreasureList)\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\nimport TreasureList from 'components/molecules/TreasureList'\n\ntype Props = {\n  treasures: types.Treasure[]\n  expansionKey: string\n  expansionHandler: (\n    e: React.ChangeEvent<any> | undefined,\n    expanded: string | boolean\n  ) => void\n  expanded: boolean | string\n}\n\nconst Treasure = ({\n  treasures,\n  expansionKey,\n  expansionHandler,\n  expanded,\n}: Props) => (\n  <React.Fragment>\n    {treasures.length > 0 && (\n      <ExpansionPanel\n        summary=\"Treasure\"\n        expansionKey={expansionKey}\n        expansionHandler={expansionHandler}\n        expanded={expanded}\n        data-test=\"treasure\"\n      >\n        <TreasureList treasures={treasures} />\n      </ExpansionPanel>\n    )}\n  </React.Fragment>\n)\n\nexport default React.memo(Treasure)\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nimport TileWrapper from '../../Tile/Wrapper'\n\nconst Wrapper = styled(Grid)`\n  ${TileWrapper} {\n    min-height: 148px;\n    min-width: 30px;\n    height: 100%;\n  }\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  font-weight: bold;\n`\n\nexport default Name\n","import React from 'react'\nimport List from '@material-ui/core/List'\n\nimport { UpgradedBasicNemesisCard } from 'aer-types/types'\n\nimport InfoItem from 'components/molecules/InfoItem'\n\nimport Name from './Name'\n\ntype Props = {\n  nemesisCard: UpgradedBasicNemesisCard\n}\n\nconst Body = ({ nemesisCard }: Props) => (\n  <React.Fragment>\n    <Name component=\"p\">{nemesisCard.name}</Name>\n    <List>\n      <InfoItem label=\"Set\" info={nemesisCard.expansion} />\n      <InfoItem label=\"Tier\" info={nemesisCard.tier.toString()} />\n      {nemesisCard.type && <InfoItem label=\"Type\" info={nemesisCard.type} />}\n      {nemesisCard.type === 'Minion' && (\n        <InfoItem label=\"Hp\" info={nemesisCard.hp.toString()} />\n      )}\n    </List>\n  </React.Fragment>\n)\n\nexport default React.memo(Body)\n","import React, { useCallback } from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { UpgradedBasicNemesisCard } from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport Tile from 'components/molecules/Tile'\nimport BasicNemesisCardModal from 'components/molecules/BasicNemesisCardModal'\n\nimport Wrapper from './Wrapper'\nimport Body from './Body'\n\ntype Props = {\n  nemesisCard: UpgradedBasicNemesisCard\n  theme: any\n}\n\nconst UpgradedBasicNemesisCardTile = ({ nemesisCard, theme }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleDetails = useCallback(\n    (e: Event) => {\n      e.stopPropagation()\n      show()\n    },\n    [show]\n  )\n\n  return (\n    <Wrapper item xs={12} sm={6} md={3}>\n      <Tile\n        body={<Body nemesisCard={nemesisCard} />}\n        bgColor={theme.colors.turnOrderCards.nemesis.light}\n        fontColor={theme.colors.text.primary}\n        icon={theme.icons['nemesis']}\n        iconColor={theme.colors.turnOrderCards.nemesis.normal}\n        showDetails={handleDetails}\n      />\n      <BasicNemesisCardModal card={nemesisCard} RenderModal={RenderModal} />\n    </Wrapper>\n  )\n}\n\nexport default withTheme(React.memo(UpgradedBasicNemesisCardTile))\n","import styled from 'styled-components/macro'\n\nconst UpgradedBasicNemesisCardGridWrapper = styled('div')`\n  margin-top: 24px;\n  width: 100%;\n`\n\nexport default UpgradedBasicNemesisCardGridWrapper\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport * as types from 'aer-types/types'\n\nimport UpgradedBasicNemesisCardTile from './UpgradedBasicNemesisCardTile'\nimport UpgradedBasicNemesisCardGridWrapper from './UpgradedBasicNemesisCardGridWrapper'\n\nconst renderUpgradedBasicNemesisCards = (\n  upgradedBasicNemsisCards: types.UpgradedBasicNemesisCard[]\n) =>\n  upgradedBasicNemsisCards.map((upgradedBasicNemsisCard) => (\n    <UpgradedBasicNemesisCardTile\n      key={upgradedBasicNemsisCard.id}\n      nemesisCard={upgradedBasicNemsisCard}\n    />\n  ))\n\ntype Props = {\n  upgradedBasicNemsisCards: types.UpgradedBasicNemesisCard[]\n}\n\nconst UpgradedBasicNemesisCardList = ({ upgradedBasicNemsisCards }: Props) => (\n  <UpgradedBasicNemesisCardGridWrapper>\n    <Grid container spacing={16}>\n      {renderUpgradedBasicNemesisCards(upgradedBasicNemsisCards)}\n    </Grid>\n  </UpgradedBasicNemesisCardGridWrapper>\n)\n\nexport default React.memo(UpgradedBasicNemesisCardList)\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ExpansionPanel from 'components/molecules/ExpansionPanel'\nimport UpgradedBasicNemesisCards from 'components/molecules/UpgradedBasicNemesisCardList'\n\ntype Props = {\n  upgradedBasicNemsisCards: types.UpgradedBasicNemesisCard[]\n  expansionKey: string\n  expansionHandler: (\n    e: React.ChangeEvent<any> | undefined,\n    expanded: string | boolean\n  ) => void\n  expanded: boolean | string\n}\n\nconst UpgradedBasicNemeses = ({\n  upgradedBasicNemsisCards,\n  expansionKey,\n  expansionHandler,\n  expanded,\n}: Props) => (\n  <React.Fragment>\n    {upgradedBasicNemsisCards.length > 0 && (\n      <ExpansionPanel\n        summary=\"Upgraded basic nemesis cards\"\n        expansionKey={expansionKey}\n        expansionHandler={expansionHandler}\n        expanded={expanded}\n        data-test=\"upgraded-basic-nemesis-cards\"\n      >\n        <UpgradedBasicNemesisCards\n          upgradedBasicNemsisCards={upgradedBasicNemsisCards}\n        />\n      </ExpansionPanel>\n    )}\n  </React.Fragment>\n)\n\nexport default React.memo(UpgradedBasicNemeses)\n","import React from 'react'\n\nimport ExpansionPanel from '../../../../molecules/ExpansionPanel'\nimport SupplyList, { OptionalTile } from '../../../../molecules/SupplyList'\n\ntype Props = {\n  banishedCards: OptionalTile[]\n  expansionKey: string\n  expansionHandler: (\n    e: React.ChangeEvent<any> | undefined,\n    expanded: string | boolean\n  ) => void\n  expanded: boolean | string\n}\n\nconst Banished = ({\n  banishedCards,\n  expansionKey,\n  expansionHandler,\n  expanded,\n}: Props) => (\n  <React.Fragment>\n    {banishedCards.length > 0 && (\n      <ExpansionPanel\n        summary=\"Banished\"\n        expansionKey={expansionKey}\n        expansionHandler={expansionHandler}\n        expanded={expanded}\n        data-test=\"banished-cards\"\n      >\n        <SupplyList tiles={banishedCards} />\n      </ExpansionPanel>\n    )}\n  </React.Fragment>\n)\n\nexport default React.memo(Banished)\n","import React, { useMemo } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\nimport { RootState, selectors } from 'Redux/Store'\nimport useExpandedHandling from 'hooks/useExpansionHandling'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\n\nimport Mages from './Mages'\nimport Supply from './Supply'\nimport Treasure from './Treasure'\nimport UpgradedBasicNemeses from './UpgradedBasicNemeses'\nimport Banished from './Banished'\n\nconst mageKey = 'mages'\nconst supplyKey = 'supply'\nconst treasureKey = 'treasures'\nconst banishedKey = 'banished'\nconst upgradedBasicNemsisCardsKey = 'upgradedBasicNemsisCards'\n\ntype OwnProps = {\n  expedition: types.Expedition\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const expeditionId = ownProps.expedition.id\n\n  return {\n    cards: selectors.getExpeditionSupply(state, { expeditionId }),\n    mages: selectors.getExpeditionMages(state, { expeditionId }),\n    treasures: selectors.getExpeditionTreasure(state, { expeditionId }),\n    upgradedBasicNemsisCards: selectors.getExpeditionUpgradedBasicNemesis(\n      state,\n      { expeditionId }\n    ),\n    banishedCards: selectors.getExpeditionBanishedCards(state, {\n      expeditionId,\n    }),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst BarracksContent = ({\n  cards,\n  mages,\n  treasures,\n  upgradedBasicNemsisCards,\n  banishedCards,\n}: Props) => {\n  const { expanded, createExpansionHandler } = useExpandedHandling(mageKey)\n\n  const mageHandler = useMemo(() => createExpansionHandler(mageKey), [\n    createExpansionHandler,\n  ])\n\n  const supplyHandler = useMemo(() => createExpansionHandler(supplyKey), [\n    createExpansionHandler,\n  ])\n\n  const treasureHandler = useMemo(() => createExpansionHandler(treasureKey), [\n    createExpansionHandler,\n  ])\n\n  const upgradedBasicNemsisCardsHandler = useMemo(\n    () => createExpansionHandler(upgradedBasicNemsisCardsKey),\n    [createExpansionHandler]\n  )\n\n  const banishedHandler = useMemo(() => createExpansionHandler(banishedKey), [\n    createExpansionHandler,\n  ])\n\n  return (\n    <ModalBodyWrapper>\n      <Mages\n        mages={mages}\n        expansionKey={mageKey}\n        expansionHandler={mageHandler}\n        expanded={expanded}\n      />\n      <Supply\n        tiles={cards}\n        expansionKey={supplyKey}\n        expansionHandler={supplyHandler}\n        expanded={expanded}\n      />\n      <Treasure\n        treasures={treasures}\n        expansionKey={treasureKey}\n        expansionHandler={treasureHandler}\n        expanded={expanded}\n      />\n      <UpgradedBasicNemeses\n        upgradedBasicNemsisCards={upgradedBasicNemsisCards}\n        expansionKey={upgradedBasicNemsisCardsKey}\n        expansionHandler={upgradedBasicNemsisCardsHandler}\n        expanded={expanded}\n      />\n      <Banished\n        banishedCards={banishedCards}\n        expansionKey={banishedKey}\n        expansionHandler={banishedHandler}\n        expanded={expanded}\n      />\n    </ModalBodyWrapper>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BarracksContent))\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\nimport { useModal } from 'hooks/useModal'\n\nimport ShuffleButton from 'components/atoms/ShuffleButton'\n\nimport BarracksContent from './BarracksContent'\n\ntype Props = {\n  expedition: types.Expedition\n}\n\nconst Barracks = ({ expedition }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  return (\n    <React.Fragment>\n      <RenderModal titleColor=\"#333\" titleLabel=\"Barracks\">\n        <BarracksContent expedition={expedition} />\n      </RenderModal>\n      <ShuffleButton\n        onClick={show}\n        color=\"primary\"\n        variant=\"extended\"\n        data-test=\"btn-open-barracks\"\n      >\n        Show Barracks\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(Barracks)\n","import styled from 'styled-components'\n\nconst BranchWrapper = styled('button')`\n  background: transparent;\n  border: 0;\n  display: block;\n  width: 100%;\n  padding: 0;\n  text-align: left;\n  margin: 16px 0;\n  position: relative;\n  cursor: pointer;\n  outline: 0;\n\n  &:disabled {\n    cursor: default;\n  }\n`\n\nexport default BranchWrapper\n","import styled from 'styled-components'\n\nconst Locked = styled('div')`\n  background: #dadada;\n  position: relative;\n  top: -16px;\n  left: -16px;\n  width: calc(100% + 32px);\n  display: flex;\n  min-height: 150px;\n  margin-bottom: -48px;\n  border-radius: 4px;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    font-size: 72px;\n  }\n`\n\nexport default Locked\n","import styled from 'styled-components'\n\nconst Unlocked = styled('div')`\n  background: #dadada;\n  position: relative;\n  top: -16px;\n  left: -16px;\n  width: calc(100% + 32px);\n  display: flex;\n  min-height: 150px;\n  margin-bottom: -48px;\n  border-radius: 4px;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    font-size: 72px;\n    color: ${(props) => props.theme.colors.white};\n  }\n`\n\nexport default Unlocked\n","import styled from 'styled-components'\n\nimport UnlockedBase from '../../Unlocked'\n\nconst Unlocked = styled(UnlockedBase)`\n  background: ${(props) => props.theme.colors.turnOrderCards.nemesis.normal};\n`\n\nexport default Unlocked\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n  status: string\n}\n\nconst BodyWrapper = styled(({ status, ...rest }) => <div {...rest} />)<Props>`\n  opacity: ${(props) => (props.status !== 'finished' ? '1' : '0.4')};\n\n  h2,\n  span {\n    color: ${(props) =>\n      props.status !== 'finished'\n        ? props.theme.colors.white\n        : props.theme.colors.text.primary};\n  }\n\n  p {\n    color: ${(props) =>\n      props.status !== 'finished'\n        ? 'rgba(255, 255, 255, 0.8)'\n        : props.theme.colors.text.hint};\n  }\n`\n\nexport default BodyWrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)``\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\nimport List from '@material-ui/core/List'\n\nimport { Battle } from 'aer-types/types'\n\nimport InfoItem from 'components/molecules/InfoItem'\n\nimport BodyWrapper from '../../BodyWrapper'\nimport Name from './Name'\n\ntype Props = {\n  battle: Battle\n  nemesis: string\n}\n\nconst Body = ({ battle, nemesis }: Props) => (\n  <BodyWrapper status={battle.status}>\n    <Name variant=\"h6\" component=\"h2\">\n      Battle: {nemesis}\n    </Name>\n    <List>\n      <InfoItem label=\"Tier\" info={battle.config.tier.toString()} />\n      <InfoItem label=\"Status\" info={battle.status} />\n      <InfoItem label=\"Tries\" info={battle.tries.toString()} />\n    </List>\n  </BodyWrapper>\n)\n\nexport default React.memo(Body)\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\nimport P from 'components/atoms/P'\nimport Tile from 'components/molecules/Tile'\n\nimport Locked from '../../Locked'\nimport Unlocked from './Unlocked'\nimport Body from './Body'\n\nimport LockIcon from '@material-ui/icons/Lock'\n\ntype Props = {\n  battle: types.Battle\n  nemesis: string\n  theme?: any\n}\n\nconst RenderBody = ({ battle, nemesis }: Props) => {\n  switch (battle.status) {\n    case 'locked':\n      return (\n        <Locked>\n          <LockIcon />\n        </Locked>\n      )\n    case 'unlocked':\n      return (\n        <Unlocked>\n          <P>?</P>\n        </Unlocked>\n      )\n    default:\n      return <Body battle={battle} nemesis={nemesis} />\n  }\n}\n\nconst ExpeditionTile = ({ battle, nemesis, theme }: Props) => (\n  <Tile\n    body={<RenderBody battle={battle} nemesis={nemesis} />}\n    bgColor={\n      battle.status === 'finished'\n        ? theme.colors.turnOrderCards.nemesis.light\n        : theme.colors.turnOrderCards.nemesis.normal\n    }\n    fontColor={theme.colors.text.primary}\n  />\n)\n\nexport default withTheme(React.memo(ExpeditionTile))\n","import React from 'react'\nimport SectionHeadline from 'components/atoms/SectionHeadline'\nimport Li from 'components/atoms/Li'\n\nconst SpecialRules = ({ rules }: { rules: string[] }) => {\n  return (\n    <>\n      <SectionHeadline>Special rules:</SectionHeadline>\n      <ul>\n        {rules.map(rule => (\n          <Li key={rule}>{rule}</Li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default SpecialRules\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport UpgradedBasicNemesisCardList from 'components/molecules/UpgradedBasicNemesisCardList'\nimport NemesisInformation from 'components/molecules/NemesisInformation'\nimport InfoItem from 'components/molecules/InfoItem'\nimport SectionHeadline from 'components/atoms/SectionHeadline'\nimport SpecialRules from '../SpecialRules'\n\ntype Props = {\n  info: string\n  nemesis?: types.Nemesis\n  specialRules?: string\n  onLoss?: string\n  upgradedBasicNemsisCards: types.UpgradedBasicNemesisCard[]\n}\n\nconst BattleOverview = ({\n  info,\n  nemesis,\n  upgradedBasicNemsisCards,\n  specialRules,\n  onLoss,\n}: Props) => {\n  return (\n    <>\n      <InfoItem label=\"Tries\" info={info} />\n      <SectionHeadline data-test={`${nemesis?.name}`}>\n        {nemesis ? nemesis.name : 'Nemesis'}\n      </SectionHeadline>\n      <NemesisInformation nemesis={nemesis} />\n      {(specialRules || onLoss) && (\n        <SpecialRules\n          rules={[\n            ...(specialRules ? [specialRules] : []),\n            ...(onLoss === 'skip'\n              ? ['You only have a single try for this battle!']\n              : []),\n          ]}\n        />\n      )}\n      <UpgradedBasicNemesisCardList\n        upgradedBasicNemsisCards={upgradedBasicNemsisCards}\n      />\n    </>\n  )\n}\n\nexport default React.memo(BattleOverview)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nconst StartBattleButton = ({ handleClick, ...rest }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={handleClick}\n      {...rest}\n    >\n      Start battle\n    </Button>\n  )\n}\n\nexport default React.memo(StartBattleButton)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\nimport BattleOverview from 'components/pages/Expeditions/Expedition/Branch/Battle/BeforeBattle/BattleOverview'\nimport StartBattleButton from 'components/pages/Expeditions/Expedition/Branch/Battle/BeforeBattle/StartBattleButton'\n\ntype OwnProps = {\n  hide: () => void\n  showNext?: () => void\n  battle: types.Battle\n  nemesis?: types.Nemesis\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  upgradedBasicNemsisCards: selectors.getUpgradedBasicNemesisCardsByExpeditionId(\n    state,\n    { expeditionId: ownProps.battle.expeditionId }\n  ),\n})\n\nconst mapDispatchToProps = {\n  startBattle: actions.Expeditions.Expeditions.startBattle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst BeforeBattle = ({\n  hide,\n  battle,\n  nemesis,\n  startBattle,\n  showNext,\n  upgradedBasicNemsisCards,\n}: Props) => {\n  const handleClick = useCallback(() => {\n    hide()\n    startBattle(battle)\n\n    if (showNext) {\n      showNext()\n    }\n  }, [hide, battle, startBattle, showNext])\n\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper hasFooter={true}>\n        <BattleOverview\n          info={battle.tries.toString()}\n          specialRules={battle.config.specialRules}\n          onLoss={battle.config.onLoss}\n          nemesis={nemesis}\n          upgradedBasicNemsisCards={upgradedBasicNemsisCards}\n        />\n      </ModalBodyWrapper>\n      <ModalFooterWrapper>\n        <StartBattleButton\n          handleClick={handleClick}\n          data-test=\"btn-start-battle\"\n        />\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BeforeBattle))\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleLoss: () => void\n}\n\nconst BattleLostButton = ({ handleLoss }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={handleLoss}\n      data-test=\"btn-battle-lost\"\n    >\n      Battle lost\n    </Button>\n  )\n}\n\nexport default React.memo(BattleLostButton)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleWin: () => void\n}\n\nconst BattleWonButton = ({ handleWin }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={handleWin}\n      data-test=\"btn-battle-won\"\n    >\n      Battle won\n    </Button>\n  )\n}\n\nexport default React.memo(BattleWonButton)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\nimport BattleLostButton from 'components/pages/Expeditions/Expedition/Branch/Battle/BattleStarted/BattleLostButton'\nimport BattleWonButton from 'components/pages/Expeditions/Expedition/Branch/Battle/BattleStarted/BattleWonButton'\nimport SpecialRules from '../SpecialRules'\n\ntype OwnProps = {\n  battle: types.Battle\n  hide: () => void\n  showNextOnWin?: (expeditionIsFinished: boolean) => void\n  showNextOnLoss?: () => void\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const { expeditionId } = ownProps.battle\n\n  const expeditionHasNextBattle = selectors.Expeditions.Expeditions.getHasNextBranch(\n    state,\n    { expeditionId, branchId: ownProps.battle.id }\n  )\n\n  return {\n    expeditionHasNextBattle,\n  }\n}\n\nconst mapDispatchToProps = {\n  winBattle: actions.Expeditions.Expeditions.winBattle,\n  loseBattle: actions.Expeditions.Expeditions.loseBattle,\n  finishExpedition: actions.Expeditions.Expeditions.finishExpedition,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst BattleStarted = ({\n  battle,\n  expeditionHasNextBattle,\n  hide,\n  loseBattle,\n  showNextOnLoss,\n  showNextOnWin,\n  winBattle,\n  finishExpedition,\n}: Props) => {\n  const handleWin = useCallback(() => {\n    hide()\n    if (expeditionHasNextBattle) {\n      winBattle(battle)\n    } else {\n      finishExpedition(battle)\n    }\n\n    if (showNextOnWin) {\n      showNextOnWin(!expeditionHasNextBattle)\n    }\n  }, [\n    battle,\n    expeditionHasNextBattle,\n    finishExpedition,\n    hide,\n    showNextOnWin,\n    winBattle,\n  ])\n\n  const handleLoss = useCallback(() => {\n    hide()\n    loseBattle(battle)\n\n    if (showNextOnLoss) {\n      showNextOnLoss()\n    }\n  }, [loseBattle, hide, battle, showNextOnLoss])\n\n  const { specialRules, onLoss } = battle.config\n\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper hasFooter={true}>\n        {(specialRules || onLoss) && (\n          <SpecialRules\n            rules={[\n              ...(specialRules ? [specialRules] : []),\n              ...(onLoss === 'skip'\n                ? ['You only have a single try for this battle!']\n                : []),\n            ]}\n          />\n        )}\n      </ModalBodyWrapper>\n      <ModalFooterWrapper>\n        <BattleLostButton handleLoss={handleLoss} />\n        <BattleWonButton handleWin={handleWin} />\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BattleStarted))\n","import * as types from 'aer-types/types'\nimport { byCost } from 'helpers'\n\ntype Tile = {\n  id: string\n  type: types.CardType\n  cost: number\n  visualSelection: boolean\n}\n\nexport type ListWithSelection = {\n  id: string\n  tiles: Array<Tile>\n}\n\ntype SelectedValue = { supplyCardId: string; listId: string }\n\nexport const getAffectedList = (\n  listsWithSelectionState: ListWithSelection[],\n  selectedValue: SelectedValue\n) => {\n  const affectedListIndex = listsWithSelectionState.findIndex(\n    (list) => list.id === selectedValue.listId\n  )\n  return {\n    affectedList: listsWithSelectionState[affectedListIndex],\n    affectedListIndex,\n  }\n}\n\nexport const createUpdatedLists = (\n  affectedList: ListWithSelection,\n  affectedListIndex: number,\n  selectedValue: SelectedValue,\n  finishingIsPossible: boolean,\n  listsWithSelectionState: ListWithSelection[]\n) => {\n  const elementIndex = affectedList.tiles.findIndex(\n    (card) => card.id === selectedValue.supplyCardId\n  )\n  const affectedElement = affectedList.tiles[elementIndex]\n\n  const updatedListTiles = Object.assign([...affectedList.tiles], {\n    [elementIndex]: {\n      ...affectedElement,\n      visualSelection:\n        finishingIsPossible || affectedElement.visualSelection\n          ? false\n          : !affectedElement.visualSelection,\n    },\n  })\n\n  return Object.assign([...listsWithSelectionState], {\n    [affectedListIndex]: {\n      ...affectedList,\n      tiles: updatedListTiles,\n    },\n  })\n}\n\nexport const calculateNumberOfSelectedCards = (lists: ListWithSelection[]) =>\n  lists.reduce((acc, list) => {\n    const selectedList = list.tiles.filter((tile) => tile.visualSelection)\n    return selectedList.length + acc\n  }, 0)\n\nconst tilesToCardId = (\n  list: Array<{ type: types.CardType; cost: number; id?: string }>,\n  type: types.CardType\n) =>\n  list\n    .filter((el: { type: types.CardType }) => el.type === type)\n    .sort(byCost) // !! mutation !! but irrelevant, because of the filter() beforehand!\n    .reduce((acc: string[], tile: { id?: string }) => {\n      if (!tile.id) {\n        return acc\n      }\n\n      return [...acc, tile.id]\n    }, [])\n\nexport const createBanishedAndSupplyFromList = (list: Tile[]) => {\n  const banished = list\n    .filter((tile) => tile.visualSelection)\n    .reduce((acc: string[], tile) => {\n      if (!tile.id) {\n        return acc\n      }\n\n      return [...acc, tile.id]\n    }, [])\n\n  const newSupplyList = list.filter((tile) => !tile.visualSelection)\n\n  const gems = tilesToCardId(newSupplyList, 'Gem')\n  const relics = tilesToCardId(newSupplyList, 'Relic')\n  const spells = tilesToCardId(newSupplyList, 'Spell')\n\n  const newSupplyIds = [...gems, ...relics, ...spells]\n\n  return {\n    banished,\n    newSupplyIds,\n  }\n}\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport SupplySelection from 'components/molecules/SupplySelection'\nimport SectionHeadline from 'components/atoms/SectionHeadline'\n\nimport { ListWithSelection } from './helpers'\nimport SupplyList from 'components/molecules/SupplyList'\n\ntype Props = {\n  bigPocketVariant: boolean\n  newSupplyCards: types.ICard[]\n  listsWithSelectionState: ListWithSelection[]\n  handleSelection: (val: any) => void\n  amountOfCardsToSelect: number\n  selectedCardsCount: number\n}\n\nconst SupplyReward = ({\n  bigPocketVariant,\n  newSupplyCards,\n  listsWithSelectionState,\n  handleSelection,\n  amountOfCardsToSelect,\n  selectedCardsCount,\n}: Props) => {\n  return (\n    <>\n      {newSupplyCards.length > 0 && (\n        <SectionHeadline>New Cards</SectionHeadline>\n      )}\n      {newSupplyCards.length > 0 && !bigPocketVariant ? (\n        <SupplySelection\n          lists={listsWithSelectionState}\n          handleSelection={handleSelection}\n          amountOfCardsToSelect={amountOfCardsToSelect}\n          selectedCardsCount={selectedCardsCount}\n        />\n      ) : (\n        newSupplyCards.length > 0 && <SupplyList tiles={newSupplyCards} />\n      )}\n    </>\n  )\n}\n\nexport default React.memo(SupplyReward)\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport TreasureList from 'components/molecules/TreasureList'\nimport SectionHeadline from 'components/atoms/SectionHeadline'\n\ntype Props = {\n  treasures: types.Treasure[]\n}\n\nconst TreasureReward = ({ treasures }: Props) => {\n  return (\n    <>\n      {treasures.length > 0 && <SectionHeadline>Treasures</SectionHeadline>}\n      <TreasureList treasures={treasures} />\n    </>\n  )\n}\n\nexport default React.memo(TreasureReward)\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport SectionHeadline from 'components/atoms/SectionHeadline'\nimport MageList from 'components/molecules/MageList'\n\ntype Props = {\n  mages: (types.Mage | undefined)[]\n}\n\nconst MageReward = ({ mages }: Props) => {\n  return (\n    <>\n      {mages.length > 0 && <SectionHeadline>New Mages</SectionHeadline>}\n      {mages.length > 0 && <MageList mages={mages} />}\n    </>\n  )\n}\n\nexport default React.memo(MageReward)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleContinue: () => void\n  finishingIsPossible: boolean\n}\n\nconst ContinueButton = ({ handleContinue, finishingIsPossible }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={handleContinue}\n      disabled={!finishingIsPossible}\n      data-test=\"btn-continue\"\n    >\n      Continue\n    </Button>\n  )\n}\n\nexport default React.memo(ContinueButton)\n","import React, { useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\n\nimport * as helpers from '../helpers'\n\nimport SupplyReward from '../SupplyReward'\nimport TreasureReward from '../TreasureReward'\nimport MageReward from '../MageReward'\nimport ContinueButton from './ContinueButton'\nimport { InputBranch } from 'Redux/Store/Expeditions/Expeditions/actions'\n\ntype OwnProps = {\n  branch: InputBranch\n  hide: () => void\n  showNext?: () => void\n  callback: (\n    branch: InputBranch,\n    banished: string[],\n    newSupplyIds: string[]\n  ) => Object // FIXME refine type\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId: ownProps.branch.expeditionId }\n  )\n\n  const treasures = ownProps.branch.rewards\n    ? selectors.Settings.Expansions.Treasures.getTreasureListFromIdList(state, {\n        treasureIds: ownProps.branch.rewards.treasure,\n      })\n    : []\n\n  const newSupplyCards = ownProps.branch.rewards\n    ? selectors.Settings.Expansions.Cards.getCardsByIdList(state, {\n        cardIds: ownProps.branch.rewards.supplyIds,\n      })\n    : []\n\n  const expeditionSupply = selectors.getExpeditionSupply(state, {\n    expeditionId: ownProps.branch.expeditionId,\n  })\n\n  const newMages =\n    ownProps.branch.rewards && ownProps.branch.rewards.mages\n      ? ownProps.branch.rewards.mages.map(mage => {\n          return selectors.Settings.Expansions.Mages.content.getById(state, {\n            id: mage,\n          })\n        })\n      : []\n\n  const lists = [\n    {\n      id: 'newSupply',\n      tiles: newSupplyCards.map(tile => ({\n        ...tile,\n        visualSelection: false,\n      })),\n      title: 'New cards',\n    },\n    {\n      id: 'expedition',\n      tiles: expeditionSupply.map(tile => ({\n        ...tile,\n        visualSelection: false,\n      })),\n    },\n  ]\n\n  return {\n    expedition,\n    treasures,\n    newSupplyCards,\n    newMages,\n    lists,\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst RewardScreen = ({\n  callback,\n  branch,\n  expedition,\n  hide,\n  lists,\n  newMages,\n  newSupplyCards,\n  showNext,\n  treasures,\n}: Props) => {\n  const [listsWithSelectionState, updateLists] = useState<\n    Array<helpers.ListWithSelection>\n  >(lists)\n  const [selectedCardsCount, updateSelectedCardsCount] = useState(0)\n  const amountOfCardsToSelect = newSupplyCards.length\n  const enoughCardsSelected = selectedCardsCount === amountOfCardsToSelect\n\n  // TODO check for Reward bigPocket as well!!!\n  const finishingIsPossible =\n    expedition.bigPocketVariant ||\n    enoughCardsSelected ||\n    (!newSupplyCards && newMages.length > 0) ||\n    (!newSupplyCards && treasures.length > 0)\n\n  const handleSelection = useCallback(\n    (selectedValue: { supplyCardId: string; listId: string }) => {\n      const { affectedList, affectedListIndex } = helpers.getAffectedList(\n        listsWithSelectionState,\n        selectedValue\n      )\n\n      if (affectedList) {\n        const updatedLists = helpers.createUpdatedLists(\n          affectedList,\n          affectedListIndex,\n          selectedValue,\n          finishingIsPossible,\n          listsWithSelectionState\n        )\n\n        const numberOfSelectedCards = helpers.calculateNumberOfSelectedCards(\n          updatedLists\n        )\n\n        updateSelectedCardsCount(numberOfSelectedCards)\n        updateLists(updatedLists)\n      }\n    },\n    [\n      listsWithSelectionState,\n      updateLists,\n      updateSelectedCardsCount,\n      finishingIsPossible,\n    ]\n  )\n\n  const handleContinue = useCallback(() => {\n    const listFlattendedToTiles = listsWithSelectionState.reduce(\n      (acc: any, list) => {\n        return [...acc, ...list.tiles]\n      },\n      []\n    )\n\n    const { banished, newSupplyIds } = helpers.createBanishedAndSupplyFromList(\n      listFlattendedToTiles\n    )\n\n    callback(branch, banished, newSupplyIds)\n    hide()\n\n    if (showNext) {\n      showNext()\n    }\n  }, [hide, branch, callback, showNext, listsWithSelectionState])\n\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper hasFooter={true}>\n        <SupplyReward\n          bigPocketVariant={expedition.bigPocketVariant}\n          newSupplyCards={newSupplyCards}\n          listsWithSelectionState={listsWithSelectionState}\n          handleSelection={handleSelection}\n          amountOfCardsToSelect={amountOfCardsToSelect}\n          selectedCardsCount={selectedCardsCount}\n        />\n        <TreasureReward treasures={treasures} />\n        <MageReward mages={newMages} />\n      </ModalBodyWrapper>\n      <ModalFooterWrapper>\n        <ContinueButton\n          handleContinue={handleContinue}\n          finishingIsPossible={finishingIsPossible}\n        />\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(RewardScreen))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport RewardScreen from '../../RewardScreen'\n\ntype OwnProps = {\n  battle: types.Battle\n  hide: () => void\n  showNext?: () => void\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const expedition = selectors.Expeditions.Expeditions.getExpeditionById(\n    state,\n    { expeditionId: ownProps.battle.expeditionId }\n  )\n\n  return {\n    barracks: expedition.barracks,\n  }\n}\n\nconst mapDispatchToProps = {\n  finishBattle: actions.Expeditions.Expeditions.finishBattle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst BattleWon = ({\n  battle,\n  finishBattle,\n  hide,\n  showNext,\n  barracks,\n}: Props) => {\n  useEffect(() => {\n    if (battle.config.winRewards === 'skip') {\n      hide()\n      // Supply ids will be set as they are, so we need to pass the current ids from\n      // our barracks, so that our barracks are not accidentally overwritten\n      finishBattle(battle, [], barracks.supplyIds)\n    }\n  }, [hide, finishBattle, battle, barracks.supplyIds])\n\n  return (\n    <React.Fragment>\n      <RewardScreen\n        callback={finishBattle}\n        branch={battle}\n        hide={hide}\n        showNext={showNext}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BattleWon))\n","import styled from 'styled-components'\nimport MuiSelect from '@material-ui/core/Select'\n\nconst Select = styled(MuiSelect)`\n  width: 100%;\n`\n\nexport default Select\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport { RewardType } from 'Redux/Store/Expeditions/Expeditions/'\nimport FormControl from 'components/pages/Expeditions/FormControl'\nimport Select from 'components/pages/Expeditions/Select'\n\ntype OwnProps = {\n  expeditionId: string\n  rewardSelectValue: RewardType\n  handleRewardSelectChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n  treasureOptions: Array<{ level: number }>\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const { expeditionId } = ownProps\n  return {\n    hasMagesLeft:\n      selectors.getStillAvailableMageIds(state, {\n        expeditionId,\n      }).length > 0,\n    hasGemsLeft:\n      selectors.getStillAvailableGemIds(state, {\n        expeditionId,\n      }).length > 0,\n    hasRelicsLeft:\n      selectors.getStillAvailableRelicIds(state, {\n        expeditionId,\n      }).length > 0,\n    hasSpellsLeft:\n      selectors.getStillAvailableSpellIds(state, {\n        expeditionId,\n      }).length > 0,\n    hasLvl1TreasureLeft:\n      selectors.getStillAvailableTreasureIdsByLevel(state, {\n        expeditionId,\n        treasureLevel: 1,\n      }).length > 0,\n    hasLvl2TreasureLeft:\n      selectors.getStillAvailableTreasureIdsByLevel(state, {\n        expeditionId,\n        treasureLevel: 2,\n      }).length > 0,\n    hasLvl3TreasureLeft:\n      selectors.getStillAvailableTreasureIdsByLevel(state, {\n        expeditionId,\n        treasureLevel: 3,\n      }).length > 0,\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst RewardSelect = ({\n  rewardSelectValue,\n  handleRewardSelectChange,\n  treasureOptions,\n  hasMagesLeft,\n  hasGemsLeft,\n  hasRelicsLeft,\n  hasSpellsLeft,\n  hasLvl1TreasureLeft,\n  hasLvl2TreasureLeft,\n  hasLvl3TreasureLeft,\n  ...rest\n}: Props) => {\n  return (\n    <FormControl>\n      <Select\n        value={rewardSelectValue}\n        onChange={handleRewardSelectChange}\n        inputProps={{\n          name: 'reward',\n          id: `reward`,\n        }}\n        {...rest}\n      >\n        {hasMagesLeft && (\n          <MenuItem value=\"mage\" data-test=\"option-mage\">\n            Mage\n          </MenuItem>\n        )}\n        {hasGemsLeft && (\n          <MenuItem value=\"gem\" data-test=\"option-gem\">\n            Gem\n          </MenuItem>\n        )}\n        {hasRelicsLeft && (\n          <MenuItem value=\"relic\" data-test=\"option-relic\">\n            Relic\n          </MenuItem>\n        )}\n        {hasSpellsLeft && (\n          <MenuItem value=\"spell\" data-test=\"option-spell\">\n            Spell\n          </MenuItem>\n        )}\n\n        {treasureOptions.map((option) => {\n          if (\n            (option.level === 1 && hasLvl1TreasureLeft) ||\n            (option.level === 2 && hasLvl2TreasureLeft) ||\n            (option.level === 3 && hasLvl3TreasureLeft)\n          ) {\n            return (\n              <MenuItem\n                key={option.level}\n                value={`treasure${option.level}`}\n                data-test={`option-treasure-${option.level}`}\n              >\n                Treasure, Level {option.level}\n              </MenuItem>\n            )\n          }\n\n          return null\n        })}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(RewardSelect))\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleRewardConfirmation: () => void\n}\n\nconst ConfirmButton = ({ handleRewardConfirmation, ...rest }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={handleRewardConfirmation}\n      {...rest}\n    >\n      Get rewards\n    </Button>\n  )\n}\n\nexport default React.memo(ConfirmButton)\n","import React, { useCallback, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\n\nimport { actions } from 'Redux/Store'\nimport { RewardType } from 'Redux/Store/Expeditions/Expeditions/'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\nimport SectionHeadline from 'components/atoms/SectionHeadline'\n\nimport RewardSelect from './RewardSelect'\nimport ConfirmButton from './ConfirmButton'\n\nconst getTreasureOptionsByTier = (tier: 1 | 2 | 3 | 4) => [\n  ...([2, 3, 4].includes(tier) ? [{ level: 1 }] : []),\n  ...([3, 4].includes(tier) ? [{ level: 2 }] : []),\n  ...([4].includes(tier) ? [{ level: 3 }] : []),\n]\n\ntype OwnProps = {\n  battle: types.Battle\n}\n\nconst mapStateToProps = () => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  rollLoss: actions.Expeditions.Expeditions.rollLoss,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst LossRewardTypeSelection = ({ battle, rollLoss }: Props) => {\n  const treasureOptions = getTreasureOptionsByTier(battle.config.tier)\n\n  // FIXME does not work, if mage is not shown as option, due to no available mages\n  const [rewardSelectValue, updateRewardSelectValue] = useState<RewardType>(\n    'mage'\n  )\n\n  const handleRewardSelectChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      updateRewardSelectValue(e.target.value as RewardType)\n    },\n    [updateRewardSelectValue]\n  )\n\n  const handleRewardConfirmation = useCallback(() => {\n    rollLoss(battle, rewardSelectValue)\n  }, [rewardSelectValue, battle, rollLoss])\n\n  const tryIndex = battle.tries - 1\n  const rewardsConfig =\n    battle.config.lossRewards && battle.config.lossRewards !== 'skip'\n      ? battle.config.lossRewards[tryIndex]\n      : undefined\n\n  if (rewardsConfig && rewardsConfig.type !== 'regular') {\n    return (\n      <React.Fragment>\n        <ModalBodyWrapper hasFooter={true}>\n          <SectionHeadline>Get your rewards</SectionHeadline>\n        </ModalBodyWrapper>\n        <ModalFooterWrapper>\n          <ConfirmButton\n            handleRewardConfirmation={handleRewardConfirmation}\n            data-test=\"btn-confirm-reward\"\n          />\n        </ModalFooterWrapper>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper hasFooter={true}>\n        <SectionHeadline>Select an item to roll</SectionHeadline>\n        <RewardSelect\n          expeditionId={battle.expeditionId}\n          rewardSelectValue={rewardSelectValue}\n          handleRewardSelectChange={handleRewardSelectChange}\n          treasureOptions={treasureOptions}\n          data-test=\"select-loss-reward\"\n        />\n      </ModalBodyWrapper>\n      <ModalFooterWrapper>\n        <ConfirmButton\n          handleRewardConfirmation={handleRewardConfirmation}\n          data-test=\"btn-confirm-reward\"\n        />\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(LossRewardTypeSelection))\n","import React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\nimport { RootState, actions } from 'Redux/Store'\n\nimport LossRewardTypeSelection from './LossRewardTypeSelection'\nimport RewardScreen from '../../RewardScreen'\nimport { InputBranch } from 'Redux/Store/Expeditions/Expeditions/actions'\n\ntype OwnProps = {\n  battle: types.Battle\n  hide: () => void\n  showNext?: () => void\n}\n\nconst mapStateToProps = (_: RootState, ownProps: OwnProps) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  acceptLoss: actions.Expeditions.Expeditions.acceptLoss,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst BattleLost = ({ battle, hide, showNext, acceptLoss }: Props) => {\n  const acceptLossCallback = useCallback(\n    (branch: InputBranch, banished: string[], newSupplyIds: string[]) => {\n      if (battle.config.onLoss === 'skip') {\n        hide()\n      }\n\n      return acceptLoss(branch, banished, newSupplyIds)\n    },\n    [acceptLoss, hide, battle.config.onLoss]\n  )\n\n  const showNextCallback = useCallback(() => {\n    if (battle.config.onLoss === 'skip') {\n      return\n    } else if (showNext) {\n      showNext()\n    }\n  }, [battle.config.onLoss, showNext])\n\n  useEffect(() => {\n    if (battle.config.lossRewards === 'skip' && showNext) {\n      hide()\n      showNext()\n    }\n  }, [battle.config.lossRewards, showNext, hide])\n\n  return (\n    <React.Fragment>\n      {!battle.rewards ? (\n        <LossRewardTypeSelection battle={battle} />\n      ) : (\n        <RewardScreen\n          callback={acceptLossCallback}\n          branch={battle}\n          hide={hide}\n          showNext={showNextCallback}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BattleLost))\n","import React from 'react'\n\nimport InfoItem from 'components/molecules/InfoItem'\nimport P from 'components/atoms/P'\n\ntype Props = {\n  info: string\n}\n\nconst WinOverview = ({ info }: Props) => {\n  return (\n    <>\n      <P>Expedition complete!</P>\n      <InfoItem label=\"Score\" info={info} />\n    </>\n  )\n}\n\nexport default React.memo(WinOverview)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  handleFinish: () => void\n}\n\nconst FinishExpeditionButton = ({ handleFinish }: Props) => {\n  return (\n    <Button\n      onClick={handleFinish}\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      Finish Expedition\n    </Button>\n  )\n}\n\nexport default React.memo(FinishExpeditionButton)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\n\nimport WinOverview from './WinOverview'\nimport FinishExpeditionButton from './FinishExpeditionButton'\n\ntype OwnProps = {\n  branch: types.Branch\n  hide: () => void\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    expedition: selectors.Expeditions.Expeditions.getExpeditionById(state, {\n      expeditionId: ownProps.branch.expeditionId,\n    }),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst ExpeditionFinished = ({ hide, expedition }: Props) => {\n  const handleFinish = useCallback(() => {\n    hide()\n  }, [hide])\n\n  return (\n    <React.Fragment>\n      <ModalBodyWrapper>\n        <WinOverview info={expedition.score.toString()} />\n      </ModalBodyWrapper>\n      <ModalFooterWrapper>\n        <FinishExpeditionButton handleFinish={handleFinish} />\n      </ModalFooterWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(ExpeditionFinished))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport BranchWrapper from '../BranchWrapper'\nimport { useStateModals } from './useStateModals'\nimport { handleBattleClick } from './handleBattleClick'\nimport BattleTile from './BattleTile'\nimport BeforeBattle from './BeforeBattle'\nimport BattleStarted from './BattleStarted'\nimport BattleWon from './BattleWon'\nimport BattleLost from './BattleLost'\nimport ExpeditionFinished from '../ExpeditionFinished'\n\ntype OwnProps = {\n  battle: types.Battle\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const nemesisId = ownProps.battle.nemesisId\n  const nemesis = nemesisId\n    ? selectors.Settings.Expansions.Nemeses.content.getById(state, {\n        id: nemesisId,\n      })\n    : null\n\n  return {\n    nemesis,\n    expeditionIsFinished:\n      selectors.Expeditions.Expeditions.getExpeditionIsFinished(state, {\n        expeditionId: ownProps.battle.expeditionId,\n      }),\n  }\n}\n\nconst mapDispatchToProps = {\n  rollBattle: actions.Expeditions.Expeditions.rollBattle,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Battle = ({\n  battle,\n  expeditionIsFinished,\n  nemesis,\n  rollBattle,\n  ...rest\n}: Props) => {\n  const {\n    beforeBattle,\n    battleStarted,\n    battleLost,\n    battleWon,\n    expeditionComplete,\n  } = useStateModals()\n\n  const handleClick = useCallback(\n    () =>\n      handleBattleClick({\n        expeditionIsFinished,\n        expeditionComplete,\n        battle,\n        beforeBattle,\n        battleStarted,\n        battleLost,\n        battleWon,\n        rollBattle,\n      }),\n    [\n      expeditionIsFinished,\n      expeditionComplete,\n      battle,\n      beforeBattle,\n      battleStarted,\n      battleLost,\n      battleWon,\n      rollBattle,\n    ]\n  )\n\n  const battleWonCallback = useCallback(\n    (expeditionIsFinished) => {\n      if (expeditionIsFinished) {\n        expeditionComplete.show()\n      } else {\n        battleWon.show()\n      }\n    },\n    [battleWon, expeditionComplete]\n  )\n\n  return (\n    <div {...rest}>\n      <BranchWrapper\n        disabled={battle.status === 'locked' || battle.status === 'finished'}\n        onClick={handleClick}\n        data-test=\"btn-battle\"\n      >\n        <BattleTile battle={battle} nemesis={nemesis?.name || '?'} />\n      </BranchWrapper>\n\n      <beforeBattle.RenderModal titleColor=\"#333\" titleLabel=\"Before Fight\">\n        <BeforeBattle\n          hide={beforeBattle.hide}\n          battle={battle}\n          nemesis={nemesis ? nemesis : undefined}\n          showNext={battleStarted.show}\n        />\n      </beforeBattle.RenderModal>\n\n      <battleStarted.RenderModal titleColor=\"#333\" titleLabel=\"Resolve battle\">\n        <BattleStarted\n          hide={battleStarted.hide}\n          battle={battle}\n          showNextOnWin={battleWonCallback}\n          showNextOnLoss={battleLost.show}\n        />\n      </battleStarted.RenderModal>\n\n      <battleLost.RenderModal titleColor=\"#333\" titleLabel=\"Battle lost\">\n        <BattleLost\n          hide={battleLost.hide}\n          battle={battle}\n          showNext={beforeBattle.show}\n        />\n      </battleLost.RenderModal>\n\n      <battleWon.RenderModal titleColor=\"#333\" titleLabel=\"Rewards\">\n        <BattleWon hide={battleWon.hide} battle={battle} />\n      </battleWon.RenderModal>\n\n      <expeditionComplete.RenderModal\n        titleColor=\"#333\"\n        titleLabel=\"Congratulations\"\n      >\n        <ExpeditionFinished branch={battle} hide={expeditionComplete.hide} />\n      </expeditionComplete.RenderModal>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Battle))\n","import { useModal } from 'hooks/useModal'\n\nexport const useStateModals = () => {\n  const beforeBattle = useModal()\n  const battleStarted = useModal()\n  const battleLost = useModal()\n  const battleWon = useModal()\n  const expeditionComplete = useModal()\n\n  return {\n    beforeBattle,\n    battleStarted,\n    battleLost,\n    battleWon,\n    expeditionComplete,\n  }\n}\n","import { useModal } from 'hooks/useModal'\nimport * as types from 'aer-types/types'\nimport { actions } from 'Redux/Store'\n\ntype ModalType = ReturnType<typeof useModal>\n\ntype Config = {\n  expeditionIsFinished: boolean\n  expeditionComplete: ModalType\n  battle: types.Battle\n  beforeBattle: ModalType\n  battleStarted: ModalType\n  battleLost: ModalType\n  battleWon: ModalType\n  rollBattle: typeof actions.Expeditions.Expeditions.rollBattle\n}\n\nexport const handleBattleClick = ({\n  expeditionIsFinished,\n  expeditionComplete,\n  battle,\n  beforeBattle,\n  battleStarted,\n  battleLost,\n  battleWon,\n  rollBattle,\n}: Config) => {\n  if (expeditionIsFinished) {\n    expeditionComplete.show()\n  } else {\n    switch (battle.status) {\n      case 'unlocked': {\n        if (!battle.nemesisId) {\n          rollBattle(battle)\n        }\n        beforeBattle.show()\n        break\n      }\n\n      case 'before_battle': {\n        beforeBattle.show()\n        break\n      }\n\n      case 'started': {\n        battleStarted.show()\n        break\n      }\n\n      case 'lost': {\n        battleLost.show()\n        break\n      }\n\n      case 'won': {\n        battleWon.show()\n        break\n      }\n\n      case 'finished': {\n        // don't do anything\n        break\n      }\n\n      default: {\n        // don't do anything\n        break\n      }\n    }\n  }\n}\n","import styled from 'styled-components'\nimport { Status } from 'aer-types/types'\n\nimport UnlockedBase from '../../Unlocked'\n\ntype Props = {\n  status: Status\n}\n\nconst Unlocked = styled(UnlockedBase)<Props>`\n  background: ${(props) =>\n    props.status === 'unlocked'\n      ? props.theme.colors.turnOrderCards.player3.normal\n      : props.theme.colors.turnOrderCards.player3.light};\n`\n\nexport default Unlocked\n","import styled from 'styled-components/macro'\n\nconst UnlockedIcon = styled('i')`\n  margin-left: 25px;\n  margin-bottom: 10px;\n  font-size: 75px;\n  color: #fff;\n`\n\nexport default UnlockedIcon\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\nimport Tile from 'components/molecules/Tile'\n\nimport Locked from '../../Locked'\nimport Unlocked from './Unlocked'\n\nimport LockIcon from '@material-ui/icons/Lock'\nimport UnlockedIcon from './UnlockedIcon'\n\ntype Props = {\n  narrative: types.Narrative\n  theme?: any\n}\n\nconst RenderBody = ({ narrative }: Props) => {\n  switch (narrative.status) {\n    case 'locked':\n      return (\n        <Locked>\n          <LockIcon />\n        </Locked>\n      )\n\n    case 'unlocked':\n    case 'finished':\n    default: {\n      return (\n        <Unlocked status={narrative.status}>\n          <UnlockedIcon className=\"ra ra-lg ra-quill-ink\" />\n        </Unlocked>\n      )\n    }\n  }\n}\n\nconst NarrativeTile = ({ narrative, theme }: Props) => {\n  return (\n    <Tile\n      body={<RenderBody narrative={narrative} />}\n      bgColor={\n        narrative.status === 'finished'\n          ? theme.colors.turnOrderCards.player3.light\n          : theme.colors.turnOrderCards.player3.normal\n      }\n      fontColor={theme.colors.text.primary}\n    />\n  )\n}\n\nexport default withTheme(React.memo(NarrativeTile))\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  label: string\n  handleClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nconst DecisionButton = ({ label, handleClick, ...rest }: Props) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={handleClick}\n      {...rest}\n    >\n      {label}\n    </Button>\n  )\n}\n\nexport default React.memo(DecisionButton)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\nimport { RootState, actions } from 'Redux/Store'\n\nimport DecisionButton from 'components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/DecisionButton'\n\nconst renderDecisions = (\n  decisions: string[],\n  handleClick: (decision: number) => void\n) => {\n  return decisions.map((decision, index) => (\n    <DecisionButton\n      key={index}\n      label={decision}\n      handleClick={() => handleClick(index)}\n    />\n  ))\n}\n\ntype OwnProps = {\n  narrative: types.Narrative\n  clickCallback: () => void\n}\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  resolveNarrative: actions.Expeditions.Expeditions.resolveNarrative,\n  finishExpedition: actions.Expeditions.Expeditions.finishExpedition,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Decisions = ({\n  narrative,\n  clickCallback,\n  resolveNarrative,\n  finishExpedition,\n}: Props) => {\n  const { decisions } = narrative.config\n  const { expeditionId, id } = narrative\n\n  const clickHandler = useCallback(\n    (decision: number) => {\n      clickCallback()\n      resolveNarrative({\n        expeditionId,\n        narrativeId: id,\n        decision,\n      })\n    },\n    [clickCallback, resolveNarrative, expeditionId, id]\n  )\n\n  const finishHandler = useCallback(() => {\n    clickCallback()\n    finishExpedition(narrative)\n  }, [finishExpedition, narrative, clickCallback])\n\n  return (\n    <>\n      {decisions ? (\n        renderDecisions(decisions, clickHandler)\n      ) : (\n        <DecisionButton label=\"Finish Expedition\" handleClick={finishHandler} />\n      )}\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Decisions))\n","import React, { useCallback } from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport ModalBodyWrapper from 'components/atoms/ModalBodyWrapper'\nimport ModalFooterWrapper from 'components/atoms/ModalFooterWrapper'\nimport Text from 'components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/Text'\nimport Decisions from 'components/pages/Expeditions/Expedition/Branch/Narrative/NarrativeUnlocked/Decisions'\n\ntype Props = {\n  hide: () => void\n  narrative: types.Narrative\n}\n\nconst NarrativeUnlocked = ({ narrative, hide }: Props) => {\n  const handleClick = useCallback(() => {\n    hide()\n  }, [hide])\n\n  return (\n    <>\n      <ModalBodyWrapper hasFooter={true}>\n        <Text>{narrative.config.text}</Text>\n      </ModalBodyWrapper>\n\n      <ModalFooterWrapper>\n        <Decisions narrative={narrative} clickCallback={handleClick} />\n      </ModalFooterWrapper>\n    </>\n  )\n}\n\nexport default React.memo(NarrativeUnlocked)\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\nimport { RootState, selectors } from 'Redux/Store'\nimport BranchWrapper from '../BranchWrapper'\nimport NarrativeTile from './NarrativeTile'\nimport { handleNarrativeClick } from 'components/pages/Expeditions/Expedition/Branch/Narrative/handleNarrativeClick'\nimport { useModal } from 'hooks/useModal'\nimport NarrativeUnlocked from './NarrativeUnlocked'\nimport ExpeditionFinished from '../ExpeditionFinished'\n\ntype OwnProps = {\n  narrative: types.Narrative\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  expeditionIsFinished: selectors.Expeditions.Expeditions.getExpeditionIsFinished(\n    state,\n    { expeditionId: ownProps.narrative.expeditionId }\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Narrative = ({ narrative, expeditionIsFinished, ...rest }: Props) => {\n  const narrativeUnlocked = useModal()\n  const expeditionComplete = useModal()\n\n  const handleClick = useCallback(\n    () =>\n      handleNarrativeClick({\n        narrative,\n        expeditionIsFinished,\n        expeditionComplete,\n        narrativeUnlocked,\n      }),\n    [narrative, expeditionIsFinished, expeditionComplete, narrativeUnlocked]\n  )\n\n  return (\n    <div {...rest}>\n      <BranchWrapper\n        disabled={\n          narrative.status === 'locked' || narrative.status === 'finished'\n        }\n        onClick={handleClick}\n        data-test=\"btn-narrative\"\n      >\n        <NarrativeTile narrative={narrative} />\n      </BranchWrapper>\n\n      <narrativeUnlocked.RenderModal titleColor=\"#333\" titleLabel=\"Narrative\">\n        <NarrativeUnlocked\n          hide={narrativeUnlocked.hide}\n          narrative={narrative}\n        />\n      </narrativeUnlocked.RenderModal>\n\n      <expeditionComplete.RenderModal\n        titleColor=\"#333\"\n        titleLabel=\"Congratulations\"\n      >\n        <ExpeditionFinished branch={narrative} hide={expeditionComplete.hide} />\n      </expeditionComplete.RenderModal>\n    </div>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Narrative))\n","import { useModal } from 'hooks/useModal'\nimport * as types from 'aer-types/types'\n\ntype ModalType = ReturnType<typeof useModal>\n\ntype Config = {\n  narrative: types.Narrative\n  expeditionIsFinished: boolean\n  expeditionComplete: ModalType\n  narrativeUnlocked: ModalType\n}\n\nexport const handleNarrativeClick = ({\n  narrative,\n  expeditionIsFinished,\n  expeditionComplete,\n  narrativeUnlocked,\n}: Config) => {\n  if (expeditionIsFinished) {\n    expeditionComplete.show()\n  } else {\n    switch (narrative.status) {\n      case 'unlocked': {\n        narrativeUnlocked.show()\n        break\n      }\n\n      case 'finished': {\n        // don't do anything\n        break\n      }\n\n      default: {\n        // don't do anything\n        break\n      }\n    }\n  }\n}\n","import styled from 'styled-components'\nimport { Status } from 'aer-types/types'\n\nimport UnlockedBase from '../../Unlocked'\n\ntype Props = {\n  status: Status\n}\n\nconst Unlocked = styled(UnlockedBase)<Props>`\n  background: ${(props) =>\n    props.status === 'unlocked'\n      ? props.theme.colors.cards.treasure3.normal\n      : props.theme.colors.cards.treasure3.light};\n`\n\nexport default Unlocked\n","import styled from 'styled-components/macro'\n\nconst UnlockedIcon = styled('i')`\n  margin-bottom: 10px;\n  font-size: 75px;\n  color: #fff;\n`\n\nexport default UnlockedIcon\n","import React from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport * as types from 'aer-types/types'\n\nimport Tile from 'components/molecules/Tile'\n\nimport Locked from '../../Locked'\nimport Unlocked from './Unlocked'\n\nimport LockIcon from '@material-ui/icons/Lock'\nimport UnlockedIcon from './UnlockedIcon'\n\ntype Props = {\n  reward: types.Reward\n  theme?: any\n}\n\nconst RenderBody = ({ reward }: Props) => {\n  switch (reward.status) {\n    case 'locked':\n      return (\n        <Locked>\n          <LockIcon />\n        </Locked>\n      )\n\n    case 'unlocked':\n    case 'finished':\n    default: {\n      return (\n        <Unlocked status={reward.status}>\n          <UnlockedIcon className=\"ra ra-lg ra-diamond\" />\n        </Unlocked>\n      )\n    }\n  }\n}\n\nconst RewardTile = ({ reward, theme }: Props) => {\n  return (\n    <Tile\n      body={<RenderBody reward={reward} />}\n      bgColor={\n        reward.status === 'finished'\n          ? theme.colors.cards.treasure3.light\n          : theme.colors.cards.treasure3.normal\n      }\n      fontColor={theme.colors.text.primary}\n    />\n  )\n}\n\nexport default withTheme(React.memo(RewardTile))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\nimport { RootState, actions } from 'Redux/Store'\n\nimport RewardScreen from '../../RewardScreen'\n\ntype OwnProps = {\n  hide: () => void\n  reward: types.Reward\n}\n\nconst mapStateToProps = (_: RootState, ownProps: OwnProps) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  acceptRewards: actions.Expeditions.Expeditions.acceptRewards,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst RewardUnlocked = ({ reward, hide, acceptRewards }: Props) => {\n  return (\n    <>\n      {!reward.rewards ? (\n        <div>Loading...</div>\n      ) : (\n        <RewardScreen callback={acceptRewards} branch={reward} hide={hide} />\n      )}\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(RewardUnlocked))\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as types from 'aer-types/types'\nimport { RootState, selectors, actions } from 'Redux/Store'\nimport BranchWrapper from '../BranchWrapper'\nimport { useModal } from 'hooks/useModal'\nimport ExpeditionFinished from '../ExpeditionFinished'\nimport RewardTile from './RewardTile'\nimport { handleRewardClick } from './handleRewardClick'\nimport RewardUnlocked from './RewardUnlocked'\n\ntype OwnProps = {\n  reward: types.Reward\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  expeditionIsFinished: selectors.Expeditions.Expeditions.getExpeditionIsFinished(\n    state,\n    { expeditionId: ownProps.reward.expeditionId }\n  ),\n})\n\nconst mapDispatchToProps = {\n  generateRewards: actions.Expeditions.Expeditions.generateRewards,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Reward = ({\n  reward,\n  expeditionIsFinished,\n  generateRewards,\n  ...rest\n}: Props) => {\n  const rewardUnlocked = useModal()\n  const expeditionComplete = useModal()\n\n  const handleClick = useCallback(\n    () =>\n      handleRewardClick({\n        reward,\n        expeditionIsFinished,\n        expeditionComplete,\n        rewardUnlocked,\n        generateRewards,\n      }),\n    [\n      reward,\n      expeditionIsFinished,\n      expeditionComplete,\n      rewardUnlocked,\n      generateRewards,\n    ]\n  )\n\n  return (\n    <div {...rest}>\n      <BranchWrapper\n        disabled={reward.status === 'locked' || reward.status === 'finished'}\n        onClick={handleClick}\n        data-test=\"btn-narrative\"\n      >\n        <RewardTile reward={reward} />\n      </BranchWrapper>\n\n      <rewardUnlocked.RenderModal titleColor=\"#333\" titleLabel=\"Reward\">\n        <RewardUnlocked hide={rewardUnlocked.hide} reward={reward} />\n      </rewardUnlocked.RenderModal>\n\n      <expeditionComplete.RenderModal\n        titleColor=\"#333\"\n        titleLabel=\"Congratulations\"\n      >\n        <ExpeditionFinished branch={reward} hide={expeditionComplete.hide} />\n      </expeditionComplete.RenderModal>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Reward))\n","import { actions } from 'Redux/Store'\n\nimport { useModal } from 'hooks/useModal'\nimport * as types from 'aer-types/types'\n\ntype ModalType = ReturnType<typeof useModal>\n\ntype Config = {\n  reward: types.Reward\n  expeditionIsFinished: boolean\n  expeditionComplete: ModalType\n  rewardUnlocked: ModalType\n  generateRewards: typeof actions.Expeditions.Expeditions.generateRewards\n}\n\nexport const handleRewardClick = ({\n  reward,\n  expeditionIsFinished,\n  expeditionComplete,\n  rewardUnlocked,\n  generateRewards,\n}: Config) => {\n  if (expeditionIsFinished) {\n    generateRewards({ reward })\n    expeditionComplete.show()\n  } else {\n    switch (reward.status) {\n      case 'unlocked': {\n        if (!reward.rewards) {\n          generateRewards({ reward })\n        }\n        rewardUnlocked.show()\n        break\n      }\n\n      case 'finished': {\n        // don't do anything\n        break\n      }\n\n      default: {\n        // don't do anything\n        break\n      }\n    }\n  }\n}\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\nimport Battle from 'components/pages/Expeditions/Expedition/Branch/Battle'\nimport Narrative from 'components/pages/Expeditions/Expedition/Branch/Narrative'\nimport Reward from 'components/pages/Expeditions/Expedition/Branch/Reward'\n\ntype Props = {\n  branch: types.Branch\n}\n\nconst Branch = ({ branch, ...rest }: Props) => {\n  switch (branch.type) {\n    case 'battle': {\n      return <Battle battle={branch} {...rest} />\n    }\n\n    case 'narrative': {\n      return <Narrative narrative={branch} {...rest} />\n    }\n\n    case 'reward': {\n      return <Reward reward={branch} />\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport default React.memo(Branch)\n","import styled from 'styled-components'\n\nconst Wrapper = styled('div')`\n  margin: 16px 0 24px;\n`\n\nexport default Wrapper\n","import React from 'react'\n\nimport H2 from '../../../../atoms/H2'\nimport P from '../../../../atoms/P'\n\nimport Wrapper from './Wrapper'\n\ntype Props = {\n  title: string\n  score: number\n}\n\nconst Header = ({ title, score }: Props) => (\n  <Wrapper>\n    <H2>Expedition {title}</H2>\n    <P>\n      <b>Current Score:</b> {score}\n    </P>\n  </Wrapper>\n)\n\nexport default React.memo(Header)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { RootState, selectors } from 'Redux/Store'\nimport * as types from 'aer-types/types'\n\nimport BackLink from 'components/molecules/BackLink'\n\nimport Barracks from './Barracks'\nimport Branch from './Branch/'\nimport Header from './Header'\n\nconst renderBranches = (branches: types.Branches) =>\n  Object.values(branches).map((branch, index) => (\n    <Branch key={branch.id} branch={branch} data-test={`battle-${index}`} />\n  ))\n\ntype OwnProps = {\n  id: string\n}\n\nconst mapStateToProps = (state: RootState, props: OwnProps) => ({\n  expedition: selectors.Expeditions.Expeditions.getExpeditionById(state, {\n    expeditionId: props.id,\n  }),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Expedition = ({ expedition }: Props) => {\n  const isLoading = !expedition\n\n  if (isLoading) {\n    return <CircularProgress />\n  }\n\n  return (\n    <React.Fragment>\n      <BackLink\n        to=\"/expeditions\"\n        label=\"Back to overview\"\n        data-test=\"backlink\"\n      />\n      <Header\n        title={expedition.name || expedition.id}\n        score={expedition.score}\n      />\n\n      {renderBranches(expedition.sequence.branches)}\n      <Barracks expedition={expedition} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Expedition))\n","import styled from 'styled-components'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport { NavLink } from 'react-router-dom'\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: ${props => props.theme.colors.text.hint};\n  height: calc(100% + 1px);\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-top: 2px solid transparent;\n  transition: all 0.2 ease-in-out;\n  margin-top: -1px;\n  padding: 0 16px;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n\n  span {\n    display: none;\n  }\n\n  &.active {\n    color: ${props => props.theme.colors.secondary['A400']};\n    border-color: ${props => props.theme.colors.secondary['A400']};\n  }\n\n  &:hover,\n  &:active {\n    background-color: #e6e6e6;\n  }\n\n  @media all and (min-width: 480px) {\n    i {\n      margin-right: 8px;\n    }\n\n    span {\n      display: inline-block;\n      font-size: 0.875rem;\n    }\n  }\n`\n\nexport default withTheme(StyledLink)\n","import React from 'react'\n\nimport StyledLink from './StyledLink'\n\ntype Props = {\n  to: string\n  label: string\n  icon: string\n}\n\nconst Link = ({ to, label, icon }: Props) => (\n  <StyledLink to={to} isActive={(match: any) => (match ? true : false)}>\n    <i className={`ra ra-lg ${icon}`} />\n    <span>{label}</span>\n  </StyledLink>\n)\n\nexport default React.memo(Link)\n","import styled from 'styled-components'\n\nimport { withTheme } from 'styled-components/macro'\n\nconst Wrapper = styled('div')`\n  position: fixed;\n  z-index: 10;\n  bottom: 0;\n  left: 0;\n  padding: 0;\n  background: ${props => props.theme.colors.white};\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: 56px;\n  border-top: 2px solid #e6e6e6;\n`\n\nexport default withTheme(Wrapper)\n","import React from 'react'\n\nimport Link from './Link'\nimport Wrapper from './Wrapper'\n\nconst BottomNavigation = () => (\n  <Wrapper>\n    <Link to=\"/randomizer/nemesis\" label=\"Nemesis\" icon=\"ra-broken-skull\" />\n    <Link\n      to=\"/randomizer/basic-nemesis-cards\"\n      label=\"Nemesis Cards\"\n      icon=\" ra-monster-skull\"\n    />\n    <Link to=\"/randomizer/mages\" label=\"Mages\" icon=\"ra-crystal-wand\" />\n    <Link to=\"/randomizer/supply\" label=\"Supply\" icon=\"ra-campfire\" />\n  </Wrapper>\n)\n\nexport default React.memo(BottomNavigation)\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst ExpansionName = styled(Typography)`\n  color: #fff;\n`\n\nExpansionName.displayName = 'ExpansionName'\n\nexport default ExpansionName\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  color: #fff;\n`\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\nimport { Nemesis } from 'aer-types/types'\n\nimport ExpansionName from './ExpansionName'\nimport Name from './Name'\n\ntype Props = {\n  nemesis: Nemesis\n  expansionName: string\n}\n\nconst Body = ({ nemesis, expansionName }: Props) => (\n  <React.Fragment>\n    <ExpansionName color=\"textSecondary\">{expansionName}</ExpansionName>\n    <Name variant=\"h6\" component=\"h2\">\n      {nemesis['name']}\n    </Name>\n  </React.Fragment>\n)\n\nexport default React.memo(Body)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { withTheme } from 'styled-components/macro'\n\nimport { Nemesis } from 'aer-types/types'\n\nimport Tile from 'components/molecules/Tile'\n\nimport Body from './Body'\nimport { RootState, selectors } from 'Redux/Store'\n\ntype OwnProps = {\n  nemesis: Nemesis\n  showNemesisDetails: (id: string) => void\n  theme: any\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  return {\n    expansion: selectors.Settings.Expansions.Expansions.content.getExpansionById(\n      state,\n      { expansionId: ownProps.nemesis.expansion }\n    ),\n  }\n}\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst NemesisTile = ({\n  nemesis,\n  showNemesisDetails,\n  theme,\n  expansion,\n}: Props) => {\n  return (\n    <Tile\n      body={<Body nemesis={nemesis} expansionName={expansion.name} />}\n      bgColor={theme.colors.turnOrderCards.nemesis.normal}\n      fontColor={theme.colors.white}\n      icon={theme.icons.nemesis}\n      iconColor={theme.colors.cards.nemesis.color}\n      showDetails={() => showNemesisDetails(nemesis.id)}\n    />\n  )\n}\n\nexport default withTheme(\n  connect(mapStateToProps, mapDispatchToProps)(React.memo(NemesisTile))\n)\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyNemesisHint = styled(Typography)``\n\nEmptyNemesisHint.displayName = 'EmptyNemesisHint'\n\nexport default EmptyNemesisHint\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport A from '../atoms/A'\n\nconst NoSelectedExpansions = () => (\n  <Typography paragraph>\n    There is currently no standalone set selected. Please activate at least one\n    standalone set in the settings.{' '}\n    <A to=\"/settings\">Click here to go to the settings</A>.\n  </Typography>\n)\n\nexport default React.memo(NoSelectedExpansions)\n","import React, { useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\n\nimport NemesisTile from './NemesisTile'\nimport EmptyNemesisHint from './EmptyNemesisHint'\n\nimport ShuffleButton from 'components/atoms/ShuffleButton'\nimport NoSelectedExpansions from 'components/molecules/NoSelectedExpansions'\n\nimport NemesisModal from 'components/molecules/NemesisModal'\nimport { useModal } from 'hooks/useModal'\n\nconst mapStateToProps = (state: RootState) => {\n  const nemesis = selectors.Randomizer.Nemesis.getNemesis(state)\n\n  return {\n    hasStandaloneExpansionSelected: selectors.Settings.Expansions.Expansions.getHasStandaloneExpansion(\n      state\n    ),\n    availableNemeses: selectors.Settings.Expansions.getSelectedNemesesForSelectedExpansions(\n      state\n    ),\n    randomNemesis: nemesis\n      ? selectors.Settings.Expansions.Nemeses.content.getById(state, {\n          id: nemesis.id,\n        })\n      : undefined,\n  }\n}\n\nconst mapDispatchToProps = {\n  setRandomNemesis: actions.Randomizer.Nemesis.setRandomNemesis,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Nemeses = ({\n  hasStandaloneExpansionSelected,\n  randomNemesis,\n  availableNemeses,\n  setRandomNemesis,\n}: Props) => {\n  const { show, RenderModal } = useModal()\n  const [modalContentId, setModalContentId] = useState<string>('')\n\n  const handleNemesisDetails = (nemesisId: string) => {\n    show()\n    setModalContentId(nemesisId)\n  }\n\n  const handleRandomization = useCallback(() => {\n    setRandomNemesis(availableNemeses)\n  }, [availableNemeses, setRandomNemesis])\n\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  return (\n    <React.Fragment>\n      {randomNemesis ? (\n        <NemesisTile\n          nemesis={randomNemesis}\n          showNemesisDetails={handleNemesisDetails}\n        />\n      ) : (\n        <EmptyNemesisHint>Tab button to spawn new nemesis!</EmptyNemesisHint>\n      )}\n      <ShuffleButton\n        onClick={handleRandomization}\n        color=\"primary\"\n        variant=\"extended\"\n        withBottomNav={true}\n      >\n        Open Breach\n      </ShuffleButton>\n      <NemesisModal id={modalContentId} RenderModal={RenderModal} />\n    </React.Fragment>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Nemeses))\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\ntype Props = {\n  selectedValue: string\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n  label: string\n  optionsCount: number\n}\n\nconst renderOptions = (optionsCount: number) =>\n  Array.from(Array(optionsCount).keys()).map(i => {\n    const optionLabel = (i + 1).toString() // our array starts a 0 -> therefore '+1'\n    return (\n      <FormControlLabel\n        value={optionLabel}\n        control={<Radio />}\n        label={optionLabel}\n      />\n    )\n  })\n\nconst AmountPicker = ({\n  selectedValue,\n  handleAmountChange,\n  label,\n  optionsCount,\n}: Props) => (\n  <Card>\n    <CardContent>\n      <FormControl component={'fieldset' as 'div'}>\n        <FormLabel>{label}</FormLabel>\n        <RadioGroup\n          aria-label={label}\n          name={label.replace(/\\s/g, '').toLowerCase()}\n          value={selectedValue}\n          onChange={handleAmountChange}\n          row={true}\n        >\n          {renderOptions(optionsCount)}\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n)\n\nexport default React.memo(AmountPicker)\n","import React from 'react'\n\nimport AmountPicker from 'components/molecules/AmountPicker'\n\ntype Props = {\n  selectedValue: string\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}\n\nconst MageCountPicker = ({ selectedValue, handleAmountChange }: Props) => (\n  <AmountPicker\n    label=\"Amount of Mages\"\n    selectedValue={selectedValue}\n    handleAmountChange={handleAmountChange}\n    optionsCount={4}\n  />\n)\n\nexport default React.memo(MageCountPicker)\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = styled(Typography)`\n  margin-top: 24px;\n`\n\nEmptyMageListHint.displayName = 'EmptyMageListHint'\n\nexport default EmptyMageListHint\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport { MageCount } from 'Redux/Store/Randomizer/Mages/Count'\n\nimport MageList from 'components/molecules/MageList'\nimport NoSelectedExpansions from 'components/molecules/NoSelectedExpansions'\nimport ShuffleButton from 'components/atoms/ShuffleButton'\n\nimport MageCountPicker from './MageCountPicker'\nimport EmptyMageListHint from './EmptyMageListHint'\n\nconst mapStateToProps = (state: RootState) => {\n  const mageIds = selectors.Randomizer.Mages.Recruited.getMages(state)\n\n  return {\n    hasStandaloneExpansionSelected: selectors.Settings.Expansions.Expansions.getHasStandaloneExpansion(\n      state\n    ),\n    availableMages: selectors.Settings.Expansions.getSelectedMagesForSelectedExpansions(\n      state\n    ),\n    mageCount: selectors.Randomizer.Mages.Count.getCount(state),\n    mages: mageIds.map(mageId =>\n      selectors.Settings.Expansions.Mages.content.getById(state, {\n        id: mageId.id,\n      })\n    ),\n  }\n}\n\nconst mapDispatchToProps = {\n  setMageCount: actions.Randomizer.Mages.Count.setCount,\n  setMages: actions.Randomizer.Mages.Recruited.setRandomMages,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Mages = ({\n  hasStandaloneExpansionSelected,\n  availableMages,\n  mageCount,\n  setMageCount,\n  setMages,\n  mages,\n}: Props) => {\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  const handleShuffle = () => {\n    setMages(availableMages, mageCount)\n  }\n\n  const noMagesGeneratedYet = mages.length === 0\n\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMageCount(parseInt(e.currentTarget.value) as MageCount)\n  }\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={mageCount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {noMagesGeneratedYet ? (\n        <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n      ) : (\n        <MageList mages={mages} />\n      )}\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\"\n        variant=\"extended\"\n        withBottomNav={true}\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Mages))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\n\nimport NoSelectedExpansions from 'components/molecules/NoSelectedExpansions'\nimport SupplyList from 'components/molecules/SupplyList'\nimport MarketSelect from 'components/molecules/MarketSelect'\n\nimport ShuffleButton from 'components/atoms/ShuffleButton'\n\nconst getCustomAndPredefined = selectors.Settings.SupplySetups.makeGetCustomAndPredefined()\nconst mapStateToProps = (state: RootState) => {\n  const supplyIds = selectors.Randomizer.Supply.RandomSetup.getTiles(state)\n  const selectedCardsForSelectedExpansions = selectors.Settings.Expansions.getSelectedCardsForSelectedExpansions(\n    state\n  )\n  const lockedCards = selectors.Randomizer.Supply.LockedCards.getLockedCards(\n    state\n  )\n  const availableCards = selectedCardsForSelectedExpansions.filter(\n    (selected) =>\n      lockedCards.findIndex((locked) => locked.id === selected.id) === -1\n  )\n\n  return {\n    hasStandaloneExpansionSelected: selectors.Settings.Expansions.Expansions.getHasStandaloneExpansion(\n      state\n    ),\n    availableCards,\n    allMarketSetups: getCustomAndPredefined(state),\n    randomCards: supplyIds?.map((supplyId) => ({\n      ...selectors.Settings.Expansions.Cards.content.getById(state, {\n        id: supplyId.id,\n      }),\n      blueprintId: supplyId.blueprintId,\n    })),\n    lockedCards,\n  }\n}\n\nconst mapDispatchToProps = {\n  createMarket: actions.Randomizer.Supply.RandomSetup.createMarket,\n  resetMarket: actions.Randomizer.Supply.RandomSetup.resetMarket,\n  toggleLock: actions.Randomizer.Supply.LockedCards.toggleLock,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Supply = ({\n  allMarketSetups,\n  availableCards,\n  createMarket,\n  hasStandaloneExpansionSelected,\n  resetMarket,\n  randomCards,\n  lockedCards,\n  toggleLock,\n}: Props) => {\n  const [selectedMarketId, selectMarketId] = useState('random')\n\n  const clickHandler = (id: string) => {\n    selectMarketId(id)\n    resetMarket()\n  }\n\n  const tiles = allMarketSetups[selectedMarketId].tiles\n\n  const handleShuffle = () => {\n    createMarket(availableCards, tiles, lockedCards)\n  }\n\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  return (\n    <React.Fragment>\n      <MarketSelect\n        selectedMarketId={selectedMarketId}\n        clickHandler={clickHandler}\n      />\n      <SupplyList\n        lockedCards={lockedCards}\n        toggleLock={toggleLock}\n        tiles={randomCards || tiles}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\"\n        variant=\"extended\"\n        withBottomNav={true}\n        data-test=\"btn-create-market\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Supply))\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyHint = styled(Typography)`\n  margin-top: 24px;\n`\n\nexport default EmptyHint\n","import React from 'react'\n\nimport AmountPicker from 'components/molecules/AmountPicker'\n\ntype Props = {\n  selectedValue: string\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}\n\nconst PlayerAmountPicker = ({ selectedValue, handleAmountChange }: Props) => {\n  return (\n    <AmountPicker\n      label=\"Amount of Players\"\n      selectedValue={selectedValue}\n      handleAmountChange={handleAmountChange}\n      optionsCount={4}\n    />\n  )\n}\n\nexport default React.memo(PlayerAmountPicker)\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nimport TileWrapper from 'components/molecules/Tile/Wrapper'\n\nconst Wrapper = styled(Grid)`\n  ${TileWrapper} {\n    min-height: 148px;\n    min-width: 30px;\n    height: 100%;\n  }\n`\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  font-weight: bold;\n`\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport List from '@material-ui/core/List'\nimport { BasicNemesisCard } from 'aer-types/types'\n\nimport { RootState, selectors } from 'Redux/Store'\n\nimport InfoItem from 'components/molecules/InfoItem'\n\nimport Name from './Name'\n\ntype OwnProps = {\n  nemesisCard: BasicNemesisCard\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  expansions: selectors.Settings.Expansions.Expansions.content.getContent(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps &\n  OwnProps\n\nconst Body = ({ nemesisCard, expansions }: Props) => (\n  <React.Fragment>\n    <Name component=\"p\">{nemesisCard.name}</Name>\n    <List>\n      <InfoItem\n        label=\"Set\"\n        info={expansions.ENG[nemesisCard.expansion]?.name || ''}\n      />\n      <InfoItem label=\"Tier\" info={nemesisCard.tier.toString()} />\n      {nemesisCard.type && <InfoItem label=\"Type\" info={nemesisCard.type} />}\n      {nemesisCard.type === 'Minion' && (\n        <InfoItem label=\"Hp\" info={nemesisCard.hp.toString()} />\n      )}\n    </List>\n  </React.Fragment>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Body))\n","import React, { useCallback } from 'react'\nimport { withTheme } from 'styled-components/macro'\n\nimport { BasicNemesisCard } from 'aer-types/types'\n\nimport { useModal } from 'hooks/useModal'\n\nimport Tile from 'components/molecules/Tile'\nimport BasicNemesisCardModal from 'components/molecules/BasicNemesisCardModal'\n\nimport Wrapper from './Wrapper'\nimport Body from './Body'\n\ntype Props = {\n  nemesisCard: BasicNemesisCard\n  theme: any\n}\n\nconst BasicNemesisCardTile = ({ nemesisCard, theme }: Props) => {\n  const { show, RenderModal } = useModal()\n\n  const handleDetails = useCallback(\n    (e: Event) => {\n      e.stopPropagation()\n      show()\n    },\n    [show]\n  )\n\n  return (\n    <Wrapper item xs={12} sm={6} md={3}>\n      <Tile\n        body={<Body nemesisCard={nemesisCard} />}\n        bgColor={theme.colors.turnOrderCards.nemesis.light}\n        fontColor={theme.colors.text.primary}\n        icon={theme.icons['nemesis']}\n        iconColor={theme.colors.turnOrderCards.nemesis.normal}\n        showDetails={handleDetails}\n      />\n      <BasicNemesisCardModal card={nemesisCard} RenderModal={RenderModal} />\n    </Wrapper>\n  )\n}\n\nexport default withTheme(BasicNemesisCardTile)\n","import styled from 'styled-components/macro'\n\nconst BasicNemesisCardGridWrapper = styled('div')`\n  margin-top: 24px;\n  width: 100%;\n`\n\nexport default BasicNemesisCardGridWrapper\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport * as types from 'aer-types/types'\n\nimport BasicNemesisCardTile from './BasicNemesisCardTile'\nimport BasicNemesisCardGridWrapper from './BasicNemesisCardGridWrapper'\n\nconst renderBasicNemesisCards = (\n  basicNemesisCards: ReadonlyArray<types.BasicNemesisCard>\n) =>\n  basicNemesisCards.map((basicNemesisCard) => (\n    <BasicNemesisCardTile\n      key={basicNemesisCard.id}\n      nemesisCard={basicNemesisCard}\n    />\n  ))\n\ntype Props = {\n  basicNemesisCards: ReadonlyArray<types.BasicNemesisCard>\n}\n\nconst BasicNemesisCardList = React.memo(({ basicNemesisCards }: Props) => (\n  <BasicNemesisCardGridWrapper>\n    <Grid container spacing={16}>\n      {renderBasicNemesisCards(basicNemesisCards)}\n    </Grid>\n  </BasicNemesisCardGridWrapper>\n))\n\nexport default BasicNemesisCardList\n","import React from 'react'\n\nimport * as types from 'aer-types/types'\n\nimport SectionHeadline from 'components/atoms/SectionHeadline'\n\nimport BasicNemesisCardList from './BasicNemesisCardList'\n\ntype Props = {\n  title: string\n  basicNemesisCards?: ReadonlyArray<types.BasicNemesisCard>\n}\n\nconst Tier = ({ title, basicNemesisCards }: Props) => {\n  return (\n    <React.Fragment>\n      <SectionHeadline>{title}</SectionHeadline>\n      <BasicNemesisCardList basicNemesisCards={basicNemesisCards || []} />\n    </React.Fragment>\n  )\n}\n\nexport default React.memo(Tier)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from 'Redux/Store'\nimport { PlayerCount } from 'Redux/Store/Randomizer/BasicNemesisCards/PlayerCount'\n\nimport NoSelectedExpansions from 'components/molecules/NoSelectedExpansions'\nimport ShuffleButton from 'components/atoms/ShuffleButton'\n\nimport EmptyHint from './EmptyHint'\nimport PlayerAmountPicker from './PlayerAmountPicker'\nimport Tier from './Tier'\n\nconst mapStateToProps = (state: RootState) => {\n  const basicNemesisCardIds = selectors.Randomizer.BasicNemesisCards.RandomCards.getBasicNemesisCards(\n    state\n  )\n\n  return {\n    hasStandaloneExpansionSelected: selectors.Settings.Expansions.Expansions.getHasStandaloneExpansion(\n      state\n    ),\n    availableBasicNemesisCards: selectors.Settings.Expansions.getSelectedBasicNemesisCardsForSelectedExpansions(\n      state\n    ),\n    playerCount: selectors.Randomizer.BasicNemesisCards.PlayerCount.getCount(\n      state\n    ),\n    randomBasicNemesisCards: {\n      Tier1: basicNemesisCardIds.Tier1.map(basicNemesisCardId =>\n        selectors.Settings.Expansions.BasicNemesisCards.content.getById(state, {\n          id: basicNemesisCardId.id,\n        })\n      ),\n      Tier2: basicNemesisCardIds.Tier2.map(basicNemesisCardId =>\n        selectors.Settings.Expansions.BasicNemesisCards.content.getById(state, {\n          id: basicNemesisCardId.id,\n        })\n      ),\n      Tier3: basicNemesisCardIds.Tier3.map(basicNemesisCardId =>\n        selectors.Settings.Expansions.BasicNemesisCards.content.getById(state, {\n          id: basicNemesisCardId.id,\n        })\n      ),\n    },\n  }\n}\n\nconst mapDispatchToProps = {\n  createDeck:\n    actions.Randomizer.BasicNemesisCards.RandomCards.createBasicNemesisCardDeck,\n  setPlayerCount: actions.Randomizer.BasicNemesisCards.PlayerCount.setCount,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst BasicNemesisCards = ({\n  hasStandaloneExpansionSelected,\n  availableBasicNemesisCards,\n  createDeck,\n  randomBasicNemesisCards,\n  playerCount,\n  setPlayerCount,\n}: Props) => {\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  const handleRandomization = () => {\n    createDeck(availableBasicNemesisCards, playerCount)\n  }\n\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerCount(parseInt(event.currentTarget.value) as PlayerCount)\n  }\n\n  const noCardsRolled =\n    randomBasicNemesisCards.Tier1.length < 1 ||\n    randomBasicNemesisCards.Tier2.length < 1 ||\n    randomBasicNemesisCards.Tier3.length < 1\n\n  return (\n    <React.Fragment>\n      <PlayerAmountPicker\n        selectedValue={playerCount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {noCardsRolled ? (\n        <EmptyHint>Tab button to draw new basic nemesis cards!</EmptyHint>\n      ) : (\n        <>\n          <Tier\n            title=\"Tier 1\"\n            basicNemesisCards={randomBasicNemesisCards.Tier1}\n          />\n          <Tier\n            title=\"Tier 2\"\n            basicNemesisCards={randomBasicNemesisCards.Tier2}\n          />\n          <Tier\n            title=\"Tier 3\"\n            basicNemesisCards={randomBasicNemesisCards.Tier3}\n          />\n        </>\n      )}\n\n      <ShuffleButton\n        onClick={handleRandomization}\n        color=\"primary\"\n        variant=\"extended\"\n        withBottomNav={true}\n      >\n        Draw basic nemesis cards\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BasicNemesisCards))\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport BottomNavigation from 'components/molecules/BottomNavigation'\n\nimport Nemeses from './Nemeses'\nimport Mages from './Mages'\nimport Supply from './Supply'\nimport BasicNemesisCards from './BasicNemesisCards'\n\nconst Randomizer = () => {\n  return (\n    <>\n      <Switch>\n        <Redirect exact={true} from=\"/randomizer/\" to=\"/randomizer/nemesis\" />\n        <Redirect exact={true} from=\"/nemesis\" to=\"/randomizer/nemesis\" />\n\n        <Route exact={true} path=\"/randomizer/nemesis\" component={Nemeses} />\n        <Route\n          exact={true}\n          path=\"/randomizer/basic-nemesis-cards\"\n          component={BasicNemesisCards}\n        />\n        <Route exact={true} path=\"/randomizer/mages\" component={Mages} />\n        <Route exact={true} path=\"/randomizer/supply\" component={Supply} />\n      </Switch>\n      <BottomNavigation />\n    </>\n  )\n}\n\nexport default React.memo(Randomizer)\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport About from 'components/pages/About'\nimport Settings from 'components/pages/Settings'\nimport ContentCustomization from 'components/pages/Settings/Expansions/ContentCustomization'\nimport TurnOrder from 'components/pages/TurnOrder'\nimport Expeditions from 'components/pages/Expeditions'\nimport Expedition from 'components/pages/Expeditions/Expedition'\nimport Randomizer from 'components/pages/Randomizer'\n\ntype Props = {}\n\nconst Routing = (props: Props) => {\n  return (\n    <Switch>\n      <Redirect exact={true} from=\"/\" to=\"/randomizer/\" />\n      <Redirect exact={true} from=\"/nemesis\" to=\"/randomizer/nemesis\" />\n      <Route path=\"/randomizer/\" component={Randomizer} />\n      <Route exact={true} path=\"/turnorder\" component={TurnOrder} />\n      <Route exact={true} path=\"/about\" component={About} />\n      <Route\n        exact={true}\n        path=\"/settings/expansions/:id\"\n        render={props => (\n          <ContentCustomization expansionId={props.match.params.id} />\n        )}\n      />\n      <Route exact={true} path=\"/settings\" component={Settings} />\n      <Route\n        exact={true}\n        path=\"/expeditions/:id\"\n        render={props => <Expedition id={props.match.params.id} />}\n      />\n      <Route exact={true} path=\"/expeditions\" component={Expeditions} />\n    </Switch>\n  )\n}\n\nexport default React.memo(Routing)\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport HeaderPlaceholder from './HeaderPlaceholder'\nimport Wrapper from './Wrapper'\n\nimport Routing from './Routing'\n\ntype Props = {\n  isLoading: boolean\n}\n\nconst Content = ({ isLoading }: Props) => (\n  <Wrapper isLoading={isLoading}>\n    <HeaderPlaceholder />\n    {isLoading ? <CircularProgress /> : <Routing />}\n  </Wrapper>\n)\n\nexport default React.memo(Content)\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Title = styled(Typography)``\n\nexport default Title\n","import styled from 'styled-components/macro'\nimport MuiAppBar from '@material-ui/core/AppBar'\n\n// eslint-disable-next-line no-unexpected-multiline\nconst AppBar = styled(MuiAppBar)`\n  position: fixed;\n`\n\nexport default AppBar\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport MuiIconButton from 'components/atoms/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\ntype WrapperProps = {\n  drawerIsOpen: boolean\n}\n\nconst Wrapper = styled('div')<WrapperProps>`\n  margin-left: 12px;\n  margin-right: 20px;\n\n  color: #fff;\n\n  ${props => (props.drawerIsOpen ? `display: none;` : '')}\n`\n\nconst IconButton = styled(MuiIconButton)`\n  color: #fff;\n`\n\ntype Props = {\n  drawerIsOpen: boolean\n  onClick: () => void\n}\n\nconst MenuButton = ({ drawerIsOpen, onClick }: Props) => (\n  <Wrapper drawerIsOpen={drawerIsOpen}>\n    <IconButton aria-label=\"Menu\" onClick={onClick}>\n      <MenuIcon />\n    </IconButton>\n  </Wrapper>\n)\n\nexport default MenuButton\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Toolbar from '@material-ui/core/Toolbar'\n\nimport Title from './Title'\nimport AppBar from './AppBar'\nimport MenuButton from './MenuButton'\n\ntype Props = {\n  drawerIsOpen: boolean\n  toggleDrawer: () => void\n}\n\nconst TopBar = ({ drawerIsOpen, toggleDrawer }: Props) => (\n  <AppBar>\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <MenuButton drawerIsOpen={drawerIsOpen} onClick={toggleDrawer} />\n      <Title variant=\"h6\" color=\"inherit\">\n        <Switch>\n          <Route path=\"/randomizer/nemesis\" render={() => 'Nemesis'} />\n          <Route\n            path=\"/randomizer/basic-nemesis-cards\"\n            render={() => 'Basic Nemesis Cards'}\n          />\n          <Route path=\"/randomizer/mages\" render={() => 'Mages'} />\n          <Route path=\"/randomizer/supply\" render={() => 'Supply'} />\n          <Route path=\"/turnorder\" render={() => 'Turn Order'} />\n          <Route path=\"/about\" render={() => 'About'} />\n          <Route\n            path=\"/settings/expansions/:id\"\n            render={() => 'Settings: Expansions'}\n          />\n          <Route path=\"/settings\" render={() => 'Settings'} />\n          <Route path=\"/expeditions/:id\" render={() => 'Expeditions'} />\n          <Route path=\"/expeditions\" render={() => 'Expeditions'} />\n        </Switch>\n      </Title>\n    </Toolbar>\n  </AppBar>\n)\n\nexport default React.memo(TopBar)\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport A from '../atoms/A'\n\ntype Props = {\n  text: string\n  to: string\n  children: any\n  onClick?: () => void\n}\n\nconst Link = ({ text, to, children, onClick }: Props) => (\n  <A to={to}>\n    <ListItem button key={text} onClick={onClick}>\n      <ListItemIcon>{children}</ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  </A>\n)\n\nexport default React.memo(Link)\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport InfoIcon from '@material-ui/icons/Info'\nimport List from '@material-ui/core/List'\n\nimport Link from './Link'\n\ntype Props = {\n  clickHandler: () => void\n}\n\nconst Navigation = ({ clickHandler }: Props) => (\n  <List>\n    <Link text=\"Randomizer\" to=\"/randomizer/nemesis\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-perspective-dice-random\" />\n    </Link>\n    <Link text=\"Turn Order\" to=\"/turnorder\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-player-lift\" />\n    </Link>\n    <Link text=\"Expeditions\" to=\"/expeditions\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-raven\" />\n    </Link>\n    <Link text=\"Settings\" to=\"/settings\" onClick={clickHandler}>\n      <BuildIcon\n        style={{\n          width: '0.9em',\n        }}\n      />\n    </Link>\n    <Link text=\"About\" to=\"/about\" onClick={clickHandler}>\n      <InfoIcon\n        style={{\n          width: '0.9em',\n        }}\n      />\n    </Link>\n  </List>\n)\n\nexport default React.memo(Navigation)\n","import styled from 'styled-components/macro'\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  justify-content: flex-end;\n\n  min-height: 56px;\n\n  @media (min-width: 0px) and (orientation: landscape) {\n    min-height: 48px;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 64px;\n  }\n`\n\nexport default Header\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst AppInfo = styled(Typography)`\n  margin: ${props => props.theme.spacing.unit * 2}px;\n`\n\nexport default AppInfo\n","import styled from 'styled-components/macro'\nimport Link from '@material-ui/core/Link'\n\nconst GithHubLink = styled(Link)`\n  display: block;\n  line-height: 24px;\n  margin-top: ${props => props.theme.spacing.unit * 2}px;\n`\n\nexport default GithHubLink\n","import styled from 'styled-components/macro'\n\nconst GitHubLogo = styled('img')`\n  width: 24px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: ${props => props.theme.spacing.unit}px;\n`\n\nexport default GitHubLogo\n","import styled from 'styled-components/macro'\nimport MuiDrawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Drawer = styled(MuiDrawer)`\n  width: 240px;\n`\n\n// FIXME remove withStyles call\nexport default withStyles({\n  paper: {\n    width: 240,\n  },\n})(Drawer)\n","export default __webpack_public_path__ + \"static/media/github-logo.9c0b26d3.svg\";","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\nimport IconButton from 'components/atoms/IconButton'\nimport Navigation from 'components/molecules/Navigation'\n\nimport Header from './Header'\nimport AppInfo from './AppInfo'\nimport GitHubLink from './GitHubLink'\nimport GitHubLogo from './GitHubLogo'\nimport Drawer from './Drawer'\nimport GitHubSvg from './github-logo.svg'\n\ntype Props = {\n  drawerIsOpen: boolean\n  toggleDrawer: () => void\n}\n\nconst DrawerMenu = ({ drawerIsOpen, toggleDrawer }: Props) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"temporary\"\n    anchor=\"left\"\n  >\n    <Header>\n      <IconButton onClick={toggleDrawer}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </Header>\n    <Divider />\n    <Navigation clickHandler={toggleDrawer} />\n    <Divider />\n    <AppInfo>\n      Version: {process.env.REACT_APP_VERSION}\n      <GitHubLink\n        href=\"https://github.com/on3iro/aeons-end-randomizer\"\n        color=\"inherit\"\n        target=\"_blank\"\n      >\n        <GitHubLogo src={GitHubSvg} alt=\"SVG: Github logo\" />\n        Github\n      </GitHubLink>\n    </AppInfo>\n  </Drawer>\n)\n\nexport default React.memo(DrawerMenu)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../Redux/Store'\n\nimport Content from '../organisms/Content'\nimport TopBar from '../organisms/TopBar'\nimport DrawerMenu from '../organisms/DrawerMenu'\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoading: selectors.Main.ContentLoading.getIsLoading(state),\n})\n\nconst mapDispatchToProps = {\n  getUserConfiguration: actions.Main.getUserConfiguration,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst MainApp = ({ getUserConfiguration, isLoading }: Props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  useEffect(() => {\n    getUserConfiguration()\n  }, [getUserConfiguration])\n\n  return (\n    <React.Fragment>\n      <TopBar drawerIsOpen={drawerIsOpen} toggleDrawer={toggleDrawer} />\n      <DrawerMenu drawerIsOpen={drawerIsOpen} toggleDrawer={toggleDrawer} />\n      <Content isLoading={isLoading} />\n      <div id=\"modal-root\" />\n    </React.Fragment>\n  )\n}\n\nMainApp.displayName = 'MainApp'\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(MainApp))\n","import styled from 'styled-components/macro'\n\nconst Wrapper = styled('div')`\n  height: 100%;\n  padding-bottom: 72px;\n`\n\nexport default Wrapper\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components/macro'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\n\nimport { mainTheme, muiTheme } from '../../mainTheme'\n\nimport MainApp from './MainApp'\nimport Wrapper from './Wrapper'\n\nconst App = () => (\n  <ThemeProvider theme={mainTheme}>\n    <MuiThemeProvider theme={muiTheme}>\n      <Router>\n        <Wrapper>\n          <CssBaseline />\n          <MainApp />\n        </Wrapper>\n      </Router>\n    </MuiThemeProvider>\n  </ThemeProvider>\n)\n\nexport default React.memo(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import 'core-js/stable'\nimport 'regenerator-runtime/runtime'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport JssProvider from 'react-jss/lib/JssProvider'\n\n// @ts-ignore\nimport { create } from 'jss'\n\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './Redux/configureStore'\nimport { initialState } from './Redux/Store'\n\nconst store = configureStore(initialState)\n\nconst generateClassName = createGenerateClassName()\n// @ts-ignore\nconst jss = create({\n  ...jssPreset(),\n  // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n  insertionPoint: document.getElementById('jss-insertion-point'),\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <JssProvider jss={jss} generateClassName={generateClassName}>\n      <App />\n    </JssProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// @ts-ignore\nserviceWorker.register()\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { install, StoreCreator } from 'redux-loop'\n\nimport { RootReducer, RootState } from './Store'\n\nconst configureStore = (initialState: RootState) => {\n  // Add middleware to this array if necessary\n  const middleWares: any[] = []\n\n  const enhancers = [applyMiddleware(...middleWares), install<RootState>()]\n\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      // @ts-ignore\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 })\n      : compose\n\n  const enhancedCreateStore = createStore as StoreCreator\n  const store = enhancedCreateStore(\n    RootReducer,\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  return store\n}\n\nexport { configureStore as default }\n"],"sourceRoot":""}